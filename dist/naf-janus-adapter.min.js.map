{"version":3,"file":"naf-janus-adapter.min.js","mappings":";qBAOA,SAASA,EAAkBC,GACzBC,KAAKD,QAAUA,EACfC,KAAKC,QAAKC,CACZ,CAyDA,SAASC,EAAaC,EAAQC,GAC5BL,KAAKI,OAASA,EACdJ,KAAKC,QAAKC,EACVF,KAAKM,SAAW,EAChBN,KAAKO,KAAO,CAAC,EACbP,KAAKQ,cAAgB,CAAC,EACtBR,KAAKK,QAAUI,OAAOC,OAAO,CAC3BC,SAAS,EACTC,UAAW,IACXC,YAAa,KACZR,EACL,CAjEAP,EAAkBgB,UAAUC,OAAS,SAASC,EAAQC,GACpD,IAAIC,EAAU,CAAEF,OAAQA,EAAQC,WAAYA,EAAY,gBAAgB,EAAM,kBAAkB,GAChG,OAAOjB,KAAKD,QAAQoB,KAAK,SAAUD,GAASE,MAAKC,IAC/CrB,KAAKC,GAAKoB,EAAKC,KAAKrB,GACboB,IAEX,EAGAvB,EAAkBgB,UAAUS,OAAS,WACnC,OAAOvB,KAAKmB,KAAK,SACnB,EAKArB,EAAkBgB,UAAUU,GAAK,SAASC,EAAIC,GAC5C,OAAO1B,KAAKD,QAAQyB,GAAGC,GAAIE,IACrBA,EAAOC,QAAU5B,KAAKC,IACxByB,EAASC,EACX,GAEJ,EAOA7B,EAAkBgB,UAAUK,KAAO,SAASU,EAAMF,GAChD,OAAO3B,KAAKD,QAAQoB,KAAKU,EAAMpB,OAAOC,OAAO,CAAEoB,UAAW9B,KAAKC,IAAM0B,GACvE,EAGA7B,EAAkBgB,UAAUiB,YAAc,SAASC,GACjD,OAAOhC,KAAKmB,KAAK,UAAW,CAAEa,KAAMA,GACtC,EAGAlC,EAAkBgB,UAAUmB,SAAW,SAASC,GAC9C,OAAOlC,KAAKmB,KAAK,UAAW,CAAEa,KAAM,CAAC,EAAGE,KAAMA,GAChD,EAGApC,EAAkBgB,UAAUqB,YAAc,SAASC,GACjD,OAAOpC,KAAKmB,KAAK,UAAW,CAAEiB,UAAWA,GAC3C,EAsBAjC,EAAaW,UAAUuB,OAAS,WAC9B,OAAOrC,KAAKmB,KAAK,UAAUC,MAAKC,IAC9BrB,KAAKC,GAAKoB,EAAKC,KAAKrB,GACboB,IAEX,EAMAlB,EAAaW,UAAUwB,QAAU,WAC/B,OAAOtC,KAAKmB,KAAK,WAAWC,MAAMC,IAChCrB,KAAKuC,UACElB,IAEX,EAMAlB,EAAaW,UAAUyB,QAAU,WAG/B,IAAK,IAAIC,KAFTxC,KAAKyC,iBACLzC,KAAKQ,cAAgB,CAAC,EACLR,KAAKO,KACpB,GAAIP,KAAKO,KAAKmC,eAAeF,GAAO,CAClC,IAAIG,EAAM3C,KAAKO,KAAKiC,GACpBI,aAAaD,EAAIE,SACjBF,EAAIG,OAAO,IAAIC,MAAM,uCACd/C,KAAKO,KAAKiC,EACnB,CAEJ,EAMArC,EAAaW,UAAUkC,QAAU,SAASrB,GACxC,MAAwB,UAAjBA,EAAOsB,KAChB,EAKA9C,EAAaW,UAAUU,GAAK,SAASC,EAAIC,GACvC,IAAIwB,EAAWlD,KAAKQ,cAAciB,GAClB,MAAZyB,IACFA,EAAWlD,KAAKQ,cAAciB,GAAM,IAEtCyB,EAASC,KAAKzB,EAChB,EAUAvB,EAAaW,UAAUsC,QAAU,SAASzB,GACpC3B,KAAKK,QAAQM,SACfX,KAAKqD,aAAa1B,GAEhBA,EAAO2B,YAActD,KAAKC,IAC5BsD,QAAQC,KAAK,kEAAoE7B,EAAO2B,WAAa,cAAgBtD,KAAKC,GAAK,KAGjI,IAAIwD,EAAe9B,EAAOsB,MACtBC,EAAWlD,KAAKQ,cAAciD,GAClC,GAAgB,MAAZP,EACF,IAAK,IAAIQ,EAAI,EAAGA,EAAIR,EAASS,OAAQD,IACnCR,EAASQ,GAAG/B,GAIhB,GAA0B,MAAtBA,EAAOiC,YAAqB,CAC9B,IAAIjB,EAAM3C,KAAKO,KAAKoB,EAAOiC,aAC3B,GAAW,MAAPjB,EAGF,OAGF,GAAqB,QAAjBc,GAAsC,WAAZd,EAAId,KAGhC,OAGFe,aAAaD,EAAIE,gBAEV7C,KAAKO,KAAKoB,EAAOiC,cACvB5D,KAAKgD,QAAQrB,GAAUgB,EAAIG,OAASH,EAAIkB,SAASlC,EACpD,CACF,EAOAxB,EAAaW,UAAUK,KAAO,SAASU,EAAMF,GAE3C,OADAA,EAASlB,OAAOC,OAAO,CAAEkD,aAAc5D,KAAKM,YAAYwD,YAAcnC,GAC/D,IAAIoC,SAAQ,CAACF,EAASf,KAC3B,IAAID,EAAU,KACV7C,KAAKK,QAAQO,YACfiC,EAAUmB,YAAW,YACZhE,KAAKO,KAAKoB,EAAOiC,aACxBd,EAAO,IAAIC,MAAM,oCAAsCpB,EAAOiC,YAAc,eAAe,GAC1F5D,KAAKK,QAAQO,YAElBZ,KAAKO,KAAKoB,EAAOiC,aAAe,CAAEC,QAASA,EAASf,OAAQA,EAAQD,QAASA,EAAShB,KAAMA,GAC5F7B,KAAKiE,UAAUpC,EAAMF,EAAO,GAEhC,EAEAxB,EAAaW,UAAUmD,UAAY,SAASpC,EAAMF,GAChDA,EAASlB,OAAOC,OAAO,CAAEuC,MAAOpB,GAAQF,GAEzB,MAAX3B,KAAKC,KACP0B,EAASlB,OAAOC,OAAO,CAAE4C,WAAYtD,KAAKC,IAAM0B,IAG9C3B,KAAKK,QAAQM,SACfX,KAAKkE,aAAavC,GAGpB3B,KAAKI,OAAO+D,KAAKC,UAAUzC,IAC3B3B,KAAKqE,iBACP,EAEAlE,EAAaW,UAAUoD,aAAe,SAASvC,GAC7C,IAAI2C,EAAO3C,EAAOsB,MACL,YAATqB,GAAsB3C,EAAOO,OAC/BoC,EAAO3C,EAAOO,KAAKL,MAErB,IAAI0C,EAAU,qBAAuBD,GAAQ,UAAY,MAAQ3C,EAAOiC,YAAc,MACtFL,QAAQiB,MAAM,KAAOD,EAAS,cAAe5C,EAC/C,EAEAxB,EAAaW,UAAUuC,aAAe,SAAS1B,GAC7C,IAAI2C,EAAO3C,EAAOsB,MACdsB,EAAU5C,EAAOiC,YACjB,qBAAuBU,GAAQ,UAAY,MAAQ3C,EAAOiC,YAAc,MACxE,qBAAuBU,GAAQ,UAAY,KAC/Cf,QAAQiB,MAAM,KAAOD,EAAS,cAAe5C,EAC/C,EAEAxB,EAAaW,UAAU2D,eAAiB,WACtC,OAAOzE,KAAKmB,KAAK,YACnB,EAEAhB,EAAaW,UAAU2B,eAAiB,WACtCG,aAAa5C,KAAK0E,iBACpB,EAEAvE,EAAaW,UAAUuD,gBAAkB,WACvCrE,KAAKyC,iBACDzC,KAAKK,QAAQQ,cACfb,KAAK0E,iBAAmBV,YAAW,KACjChE,KAAKyE,iBAAiBE,OAAMC,GAAKrB,QAAQsB,MAAM,kCAAmCD,IAAG,GACpF5E,KAAKK,QAAQQ,aAEpB,EAEAiE,EAAOC,QAAU,CACfjF,oBACAK,uqBC1PF6E,EAAA,kBAAAD,CAAA,MAAAA,EAAA,GAAAE,EAAAxE,OAAAK,UAAAoE,EAAAD,EAAAvC,eAAAyC,EAAA1E,OAAA0E,gBAAA,SAAAC,EAAAC,EAAAC,GAAAF,EAAAC,GAAAC,EAAAC,KAAA,EAAAC,EAAA,mBAAAC,OAAAA,OAAA,GAAAC,EAAAF,EAAAG,UAAA,aAAAC,EAAAJ,EAAAK,eAAA,kBAAAC,EAAAN,EAAAO,aAAA,yBAAAC,EAAAZ,EAAAC,EAAAE,GAAA,OAAA9E,OAAA0E,eAAAC,EAAAC,EAAA,CAAAE,MAAAA,EAAAU,YAAA,EAAAC,cAAA,EAAAC,UAAA,IAAAf,EAAAC,EAAA,KAAAW,EAAA,aAAAI,GAAAJ,EAAA,SAAAZ,EAAAC,EAAAE,GAAA,OAAAH,EAAAC,GAAAE,CAAA,WAAAc,EAAAC,EAAAC,EAAAC,EAAAC,GAAA,IAAAC,EAAAH,GAAAA,EAAAzF,qBAAA6F,EAAAJ,EAAAI,EAAAC,EAAAnG,OAAA4B,OAAAqE,EAAA5F,WAAA+F,EAAA,IAAAC,EAAAL,GAAA,WAAAtB,EAAAyB,EAAA,WAAArB,MAAAwB,EAAAT,EAAAE,EAAAK,KAAAD,CAAA,UAAAI,EAAAC,EAAA7B,EAAA8B,GAAA,WAAArF,KAAA,SAAAqF,IAAAD,EAAAE,KAAA/B,EAAA8B,GAAA,OAAAd,GAAA,OAAAvE,KAAA,QAAAqF,IAAAd,EAAA,EAAArB,EAAAsB,KAAAA,EAAA,IAAAe,EAAA,YAAAT,IAAA,UAAAU,IAAA,UAAAC,IAAA,KAAAC,EAAA,GAAAvB,EAAAuB,EAAA7B,GAAA,8BAAA8B,EAAA/G,OAAAgH,eAAAC,EAAAF,GAAAA,EAAAA,EAAAG,EAAA,MAAAD,GAAAA,IAAAzC,GAAAC,EAAAiC,KAAAO,EAAAhC,KAAA6B,EAAAG,GAAA,IAAAE,EAAAN,EAAAxG,UAAA6F,EAAA7F,UAAAL,OAAA4B,OAAAkF,GAAA,SAAAM,EAAA/G,GAAA,0BAAAgH,SAAA,SAAAC,GAAA/B,EAAAlF,EAAAiH,GAAA,SAAAb,GAAA,YAAAc,QAAAD,EAAAb,EAAA,gBAAAe,EAAArB,EAAAsB,GAAA,SAAAC,EAAAJ,EAAAb,EAAArD,EAAAf,GAAA,IAAAsF,EAAApB,EAAAJ,EAAAmB,GAAAnB,EAAAM,GAAA,aAAAkB,EAAAvG,KAAA,KAAAwG,EAAAD,EAAAlB,IAAA3B,EAAA8C,EAAA9C,MAAA,OAAAA,GAAA,UAAA+C,EAAA/C,IAAAL,EAAAiC,KAAA5B,EAAA,WAAA2C,EAAArE,QAAA0B,EAAAgD,SAAAnH,MAAA,SAAAmE,GAAA4C,EAAA,OAAA5C,EAAA1B,EAAAf,EAAA,aAAAsD,GAAA+B,EAAA,QAAA/B,EAAAvC,EAAAf,EAAA,IAAAoF,EAAArE,QAAA0B,GAAAnE,MAAA,SAAAoH,GAAAH,EAAA9C,MAAAiD,EAAA3E,EAAAwE,EAAA,aAAAxD,GAAA,OAAAsD,EAAA,QAAAtD,EAAAhB,EAAAf,EAAA,IAAAA,EAAAsF,EAAAlB,IAAA,KAAAuB,EAAAtD,EAAA,gBAAAI,MAAA,SAAAwC,EAAAb,GAAA,SAAAwB,IAAA,WAAAR,GAAA,SAAArE,EAAAf,GAAAqF,EAAAJ,EAAAb,EAAArD,EAAAf,EAAA,WAAA2F,EAAAA,EAAAA,EAAArH,KAAAsH,EAAAA,GAAAA,GAAA,aAAA3B,EAAAT,EAAAE,EAAAK,GAAA,IAAA8B,EAAA,iCAAAZ,EAAAb,GAAA,iBAAAyB,EAAA,UAAA5F,MAAA,iDAAA4F,EAAA,cAAAZ,EAAA,MAAAb,EAAA,OAAA3B,WAAArF,EAAA0I,MAAA,OAAA/B,EAAAkB,OAAAA,EAAAlB,EAAAK,IAAAA,IAAA,KAAA2B,EAAAhC,EAAAgC,SAAA,GAAAA,EAAA,KAAAC,EAAAC,EAAAF,EAAAhC,GAAA,GAAAiC,EAAA,IAAAA,IAAA1B,EAAA,gBAAA0B,CAAA,cAAAjC,EAAAkB,OAAAlB,EAAAmC,KAAAnC,EAAAoC,MAAApC,EAAAK,SAAA,aAAAL,EAAAkB,OAAA,uBAAAY,EAAA,MAAAA,EAAA,YAAA9B,EAAAK,IAAAL,EAAAqC,kBAAArC,EAAAK,IAAA,gBAAAL,EAAAkB,QAAAlB,EAAAsC,OAAA,SAAAtC,EAAAK,KAAAyB,EAAA,gBAAAP,EAAApB,EAAAV,EAAAE,EAAAK,GAAA,cAAAuB,EAAAvG,KAAA,IAAA8G,EAAA9B,EAAA+B,KAAA,6BAAAR,EAAAlB,MAAAE,EAAA,gBAAA7B,MAAA6C,EAAAlB,IAAA0B,KAAA/B,EAAA+B,KAAA,WAAAR,EAAAvG,OAAA8G,EAAA,YAAA9B,EAAAkB,OAAA,QAAAlB,EAAAK,IAAAkB,EAAAlB,IAAA,YAAA6B,EAAAF,EAAAhC,GAAA,IAAAuC,EAAAvC,EAAAkB,OAAAA,EAAAc,EAAAlD,SAAAyD,GAAA,QAAAlJ,IAAA6H,EAAA,OAAAlB,EAAAgC,SAAA,eAAAO,GAAAP,EAAAlD,SAAA,SAAAkB,EAAAkB,OAAA,SAAAlB,EAAAK,SAAAhH,EAAA6I,EAAAF,EAAAhC,GAAA,UAAAA,EAAAkB,SAAA,WAAAqB,IAAAvC,EAAAkB,OAAA,QAAAlB,EAAAK,IAAA,IAAAmC,UAAA,oCAAAD,EAAA,aAAAhC,EAAA,IAAAgB,EAAApB,EAAAe,EAAAc,EAAAlD,SAAAkB,EAAAK,KAAA,aAAAkB,EAAAvG,KAAA,OAAAgF,EAAAkB,OAAA,QAAAlB,EAAAK,IAAAkB,EAAAlB,IAAAL,EAAAgC,SAAA,KAAAzB,EAAA,IAAAkC,EAAAlB,EAAAlB,IAAA,OAAAoC,EAAAA,EAAAV,MAAA/B,EAAAgC,EAAAU,YAAAD,EAAA/D,MAAAsB,EAAA2C,KAAAX,EAAAY,QAAA,WAAA5C,EAAAkB,SAAAlB,EAAAkB,OAAA,OAAAlB,EAAAK,SAAAhH,GAAA2G,EAAAgC,SAAA,KAAAzB,GAAAkC,GAAAzC,EAAAkB,OAAA,QAAAlB,EAAAK,IAAA,IAAAmC,UAAA,oCAAAxC,EAAAgC,SAAA,KAAAzB,EAAA,UAAAsC,EAAAC,GAAA,IAAAC,EAAA,CAAAC,OAAAF,EAAA,SAAAA,IAAAC,EAAAE,SAAAH,EAAA,SAAAA,IAAAC,EAAAG,WAAAJ,EAAA,GAAAC,EAAAI,SAAAL,EAAA,SAAAM,WAAA9G,KAAAyG,EAAA,UAAAM,EAAAN,GAAA,IAAAxB,EAAAwB,EAAAO,YAAA,GAAA/B,EAAAvG,KAAA,gBAAAuG,EAAAlB,IAAA0C,EAAAO,WAAA/B,CAAA,UAAAtB,EAAAL,GAAA,KAAAwD,WAAA,EAAAJ,OAAA,SAAApD,EAAAqB,QAAA4B,EAAA,WAAAU,OAAA,YAAAzC,EAAA0C,GAAA,GAAAA,EAAA,KAAAC,EAAAD,EAAA3E,GAAA,GAAA4E,EAAA,OAAAA,EAAAnD,KAAAkD,GAAA,sBAAAA,EAAAb,KAAA,OAAAa,EAAA,IAAAE,MAAAF,EAAA1G,QAAA,KAAAD,GAAA,EAAA8F,EAAA,SAAAA,IAAA,OAAA9F,EAAA2G,EAAA1G,QAAA,GAAAuB,EAAAiC,KAAAkD,EAAA3G,GAAA,OAAA8F,EAAAjE,MAAA8E,EAAA3G,GAAA8F,EAAAZ,MAAA,EAAAY,EAAA,OAAAA,EAAAjE,WAAArF,EAAAsJ,EAAAZ,MAAA,EAAAY,CAAA,SAAAA,EAAAA,KAAAA,CAAA,SAAAA,KAAAgB,EAAA,UAAAA,IAAA,OAAAjF,WAAArF,EAAA0I,MAAA,UAAAvB,EAAAvG,UAAAwG,EAAAnC,EAAAyC,EAAA,eAAArC,MAAA+B,EAAApB,cAAA,IAAAf,EAAAmC,EAAA,eAAA/B,MAAA8B,EAAAnB,cAAA,IAAAmB,EAAAoD,YAAAzE,EAAAsB,EAAAxB,EAAA,qBAAAf,EAAA2F,oBAAA,SAAAC,GAAA,IAAAC,EAAA,mBAAAD,GAAAA,EAAAE,YAAA,QAAAD,IAAAA,IAAAvD,GAAA,uBAAAuD,EAAAH,aAAAG,EAAAE,MAAA,EAAA/F,EAAAgG,KAAA,SAAAJ,GAAA,OAAAlK,OAAAuK,eAAAvK,OAAAuK,eAAAL,EAAArD,IAAAqD,EAAAM,UAAA3D,EAAAtB,EAAA2E,EAAA7E,EAAA,sBAAA6E,EAAA7J,UAAAL,OAAA4B,OAAAuF,GAAA+C,CAAA,EAAA5F,EAAAmG,MAAA,SAAAhE,GAAA,OAAAqB,QAAArB,EAAA,EAAAW,EAAAI,EAAAnH,WAAAkF,EAAAiC,EAAAnH,UAAA8E,GAAA,0BAAAb,EAAAkD,cAAAA,EAAAlD,EAAAoG,MAAA,SAAA7E,EAAAC,EAAAC,EAAAC,EAAAyB,QAAA,IAAAA,IAAAA,EAAAnE,SAAA,IAAAqH,EAAA,IAAAnD,EAAA5B,EAAAC,EAAAC,EAAAC,EAAAC,GAAAyB,GAAA,OAAAnD,EAAA2F,oBAAAnE,GAAA6E,EAAAA,EAAA5B,OAAApI,MAAA,SAAAiH,GAAA,OAAAA,EAAAO,KAAAP,EAAA9C,MAAA6F,EAAA5B,MAAA,KAAA3B,EAAAD,GAAA5B,EAAA4B,EAAA9B,EAAA,aAAAE,EAAA4B,EAAAlC,GAAA,0BAAAM,EAAA4B,EAAA,qDAAA7C,EAAAsG,KAAA,SAAAC,GAAA,IAAAC,EAAA9K,OAAA6K,GAAAD,EAAA,WAAAhG,KAAAkG,EAAAF,EAAAlI,KAAAkC,GAAA,OAAAgG,EAAAG,UAAA,SAAAhC,IAAA,KAAA6B,EAAA1H,QAAA,KAAA0B,EAAAgG,EAAAI,MAAA,GAAApG,KAAAkG,EAAA,OAAA/B,EAAAjE,MAAAF,EAAAmE,EAAAZ,MAAA,EAAAY,CAAA,QAAAA,EAAAZ,MAAA,EAAAY,CAAA,GAAAzE,EAAA4C,OAAAA,EAAAb,EAAAhG,UAAA,CAAA+J,YAAA/D,EAAAsD,MAAA,SAAAsB,GAAA,QAAAC,KAAA,OAAAnC,KAAA,OAAAR,KAAA,KAAAC,WAAA/I,EAAA,KAAA0I,MAAA,OAAAC,SAAA,UAAAd,OAAA,YAAAb,SAAAhH,EAAA,KAAA+J,WAAAnC,QAAAoC,IAAAwB,EAAA,QAAAZ,KAAA,WAAAA,EAAAc,OAAA,IAAA1G,EAAAiC,KAAA,KAAA2D,KAAAP,OAAAO,EAAAe,MAAA,WAAAf,QAAA5K,EAAA,EAAA4L,KAAA,gBAAAlD,MAAA,MAAAmD,EAAA,KAAA9B,WAAA,GAAAE,WAAA,aAAA4B,EAAAlK,KAAA,MAAAkK,EAAA7E,IAAA,YAAA8E,IAAA,EAAA9C,kBAAA,SAAA+C,GAAA,QAAArD,KAAA,MAAAqD,EAAA,IAAApF,EAAA,cAAAqF,EAAAC,EAAAC,GAAA,OAAAhE,EAAAvG,KAAA,QAAAuG,EAAAlB,IAAA+E,EAAApF,EAAA2C,KAAA2C,EAAAC,IAAAvF,EAAAkB,OAAA,OAAAlB,EAAAK,SAAAhH,KAAAkM,CAAA,SAAA1I,EAAA,KAAAuG,WAAAtG,OAAA,EAAAD,GAAA,IAAAA,EAAA,KAAAkG,EAAA,KAAAK,WAAAvG,GAAA0E,EAAAwB,EAAAO,WAAA,YAAAP,EAAAC,OAAA,OAAAqC,EAAA,UAAAtC,EAAAC,QAAA,KAAA8B,KAAA,KAAAU,EAAAnH,EAAAiC,KAAAyC,EAAA,YAAA0C,EAAApH,EAAAiC,KAAAyC,EAAA,iBAAAyC,GAAAC,EAAA,SAAAX,KAAA/B,EAAAE,SAAA,OAAAoC,EAAAtC,EAAAE,UAAA,WAAA6B,KAAA/B,EAAAG,WAAA,OAAAmC,EAAAtC,EAAAG,WAAA,SAAAsC,GAAA,QAAAV,KAAA/B,EAAAE,SAAA,OAAAoC,EAAAtC,EAAAE,UAAA,YAAAwC,EAAA,UAAAvJ,MAAA,kDAAA4I,KAAA/B,EAAAG,WAAA,OAAAmC,EAAAtC,EAAAG,WAAA,KAAAZ,OAAA,SAAAtH,EAAAqF,GAAA,QAAAxD,EAAA,KAAAuG,WAAAtG,OAAA,EAAAD,GAAA,IAAAA,EAAA,KAAAkG,EAAA,KAAAK,WAAAvG,GAAA,GAAAkG,EAAAC,QAAA,KAAA8B,MAAAzG,EAAAiC,KAAAyC,EAAA,oBAAA+B,KAAA/B,EAAAG,WAAA,KAAAwC,EAAA3C,EAAA,OAAA2C,IAAA,UAAA1K,GAAA,aAAAA,IAAA0K,EAAA1C,QAAA3C,GAAAA,GAAAqF,EAAAxC,aAAAwC,EAAA,UAAAnE,EAAAmE,EAAAA,EAAApC,WAAA,UAAA/B,EAAAvG,KAAAA,EAAAuG,EAAAlB,IAAAA,EAAAqF,GAAA,KAAAxE,OAAA,YAAAyB,KAAA+C,EAAAxC,WAAA3C,GAAA,KAAAoF,SAAApE,EAAA,EAAAoE,SAAA,SAAApE,EAAA4B,GAAA,aAAA5B,EAAAvG,KAAA,MAAAuG,EAAAlB,IAAA,gBAAAkB,EAAAvG,MAAA,aAAAuG,EAAAvG,KAAA,KAAA2H,KAAApB,EAAAlB,IAAA,WAAAkB,EAAAvG,MAAA,KAAAmK,KAAA,KAAA9E,IAAAkB,EAAAlB,IAAA,KAAAa,OAAA,cAAAyB,KAAA,kBAAApB,EAAAvG,MAAAmI,IAAA,KAAAR,KAAAQ,GAAA5C,CAAA,EAAAqF,OAAA,SAAA1C,GAAA,QAAArG,EAAA,KAAAuG,WAAAtG,OAAA,EAAAD,GAAA,IAAAA,EAAA,KAAAkG,EAAA,KAAAK,WAAAvG,GAAA,GAAAkG,EAAAG,aAAAA,EAAA,YAAAyC,SAAA5C,EAAAO,WAAAP,EAAAI,UAAAE,EAAAN,GAAAxC,CAAA,kBAAAyC,GAAA,QAAAnG,EAAA,KAAAuG,WAAAtG,OAAA,EAAAD,GAAA,IAAAA,EAAA,KAAAkG,EAAA,KAAAK,WAAAvG,GAAA,GAAAkG,EAAAC,SAAAA,EAAA,KAAAzB,EAAAwB,EAAAO,WAAA,aAAA/B,EAAAvG,KAAA,KAAA6K,EAAAtE,EAAAlB,IAAAgD,EAAAN,EAAA,QAAA8C,CAAA,YAAA3J,MAAA,0BAAA4J,cAAA,SAAAtC,EAAAd,EAAAE,GAAA,YAAAZ,SAAA,CAAAlD,SAAAgC,EAAA0C,GAAAd,WAAAA,EAAAE,QAAAA,GAAA,cAAA1B,SAAA,KAAAb,SAAAhH,GAAAkH,CAAA,GAAArC,CAAA,UAAA6H,EAAAC,EAAAhJ,EAAAf,EAAAgK,EAAAC,EAAA1H,EAAA6B,GAAA,QAAAoC,EAAAuD,EAAAxH,GAAA6B,GAAA3B,EAAA+D,EAAA/D,KAAA,OAAAV,GAAA,YAAA/B,EAAA+B,EAAA,CAAAyE,EAAAV,KAAA/E,EAAA0B,GAAAxB,QAAAF,QAAA0B,GAAAnE,KAAA0L,EAAAC,EAAA,UAAAC,EAAA/F,GAAA,sBAAAT,EAAA,KAAAyG,EAAAC,UAAA,WAAAnJ,SAAA,SAAAF,EAAAf,GAAA,IAAA+J,EAAA5F,EAAAkG,MAAA3G,EAAAyG,GAAA,SAAAH,EAAAvH,GAAAqH,EAAAC,EAAAhJ,EAAAf,EAAAgK,EAAAC,EAAA,OAAAxH,EAAA,UAAAwH,EAAA3G,GAAAwG,EAAAC,EAAAhJ,EAAAf,EAAAgK,EAAAC,EAAA,QAAA3G,EAAA,CAAA0G,OAAA5M,EAAA,cAAAkN,EAAAC,EAAAC,GAAA,QAAA5J,EAAA,EAAAA,EAAA4J,EAAA3J,OAAAD,IAAA,KAAA6J,EAAAD,EAAA5J,GAAA6J,EAAAtH,WAAAsH,EAAAtH,aAAA,EAAAsH,EAAArH,cAAA,YAAAqH,IAAAA,EAAApH,UAAA,GAAA1F,OAAA0E,eAAAkI,QAAAhI,IAAA,SAAAmI,EAAAC,GAAA,cAAAnF,EAAAkF,IAAA,OAAAA,EAAA,OAAAA,EAAA,IAAAE,EAAAF,EAAA/H,OAAAkI,aAAA,QAAAzN,IAAAwN,EAAA,KAAAE,EAAAF,EAAAvG,KAAAqG,EAAAC,UAAA,cAAAnF,EAAAsF,GAAA,OAAAA,EAAA,UAAAvE,UAAA,uDAAAwE,OAAAL,EAAA,CAAAM,CAAAP,EAAAlI,KAAA,WAAAiD,EAAAjD,GAAAA,EAAAwI,OAAAxI,IAAAkI,EAAA,KAAAlI,CAAA,KAAI0I,EAAKC,EAAQ,KACjBD,EAAG5N,aAAaW,UAAUmN,aAAeF,EAAG5N,aAAaW,UAAUK,KACnE4M,EAAG5N,aAAaW,UAAUK,KAAO,SAASU,EAAMF,GAC9C,OAAO3B,KAAKiO,aAAapM,EAAMF,GAAO,OAAO,SAACiD,GAC5C,KAAIA,EAAEL,SAAWK,EAAEL,QAAQ2J,QAAQ,cAAgB,GAIjD,MAAMtJ,EAHNrB,QAAQsB,MAAM,wBACdsJ,IAAIC,WAAWC,QAAQC,WAI3B,GACF,EAEA,IAAIC,EAAWP,EAAQ,KACnBxJ,EAAQwJ,EAAQ,IAARA,CAAiB,2BAEzBnJ,GADOmJ,EAAQ,IAARA,CAAiB,0BAChBA,EAAQ,IAARA,CAAiB,4BACzBQ,EAAW,iCAAiCC,KAAKC,UAAUC,WAO/D,SAASC,EAAYC,EAAKC,GACxB,OAAO,IAAI/K,SAAQ,SAAAF,GACjB,IAAMkL,EAAQC,KAAKC,UAAYH,EAAMD,GAAOA,EAC5C7K,WAAWH,EAASkL,EACtB,GACF,CAEA,SAASG,EAASjI,GAChB,IAAIkI,EAAOpL,QAAQF,UACnB,OAAO,WAAW,IAAAuL,EAAA,KACZnC,EAAOoC,MAAMvO,UAAU+K,MAAM1E,KAAK+F,WACtCiC,EAAOA,EAAK/N,MAAK,SAAAkO,GAAC,OAAIrI,EAAGkG,MAAMiC,EAAMnC,EAAK,GAC5C,CACF,CAMA,SAASsC,EAAqBC,GAC5B,OAAO,IAAIzL,SAAQ,SAACF,EAASf,GAC3B,GAA+B,SAA3B0M,EAAYC,WACd5L,QACK,CACL,IAAI6L,EAAUC,EAERC,EAAQ,WACZJ,EAAYK,oBAAoB,OAAQH,GACxCF,EAAYK,oBAAoB,QAASF,EAC3C,EAEAD,EAAW,WACTE,IACA/L,GACF,EACA8L,EAAW,WACTC,IACA9M,GACF,EAEA0M,EAAYM,iBAAiB,OAAQJ,GACrCF,EAAYM,iBAAiB,QAASH,EACxC,CACF,GACF,CAEA,IAAMI,EAEuE,KAD7DC,SAASC,cAAc,SACxBC,YAAY,8CAGrBC,EAAkB,CAEtBC,OAAQ,EAERC,OAAQ,EAER,eAAgB,GAGZC,EAAiC,CACrCC,WAAY,CAAC,CAAEC,KAAM,iCAAmC,CAAEA,KAAM,mCAK5DC,EAAY,WAChB,SAAAA,KA3FF,SAAAC,EAAAC,GAAA,KAAAD,aAAAC,GAAA,UAAAtH,UAAA,qCA2FgBuH,CAAA,KAAAH,GACZzQ,KAAK6Q,KAAO,KAEZ7Q,KAAK8Q,SAAW,KAChB9Q,KAAK+Q,UAAY,KAEjB/Q,KAAKgR,UAAY,KACjBhR,KAAKiR,cAAgB,CAAC,EACtBjR,KAAKkR,qBAAuB,KAC5BlR,KAAKmR,GAAK,KACVnR,KAAKD,QAAU,KACfC,KAAKoR,kBAAoB,cACzBpR,KAAKqR,oBAAsB,cAI3BrR,KAAKsR,yBAA2B,IAAOtC,KAAKC,SAC5CjP,KAAKuR,kBAAoBvR,KAAKsR,yBAC9BtR,KAAKwR,oBAAsB,KAC3BxR,KAAKyR,wBAA0B,GAC/BzR,KAAK0R,qBAAuB,EAE5B1R,KAAK2R,UAAY,KACjB3R,KAAK4R,YAAc,GACnB5R,KAAK6R,UAAY,CAAC,EAClB7R,KAAK8R,aAAe,CAAC,EACrB9R,KAAK+R,iBAAmB,KACxB/R,KAAKgS,qBAAuB,IAAIC,IAEhCjS,KAAKkS,iBAAmB,IAAIC,IAC5BnS,KAAKoS,mBAAqB,GAC1BpS,KAAKqS,mBAAqB,KAE1BrS,KAAKsS,eAAiB,IAAIL,IAC1BjS,KAAKuS,cAAgB,IAAIN,IAEzBjS,KAAKwS,YAAc,GACnBxS,KAAKyS,mBAAqB,EAC1BzS,KAAK0S,cAAgB,EAErB1S,KAAK2S,gBAAkB3S,KAAK2S,gBAAgBC,KAAK5S,MACjDA,KAAK6S,iBAAmB7S,KAAK6S,iBAAiBD,KAAK5S,MACnDA,KAAK8S,mBAAqB9S,KAAK8S,mBAAmBF,KAAK5S,MACvDA,KAAK+S,qBAAuB/S,KAAK+S,qBAAqBH,KAAK5S,MAC3DA,KAAKgT,OAAShT,KAAKgT,OAAOJ,KAAK5S,KACjC,CAxIF,IAAA2Q,EAAAsC,EAo9BGC,EA3FAC,EAlQAC,EANAC,EAnIAC,EAnHAC,EA9HAC,EA62BA,OA1mCH7C,EAwIGF,EAxIHwC,EAwIG,EAAA5N,IAAA,eAAAE,MAED,SAAakO,GACXzT,KAAKgR,UAAYyC,CACnB,GAAC,CAAApO,IAAA,SAAAE,MAED,SAAOmO,GAAM,GAAC,CAAArO,IAAA,UAAAE,MAEd,SAAQoO,GACN3T,KAAK6Q,KAAO8C,CACd,GAAC,CAAAtO,IAAA,eAAAE,MAED,SAAawL,GACX/Q,KAAK+Q,UAAYA,CACnB,GAAC,CAAA1L,IAAA,cAAAE,MAED,SAAYuL,GACV9Q,KAAK8Q,SAAWA,CAClB,GAAC,CAAAzL,IAAA,mBAAAE,MAED,SAAiBlF,GACfL,KAAKiR,cAAgB5Q,CACvB,GAAC,CAAAgF,IAAA,0BAAAE,MAED,SAAwB2L,GACtBlR,KAAKkR,qBAAuBA,CAC9B,GAAC,CAAA7L,IAAA,4BAAAE,MAED,SAA0BqO,EAAiBC,GACzC7T,KAAK8T,eAAiBF,EACtB5T,KAAK+T,eAAiBF,CACxB,GAAC,CAAAxO,IAAA,0BAAAE,MAED,SAAwByO,GACtBhU,KAAKiU,mBAAqBD,CAC5B,GAAC,CAAA3O,IAAA,0BAAAE,MAED,SAAwB2O,EAAcC,EAAgBC,GACpDpU,KAAKqU,oBAAsBH,EAC3BlU,KAAKsU,uBAAyBH,EAC9BnU,KAAKuU,kBAAoBH,CAC3B,GAAC,CAAA/O,IAAA,2BAAAE,MAED,SAAyBiP,EAAsBC,EAAqBC,GAElE1U,KAAK2U,eAAiBH,EAEtBxU,KAAK4U,cAAgBH,EAErBzU,KAAK6U,oBAAsBH,CAC7B,GAAC,CAAArP,IAAA,gBAAAE,MAED,SAAcuP,GACZ9U,KAAK8U,MAAQA,CACf,GAAC,CAAAzP,IAAA,UAAAE,MAED,WAAU,IAAAwP,EAAA,KACRvQ,EAAM,iBAADwQ,OAAkBhV,KAAKgR,YAE5B,IAAMiE,EAAsB,IAAIlR,SAAQ,SAACF,EAASf,GAChDiS,EAAK5D,GAAK,IAAI+D,UAAUH,EAAK/D,UAAW,kBAExC+D,EAAKhV,QAAU,IAAIgO,EAAG5N,aAAa4U,EAAK5D,GAAGhQ,KAAKyR,KAAKmC,EAAK5D,IAAK,CAAEvQ,UAAW,MAE5EmU,EAAK5D,GAAGrB,iBAAiB,QAASiF,EAAKlC,kBACvCkC,EAAK5D,GAAGrB,iBAAiB,UAAWiF,EAAKjC,oBAEzCiC,EAAKI,SAAW,WACdJ,EAAK5D,GAAGtB,oBAAoB,OAAQkF,EAAKI,UACzCJ,EAAKpC,kBACFvR,KAAKyC,GAAQ,MACPf,EACX,EAEAiS,EAAK5D,GAAGrB,iBAAiB,OAAQiF,EAAKI,SACxC,IAEA,OAAOpR,QAAQqR,IAAI,CAACH,EAAqBjV,KAAKqV,oBAChD,GAAC,CAAAhQ,IAAA,aAAAE,MAED,WACEf,EAAM,iBAEN5B,aAAa5C,KAAKwR,qBAElBxR,KAAKsV,qBAEDtV,KAAK2R,YAEP3R,KAAK2R,UAAU4D,KAAKC,QACpBxV,KAAK2R,UAAY,MAGf3R,KAAKD,UACPC,KAAKD,QAAQwC,UACbvC,KAAKD,QAAU,MAGbC,KAAKmR,KACPnR,KAAKmR,GAAGtB,oBAAoB,OAAQ7P,KAAKmV,UACzCnV,KAAKmR,GAAGtB,oBAAoB,QAAS7P,KAAK6S,kBAC1C7S,KAAKmR,GAAGtB,oBAAoB,UAAW7P,KAAK8S,oBAC5C9S,KAAKmR,GAAGqE,QACRxV,KAAKmR,GAAK,MAMRnR,KAAKyV,0BACP7S,aAAa5C,KAAKyV,yBAClBzV,KAAKyV,wBAA0B,KAEnC,GAAC,CAAApQ,IAAA,iBAAAE,MAED,WACE,OAAmB,OAAZvF,KAAKmR,EACd,GAAC,CAAA9L,IAAA,kBAAAE,OAAAiO,EAAAxG,EAAAhI,IAAA+F,MAED,SAAA2K,IAAA,IAAAhS,EAAAiS,EAAA,OAAA3Q,IAAAqB,MAAA,SAAAuP,GAAA,cAAAA,EAAAjK,KAAAiK,EAAApM,MAAA,cAAAoM,EAAApM,KAAA,EAEQxJ,KAAKD,QAAQsC,SAAQ,cAAAuT,EAAApM,KAAA,EAKJxJ,KAAK6V,kBAAiB,OAA7C7V,KAAK2R,UAASiE,EAAA5M,KAGdhJ,KAAK8T,eAAe9T,KAAK8Q,UAEhBpN,EAAI,EAAC,YAAEA,EAAI1D,KAAK2R,UAAUmE,iBAAiBnS,QAAM,CAAAiS,EAAApM,KAAA,SACH,IAA/CmM,EAAa3V,KAAK2R,UAAUmE,iBAAiBpS,MAChC1D,KAAK8Q,SAAQ,CAAA8E,EAAApM,KAAA,gBAAAoM,EAAAzM,OAAA,uBAChCnJ,KAAK+V,qBAAqBJ,GAAY,QAHoBjS,IAAGkS,EAAApM,KAAA,gBAM/DxJ,KAAKgW,gBAAgB,yBAAAJ,EAAA9J,OAAA,GAAA4J,EAAA,UACtB,kBAAAlC,EAAArG,MAAA,KAAAD,UAAA,KAAA7H,IAAA,mBAAAE,MAED,SAAiB0Q,GAAO,IAAAC,EAAA,KA5LA,MA8LlBD,EAAME,OAIV5S,QAAQC,KAAK,wCACTxD,KAAK2U,gBACP3U,KAAK2U,eAAe3U,KAAKuR,mBAG3BvR,KAAKwR,oBAAsBxN,YAAW,kBAAMkS,EAAK5H,WAAW,GAAEtO,KAAKuR,mBACrE,GAAC,CAAAlM,IAAA,YAAAE,MAED,WAAY,IAAA6Q,EAAA,KAEVpW,KAAKqW,aAELrW,KAAKsW,UACFlV,MAAK,WACJgV,EAAK7E,kBAAoB6E,EAAK9E,yBAC9B8E,EAAK1E,qBAAuB,EAExB0E,EAAKxB,eACPwB,EAAKxB,eAET,IAAE,OACK,SAAA/P,GAIL,GAHAuR,EAAK7E,mBAAqB,IAC1B6E,EAAK1E,uBAED0E,EAAK1E,qBAAuB0E,EAAK3E,yBAA2B2E,EAAKvB,oBACnE,OAAOuB,EAAKvB,oBACV,IAAI9R,MAAM,6FAIdQ,QAAQC,KAAK,qCACbD,QAAQC,KAAKqB,GAETuR,EAAKzB,gBACPyB,EAAKzB,eAAeyB,EAAK7E,mBAG3B6E,EAAK5E,oBAAsBxN,YAAW,kBAAMoS,EAAK9H,WAAW,GAAE8H,EAAK7E,kBACrE,GACJ,GAAC,CAAAlM,IAAA,0BAAAE,MAED,WAA0B,IAAAgR,EAAA,KACpBvW,KAAKyV,yBACP7S,aAAa5C,KAAKyV,yBAGpBzV,KAAKyV,wBAA0BzR,YAAW,WACxCuS,EAAKd,wBAA0B,KAC/Bc,EAAKjI,WACP,GAAG,IACL,GAAC,CAAAjJ,IAAA,qBAAAE,MAED,SAAmB0Q,GACjBjW,KAAKD,QAAQqD,QAAQe,KAAKqS,MAAMP,EAAM3U,MACxC,GAAC,CAAA+D,IAAA,uBAAAE,MAED,SAAqBoQ,IACkC,IAAjD3V,KAAKoS,mBAAmBlE,QAAQyH,IAClC3V,KAAKoS,mBAAmBjP,KAAKwS,EAEjC,GAAC,CAAAtQ,IAAA,0BAAAE,MAED,SAAwBoQ,GACtB,IAAMc,EAAMzW,KAAKoS,mBAAmBlE,QAAQyH,IAC/B,IAATc,GACFzW,KAAKoS,mBAAmBsE,OAAOD,EAAK,EAExC,GAAC,CAAApR,IAAA,gBAAAE,MAED,SAAc8M,GAKZ,GAJIA,IACFrS,KAAKqS,mBAAqBA,GAGvBrS,KAAKqS,mBAAV,CAKA,IAAK,IAAI3O,EAAI,EAAGA,EAAI1D,KAAKqS,mBAAmB1O,OAAQD,IAAK,CACvD,IAAMiS,EAAa3V,KAAKqS,mBAAmB3O,GACtC1D,KAAK6R,UAAU8D,KAAgE,IAAjD3V,KAAKoS,mBAAmBlE,QAAQyH,IAAuB3V,KAAKkS,iBAAiByE,IAAIhB,IAClH3V,KAAK4W,YAAYjB,EAErB,CAGA,IAAK,IAAIkB,EAAI,EAAGA,EAAI7W,KAAKoS,mBAAmBzO,OAAQkT,IAAK,CACvD,IAAMlB,EAAa3V,KAAKoS,mBAAmByE,GACvC7W,KAAK6R,UAAU8D,KAAgE,IAAjD3V,KAAKqS,mBAAmBnE,QAAQyH,IAChE3V,KAAK8W,eAAenB,EAExB,CAGA3V,KAAKiU,mBAAmBjU,KAAK6R,UAnB7B,CAoBF,GAAC,CAAAxM,IAAA,cAAAE,OAAAgO,EAAAvG,EAAAhI,IAAA+F,MAED,SAAAgM,EAAkBpB,GAAU,IAAAqB,EAAA,OAAAhS,IAAAqB,MAAA,SAAA4Q,GAAA,cAAAA,EAAAtL,KAAAsL,EAAAzN,MAAA,OAGoC,GAF9DxJ,KAAKkS,iBAAiBgF,IAAIvB,KAEM3V,KAAKoS,mBAAmBzO,OA3WtB,GA4WyB,CAAAsT,EAAAzN,KAAA,eAAAyN,EAAAzN,KAAA,EACnDoF,EAAY,EA5WI,KA4WmB,cAAAqI,EAAAzN,KAAA,EAGlBxJ,KAAKmX,iBAAiBxB,GAAW,QAApDqB,EAAUC,EAAAjO,QAEVhJ,KAAKkS,iBAAiByE,IAAIhB,IAG5B3V,KAAKkS,iBAAgB,OAAQyD,GAC7B3V,KAAK4R,YAAYzO,KAAKwS,GACtB3V,KAAK6R,UAAU8D,GAAcqB,EAE7BhX,KAAKoX,eAAezB,EAAYqB,EAAWK,aAG3CrX,KAAKqU,oBAAoBsB,IATzBqB,EAAWzB,KAAKC,SAWnB,wBAAAyB,EAAAnL,OAAA,GAAAiL,EAAA,UACF,SAAAO,GAAA,OAAA/D,EAAApG,MAAA,KAAAD,UAAA,KAAA7H,IAAA,qBAAAE,MAED,WACEvF,KAAKkS,iBAAiBtC,QACtB,IAAK,IAAIlM,EAAI1D,KAAK4R,YAAYjO,OAAS,EAAGD,GAAK,EAAGA,IAChD1D,KAAK8W,eAAe9W,KAAK4R,YAAYlO,GAEzC,GAAC,CAAA2B,IAAA,iBAAAE,MAED,SAAeoQ,GAeb,GAdA3V,KAAKkS,iBAAgB,OAAQyD,GAEzB3V,KAAK6R,UAAU8D,KAEjB3V,KAAK6R,UAAU8D,GAAYJ,KAAKC,eACzBxV,KAAK6R,UAAU8D,GAEtB3V,KAAK4R,YAAY8E,OAAO1W,KAAK4R,YAAY1D,QAAQyH,GAAa,IAG5D3V,KAAK8R,aAAa6D,WACb3V,KAAK8R,aAAa6D,GAGvB3V,KAAKgS,qBAAqB2E,IAAIhB,GAAa,CAC7C,IAAM4B,EAAM,8DACZvX,KAAKgS,qBAAqBwF,IAAI7B,GAAY8B,MAAM3U,OAAOyU,GACvDvX,KAAKgS,qBAAqBwF,IAAI7B,GAAY+B,MAAM5U,OAAOyU,GACvDvX,KAAKgS,qBAAoB,OAAQ2D,EACnC,CAGA3V,KAAKsU,uBAAuBqB,EAC9B,GAAC,CAAAtQ,IAAA,YAAAE,MAED,SAAUgQ,EAAMrJ,GAAQ,IAAAyL,EAAA,KACtBpC,EAAKzF,iBAAiB,gBAAgB,SAAArO,GACpCyK,EAAO/J,YAAYV,EAAGW,WAAa,MAAK,OAAO,SAAAwC,GAAC,OAAIC,EAAM,0BAA2BD,EAAE,GACzF,IACA2Q,EAAKzF,iBAAiB,4BAA4B,SAAArO,GAChB,cAA5B8T,EAAKqC,oBACPrU,QAAQsU,IAAI,kCAEkB,iBAA5BtC,EAAKqC,oBACPrU,QAAQC,KAAK,qCAEiB,WAA5B+R,EAAKqC,qBACPrU,QAAQC,KAAK,8CACbmU,EAAKG,0BAET,IAMAvC,EAAKzF,iBACH,oBACAZ,GAAS,SAAAzN,GACP+C,EAAM,mCAAoC0H,GAC1C,IAAI6L,EAAQxC,EAAKyC,cAAc5W,KAAKuW,EAAKM,uBAAuB7W,KAAKuW,EAAKO,mBACtEC,EAAQJ,EAAM3W,MAAK,SAAAgX,GAAC,OAAI7C,EAAK8C,oBAAoBD,EAAE,IACnDE,EAASP,EAMb,OAJAO,EAASA,EACNlX,KAAKuW,EAAKO,mBACV9W,MAAK,SAAAyV,GAAC,OAAI3K,EAAOjK,SAAS4U,EAAE,IAC5BzV,MAAK,SAAAmX,GAAC,OAAIhD,EAAKiD,qBAAqBD,EAAErW,KAAK,IACvC6B,QAAQqR,IAAI,CAAC+C,EAAOG,IAAQ,OAAO,SAAA1T,GAAC,OAAIC,EAAM,8BAA+BD,EAAE,GACxF,KAEFsH,EAAO1K,GACL,QACA0N,GAAS,SAAAzN,GACP,IAAIS,EAAOT,EAAGS,KACd,GAAIA,GAAqB,SAAbA,EAAKL,KAAiB,CAChC2C,EAAM,qCAAsC0H,GAC5C,IAAIuM,EAASlD,EACViD,qBAAqBb,EAAKe,uBAAuBxW,IACjDd,MAAK,SAAAkO,GAAC,OAAIiG,EAAKoD,cAAc,IAC7BvX,KAAKuW,EAAKO,mBACTC,EAAQM,EAAOrX,MAAK,SAAAwX,GAAC,OAAIrD,EAAK8C,oBAAoBO,EAAE,IACpDN,EAASG,EAAOrX,MAAK,SAAAyV,GAAC,OAAI3K,EAAOjK,SAAS4U,EAAE,IAChD,OAAO9S,QAAQqR,IAAI,CAAC+C,EAAOG,IAAQ,OAAO,SAAA1T,GAAC,OAAIC,EAAM,+BAAgCD,EAAE,GACzF,CAEE,OAAO,IAEX,IAEJ,GAAC,CAAAS,IAAA,kBAAAE,OAAA+N,EAAAtG,EAAAhI,IAAA+F,MAED,SAAA8N,IAAA,IAAA3M,EAAAqJ,EAAAuD,EAAAC,EAAAC,EAAAzU,EAAA6B,EAAA0P,EAAAmD,EAAA,YAAAjU,IAAAqB,MAAA,SAAA6S,GAAA,cAAAA,EAAAvN,KAAAuN,EAAA1P,MAAA,OAI+B,OAHzB0C,EAAS,IAAI6B,EAAGjO,kBAAkBE,KAAKD,SACvCwV,EAAO,IAAI4D,kBAAkBnZ,KAAKkR,sBAAwBZ,GAE9D9L,EAAM,uBAAuB0U,EAAA1P,KAAA,EACvB0C,EAAOnL,OAAO,mBAAoBf,KAAK8U,OAAS9U,KAAK8Q,SAAWsI,SAASpZ,KAAK8Q,UAAY9Q,KAAK8U,WAAQ5U,GAAU,OAgBlB,OAdrGF,KAAKqZ,UAAU9D,EAAMrJ,GAErB1H,EAAM,4CACFsU,EAAW,IAAI/U,SAAQ,SAAAF,GAAO,OAAIqI,EAAO1K,GAAG,WAAYqC,EAAQ,IAIhEkV,EAAkBxD,EAAK+D,kBAAkB,WAAY,CAAEC,SAAS,IAChEP,EAAoBzD,EAAK+D,kBAAkB,aAAc,CAC3DC,SAAS,EACTC,eAAgB,IAGlBT,EAAgBjJ,iBAAiB,WAAW,SAAAlL,GAAC,OAAIqU,EAAKlG,qBAAqBnO,EAAG,iBAAiB,IAC/FoU,EAAkBlJ,iBAAiB,WAAW,SAAAlL,GAAC,OAAIqU,EAAKlG,qBAAqBnO,EAAG,mBAAmB,IAAEsU,EAAA1P,KAAA,GAE/FsP,EAAQ,eAAAI,EAAA1P,KAAA,GACR+F,EAAqBwJ,GAAgB,eAAAG,EAAA1P,KAAA,GACrC+F,EAAqByJ,GAAkB,QAqC7C,OA9BIhZ,KAAK+R,kBACP/R,KAAK+R,iBAAiB0H,YAAY3R,SAAQ,SAAA4R,GACxCnE,EAAKoE,SAASD,EAAOT,EAAKlH,iBAC5B,IAIF7F,EAAO1K,GAAG,SAAS,SAAAC,GACjB,IAAIH,EAAOG,EAAGmY,WAAWtY,KACzB,GAAkB,QAAdA,EAAK2U,OAAmB3U,EAAKuY,SAAWZ,EAAKpI,KAAM,CACrD,GAAIoI,EAAKxD,wBAEP,OAEFwD,EAAKlD,qBAAqBzU,EAAKwY,SAC/Bb,EAAKjD,eACP,KAAyB,SAAd1U,EAAK2U,OAAoB3U,EAAKuY,SAAWZ,EAAKpI,MACvDoI,EAAKc,wBAAwBzY,EAAKwY,SAClCb,EAAKnC,eAAexV,EAAKwY,UACF,WAAdxY,EAAK2U,MACdjG,SAAShO,KAAKgY,cAAc,IAAIC,YAAY,UAAW,CAAEC,OAAQ,CAAEpJ,SAAUxP,EAAK6Y,OAC3D,aAAd7Y,EAAK2U,MACdjG,SAAShO,KAAKgY,cAAc,IAAIC,YAAY,YAAa,CAAEC,OAAQ,CAAEpJ,SAAUxP,EAAK6Y,OAC5D,SAAf7Y,EAAK2U,OACdgD,EAAKjG,OAAO7O,KAAKqS,MAAMlV,EAAKU,MAAO,cAEvC,IAEAwC,EAAM,wBAEN0U,EAAA1P,KAAA,GACoBxJ,KAAKoa,SAASlO,EAAQ,CACxCmO,eAAe,EACf/Y,MAAM,IACN,QAHS,IAAPiD,EAAO2U,EAAAlQ,MAKE4Q,WAAWtY,KAAKgZ,QAAS,CAAFpB,EAAA1P,KAAA,SAUrB,MATPpD,EAAM7B,EAAQqV,WAAWtY,KAAKuD,MACpCtB,QAAQsB,MAAMuB,GAQdmP,EAAKC,QACCpP,EAAG,QAUc,OAPrB0P,EAAmBvR,EAAQqV,WAAWtY,KAAKiZ,SAASC,MAAMxa,KAAK6Q,OAAS,IAEvD4J,SAASza,KAAK8Q,YACjCvN,QAAQC,KAAK,0EACbxD,KAAK8X,2BAGPtT,EAAM,mBAAmB0U,EAAA/P,OAAA,SAClB,CACL+C,OAAAA,EACA4J,iBAAAA,EACAiD,gBAAAA,EACAC,kBAAAA,EACAzD,KAAAA,IACD,yBAAA2D,EAAApN,OAAA,GAAA+M,EAAA,UACF,kBAAAvF,EAAAnG,MAAA,KAAAD,UAAA,KAAA7H,IAAA,wBAAAE,MAED,SAAsBrD,GAKpB,OAJAA,EAAKwY,IAAMxY,EAAKwY,IAAIC,QAAQ,2BAA2B,SAACC,EAAMC,GAC5D,IAAMC,EAAara,OAAOC,OAAO6N,EAASwM,UAAUH,GAAOzK,GAC3D,OAAO5B,EAASyM,UAAU,CAAEC,YAAaJ,EAAIC,WAAYA,GAC3D,IACO5Y,CACT,GAAC,CAAAmD,IAAA,yBAAAE,MAED,SAAuBrD,GAqBrB,OAnBK6N,IACoD,IAAnDrB,UAAUC,UAAUT,QAAQ,oBAE9BhM,EAAKwY,IAAMxY,EAAKwY,IAAIC,QAAQ,gBAAiB,QAKD,IAA5CjM,UAAUC,UAAUT,QAAQ,WAC9BhM,EAAKwY,IAAMxY,EAAKwY,IAAIC,QAClB,8BACA,kJAGFzY,EAAKwY,IAAMxY,EAAKwY,IAAIC,QAClB,8BACA,kJAGGzY,CACT,GAAC,CAAAmD,IAAA,oBAAAE,OAAA8N,EAAArG,EAAAhI,IAAA+F,MAED,SAAAmQ,EAAwBhZ,GAAI,OAAA8C,IAAAqB,MAAA,SAAA8U,GAAA,cAAAA,EAAAxP,KAAAwP,EAAA3R,MAAA,OAE4C,OAAtEtH,EAAKwY,IAAMxY,EAAKwY,IAAIC,QAAQ,sBAAuB,mBAAmBQ,EAAAhS,OAAA,SAC/DjH,GAAI,wBAAAiZ,EAAArP,OAAA,GAAAoP,EAAA,KACZ,SAAAE,GAAA,OAAA/H,EAAAlG,MAAA,KAAAD,UAAA,KAAA7H,IAAA,mBAAAE,OAAA6N,EAAApG,EAAAhI,IAAA+F,MAED,SAAAsQ,EAAuB1F,GAAU,IAAA2F,EAAApP,EAAAqJ,EAAAgG,EAAAzC,EAAAzB,EAAAmE,EAAA,KAAAC,EAAAvO,UAAA,OAAAlI,IAAAqB,MAAA,SAAAqV,GAAA,cAAAA,EAAA/P,KAAA+P,EAAAlS,MAAA,OAAgB,GAAd8R,EAAUG,EAAA9X,OAAA,QAAAzD,IAAAub,EAAA,GAAAA,EAAA,GAAG,GACO,IAAjDzb,KAAKoS,mBAAmBlE,QAAQyH,GAAkB,CAAA+F,EAAAlS,KAAA,QACwD,OAA5GjG,QAAQC,KAAKmS,EAAa,kFAAkF+F,EAAAvS,OAAA,SACrG,MAAI,OAM+B,OAHxC+C,EAAS,IAAI6B,EAAGjO,kBAAkBE,KAAKD,SACvCwV,EAAO,IAAI4D,kBAAkBnZ,KAAKkR,sBAAwBZ,GAE9D9L,EAAMmR,EAAa,yBAAyB+F,EAAAlS,KAAA,EACtC0C,EAAOnL,OAAO,mBAAoBf,KAAK8U,MAAQsE,SAASzD,GAAc3V,KAAK8U,WAAQ5U,GAAU,OAItD,GAF7CF,KAAKqZ,UAAU9D,EAAMrJ,GAErB1H,EAAMmR,EAAa,2BAEkC,IAAjD3V,KAAKoS,mBAAmBlE,QAAQyH,GAAkB,CAAA+F,EAAAlS,KAAA,SAEqC,OADzF+L,EAAKC,QACLjS,QAAQC,KAAKmS,EAAa,+DAA+D+F,EAAAvS,OAAA,SAClF,MAAI,QA2Bb,OAxBIoS,GAAe,EAEbzC,EAAW,IAAI/U,SAAQ,SAAAF,GAC3B,IAAM8X,EAAeC,aAAY,YACsB,IAAjDJ,EAAKpJ,mBAAmBlE,QAAQyH,KAClCkG,cAAcF,GACd9X,IAEJ,GAAG,KAEGhB,EAAUmB,YAAW,WACzB6X,cAAcF,GACdJ,GAAe,EACf1X,GACF,GA1oBuB,MA4oBvBqI,EAAO1K,GAAG,YAAY,WACpBoB,aAAaC,GACbgZ,cAAcF,GACd9X,GACF,GACF,IAGA6X,EAAAlS,KAAA,GACMxJ,KAAKoa,SAASlO,EAAQ,CAAE4P,MAAOnG,IAAa,YAEG,IAAjD3V,KAAKoS,mBAAmBlE,QAAQyH,GAAkB,CAAA+F,EAAAlS,KAAA,SAEmC,OADvF+L,EAAKC,QACLjS,QAAQC,KAAKmS,EAAa,6DAA6D+F,EAAAvS,OAAA,SAChF,MAAI,QAGoC,OAAjD3E,EAAMmR,EAAa,8BAA8B+F,EAAAlS,KAAA,GAC3CsP,EAAQ,YAEuC,IAAjD9Y,KAAKoS,mBAAmBlE,QAAQyH,GAAkB,CAAA+F,EAAAlS,KAAA,SAE8C,OADlG+L,EAAKC,QACLjS,QAAQC,KAAKmS,EAAa,wEAAwE+F,EAAAvS,OAAA,SAC3F,MAAI,YAGToS,EAAc,CAAFG,EAAAlS,KAAA,SACD,GAAb+L,EAAKC,UACD8F,EAAa,GAAC,CAAAI,EAAAlS,KAAA,SAC6C,OAA7DjG,QAAQC,KAAKmS,EAAa,mCAAmC+F,EAAAvS,OAAA,SACtDnJ,KAAKmX,iBAAiBxB,EAAY2F,EAAa,IAAE,QAEL,OAAnD/X,QAAQC,KAAKmS,EAAa,yBAAyB+F,EAAAvS,OAAA,SAC5C,MAAI,YAIXqF,GAAaxO,KAAK+b,2BAA0B,CAAAL,EAAAlS,KAAA,gBAAAkS,EAAAlS,KAAA,GAGvC,IAAIzF,SAAQ,SAACF,GAAO,OAAKG,WAAWH,EAAS,IAAK,IAAC,QAC1D7D,KAAK+b,4BAA6B,EAAK,QAcA,OAXrC1E,EAAc,IAAI2E,YACNzG,EAAK0G,eACXnU,SAAQ,SAAAoU,GACZA,EAASxC,OACXrC,EAAYsC,SAASuC,EAASxC,MAElC,IACuC,IAAnCrC,EAAYoC,YAAY9V,SAC1B0T,EAAc,MAGhB7S,EAAMmR,EAAa,sBAAsB+F,EAAAvS,OAAA,SAClC,CACL+C,OAAAA,EACAmL,YAAAA,EACA9B,KAAAA,IACD,yBAAAmG,EAAA5P,OAAA,GAAAuP,EAAA,UACF,SAAAc,GAAA,OAAA/I,EAAAjG,MAAA,KAAAD,UAAA,KAAA7H,IAAA,WAAAE,MAED,SAAS2G,EAAQkQ,GACf,OAAOlQ,EAAOnK,YAAY,CACxBuC,KAAM,OACNuV,QAAS7Z,KAAK6Q,KACdiJ,QAAS9Z,KAAK8Q,SACdsL,UAAAA,EACAC,MAAOrc,KAAK+Q,WAEhB,GAAC,CAAA1L,IAAA,eAAAE,MAED,WACMvF,KAAKsc,OACPtc,KAAKuc,WAELvc,KAAKwc,QAET,GAAC,CAAAnX,IAAA,SAAAE,MAED,WACEvF,KAAKsc,QAAS,CAChB,GAAC,CAAAjX,IAAA,WAAAE,MAED,WACEvF,KAAKsc,QAAS,EACdtc,KAAKyc,qBACP,GAAC,CAAApX,IAAA,4BAAAE,MAED,SAA0BmX,EAAWnY,GAInC,IAAK,IAAIb,EAAI,EAAGiZ,EAAIpY,EAAQjD,KAAKsb,EAAEjZ,OAAQD,EAAIiZ,EAAGjZ,IAAK,CACrD,IAAMpC,EAAOiD,EAAQjD,KAAKsb,EAAElZ,GAE5B,GAAIpC,EAAKob,YAAcA,EACrB,OAAOpb,CAEX,CAEA,OAAO,IACT,GAAC,CAAA+D,IAAA,iBAAAE,MAED,SAAemX,EAAWnY,GACxB,IAAKA,EAAS,OAAO,KAErB,IAAIjD,EAA4B,OAArBiD,EAAQsY,SAAoB7c,KAAK8c,0BAA0BJ,EAAWnY,GAAWA,EAAQjD,KAKpG,OAAIA,EAAKyb,QAAU/c,KAAK6R,UAAUvQ,EAAKyb,QAGnCzb,EAAKyb,OAAS/c,KAAKsS,eAAeqE,IAAIrV,EAAKyb,OAHO,KAK/Czb,CACT,GAEA,CAAA+D,IAAA,6BAAAE,MACA,SAA2BmX,GACzB,OAAO1c,KAAKgd,eAAeN,EAAW1c,KAAKuS,cAAciF,IAAIkF,GAC/D,GAAC,CAAArX,IAAA,sBAAAE,MAED,WAAsB,IACiC0X,MADjCC,imBAAAC,CACend,KAAKuS,eAAa,IAArD,IAAA2K,EAAAE,MAAAH,EAAAC,EAAAG,KAAAzU,MAAuD,KAAA0U,KAAAL,EAAA1X,QAAA,ynBAA3CmX,EAASY,EAAA,GAAE/Y,EAAO+Y,EAAA,GACxBhc,EAAOtB,KAAKgd,eAAeN,EAAWnY,GAC1C,GAAKjD,EAAL,CAIA,IAAMub,EAAgC,OAArBtY,EAAQsY,SAAoB,IAAMtY,EAAQsY,SAE3D7c,KAAKuU,kBAAkB,KAAMsI,EAAUvb,EAAMiD,EAAQgZ,OANlC,CAOrB,CAAC,OAAAnX,GAAA8W,EAAAtY,EAAAwB,EAAA,SAAA8W,EAAAM,GAAA,CACDxd,KAAKuS,cAAc3C,OACrB,GAAC,CAAAvK,IAAA,eAAAE,MAED,SAAahB,GACX,GAAyB,OAArBA,EAAQsY,SACV,IAAK,IAAInZ,EAAI,EAAGiZ,EAAIpY,EAAQjD,KAAKsb,EAAEjZ,OAAQD,EAAIiZ,EAAGjZ,IAChD1D,KAAKyd,mBAAmBlZ,EAASb,QAGnC1D,KAAKyd,mBAAmBlZ,EAE5B,GAAC,CAAAc,IAAA,qBAAAE,MAED,SAAmBhB,EAASmZ,GAC1B,IAAMpc,OAAiBpB,IAAVwd,EAAsBnZ,EAAQjD,KAAKsb,EAAEc,GAASnZ,EAAQjD,KAC7Dub,EAAWtY,EAAQsY,SAGnBH,GAFSnY,EAAQgZ,OAELjc,EAAKob,WAEvB,GAAK1c,KAAKuS,cAAcoE,IAAI+F,GAErB,CACL,IAAMiB,EAAgB3d,KAAKuS,cAAciF,IAAIkF,GACvCkB,EAAwC,OAA3BD,EAAcd,SAAoB7c,KAAK8c,0BAA0BJ,EAAWiB,GAAiBA,EAAcrc,KAGxHuc,EAAoBvc,EAAKwc,cAAgBF,EAAWE,cACpDC,EAA2Bzc,EAAKwc,gBAAkBF,EAAWE,cACnE,GAAID,GAAsBE,GAA4BH,EAAWb,MAAQzb,EAAKyb,MAC5E,OAGe,MAAbF,EACyBe,GAAcA,EAAWI,YAGlDhe,KAAKuS,cAAa,OAAQmK,GAG1B1c,KAAKuS,cAAc0L,IAAIvB,EAAWnY,GAIhCqZ,EAAWM,YAAc5c,EAAK4c,YAChCzd,OAAOC,OAAOkd,EAAWM,WAAY5c,EAAK4c,WAGhD,MA3BEle,KAAKuS,cAAc0L,IAAIvB,EAAWnY,EA4BtC,GAAC,CAAAc,IAAA,uBAAAE,MAED,SAAqBX,EAAG2Y,GACtBvd,KAAKgT,OAAO7O,KAAKqS,MAAM5R,EAAEtD,MAAOic,EAClC,GAAC,CAAAlY,IAAA,SAAAE,MAED,SAAOhB,EAASgZ,GACV/Y,EAAM2Z,SACR3Z,EAAM,UAADwQ,OAAWzQ,IAGbA,EAAQsY,WAEbtY,EAAQgZ,OAASA,EAEbvd,KAAKsc,OACPtc,KAAKoe,aAAa7Z,GAElBvE,KAAKuU,kBAAkB,KAAMhQ,EAAQsY,SAAUtY,EAAQjD,KAAMiD,EAAQgZ,QAEzE,GAAC,CAAAlY,IAAA,0BAAAE,MAED,SAAwB8Y,GACtB,OAAO,CACT,GAAC,CAAAhZ,IAAA,wBAAAE,MAED,SAAsB8Y,GAAS,GAAC,CAAAhZ,IAAA,wBAAAE,MAEhC,SAAsB8Y,GAAS,GAAC,CAAAhZ,IAAA,mBAAAE,MAEhC,SAAiBuL,GACf,OAAO9Q,KAAK6R,UAAUf,GAAY3C,IAAImQ,SAASC,aAAepQ,IAAImQ,SAASE,aAC7E,GAAC,CAAAnZ,IAAA,mBAAAE,OAAA4N,EAAAnG,EAAAhI,IAAA+F,MAED,SAAA0T,IAAA,IAAAC,EAAA9Q,EAAA+Q,EAAAC,EAAAC,EAAAC,EAAA,YAAA9Z,IAAAqB,MAAA,SAAA0Y,GAAA,cAAAA,EAAApT,KAAAoT,EAAAvV,MAAA,WACMxJ,KAAKgf,iBAAkB,CAAFD,EAAAvV,KAAA,eAAAuV,EAAA5V,OAAA,iBAEQ,OAA3BuV,EAAiBO,KAAKC,MAAKH,EAAAvV,KAAA,EAEf2V,MAAMnP,SAASoP,SAASC,KAAM,CAC9CtX,OAAQ,OACRuX,MAAO,aACP,OAHI1R,EAAGmR,EAAA/V,KAMH2V,EAAqB,IAAIM,KAAKrR,EAAI2R,QAAQ/H,IAAI,SAASgI,UAAYC,IACnEb,EAAqBK,KAAKC,MAE1BL,EADaF,GAAsBC,EAAqBF,GAAkB,EAChDE,EAEhC5e,KAAKyS,qBAEDzS,KAAKyS,oBAAsB,GAC7BzS,KAAKwS,YAAYrP,KAAK0b,GAEtB7e,KAAKwS,YAAYxS,KAAKyS,mBAAqB,IAAMoM,EAGnD7e,KAAK0S,cAAgB1S,KAAKwS,YAAYkN,QAAO,SAACC,EAAKC,GAAM,OAAMD,EAAOC,CAAM,GAAG,GAAK5f,KAAKwS,YAAY7O,OAEjG3D,KAAKyS,mBAAqB,IAC5BjO,EAAM,2BAADwQ,OAA4BhV,KAAK0S,cAAa,OACnD1O,YAAW,kBAAM8a,EAAKzJ,kBAAkB,GAAE,MAE1CrV,KAAKqV,mBACN,yBAAA0J,EAAAjT,OAAA,GAAA2S,EAAA,UACF,kBAAAtL,EAAAhG,MAAA,KAAAD,UAAA,KAAA7H,IAAA,gBAAAE,MAED,WACE,OAAO0Z,KAAKC,MAAQlf,KAAK0S,aAC3B,GAAC,CAAArN,IAAA,iBAAAE,MAED,SAAeuL,GAA0B,IAAA+O,EAAA,KAAhBhe,EAAIqL,UAAAvJ,OAAA,QAAAzD,IAAAgN,UAAA,GAAAA,UAAA,GAAG,QAC9B,GAAIlN,KAAK8R,aAAahB,GAEpB,OADAtM,EAAM,eAADwQ,OAAgBnT,EAAI,SAAAmT,OAAQlE,IAC1B/M,QAAQF,QAAQ7D,KAAK8R,aAAahB,GAAUjP,IAGnD,GADA2C,EAAM,cAADwQ,OAAenT,EAAI,SAAAmT,OAAQlE,KAC3B9Q,KAAKgS,qBAAqB2E,IAAI7F,GAAW,CAC5C9Q,KAAKgS,qBAAqBiM,IAAInN,EAAU,CAAC,GAEzC,IAAMgP,EAAe,IAAI/b,SAAQ,SAACF,EAASf,GACzC+c,EAAK7N,qBAAqBwF,IAAI1G,GAAU2G,MAAQ,CAAE5T,QAAAA,EAASf,OAAAA,EAC7D,IACMid,EAAe,IAAIhc,SAAQ,SAACF,EAASf,GACzC+c,EAAK7N,qBAAqBwF,IAAI1G,GAAU4G,MAAQ,CAAE7T,QAAAA,EAASf,OAAAA,EAC7D,IAEA9C,KAAKgS,qBAAqBwF,IAAI1G,GAAU2G,MAAMuI,QAAUF,EACxD9f,KAAKgS,qBAAqBwF,IAAI1G,GAAU4G,MAAMsI,QAAUD,EAExDD,EAAY,OAAO,SAAAlb,GAAC,OAAIrB,QAAQC,KAAK,GAADwR,OAAIlE,EAAQ,+BAA+BlM,EAAE,IACjFmb,EAAY,OAAO,SAAAnb,GAAC,OAAIrB,QAAQC,KAAK,GAADwR,OAAIlE,EAAQ,+BAA+BlM,EAAE,GACnF,CACA,OAAO5E,KAAKgS,qBAAqBwF,IAAI1G,GAAUjP,GAAMme,OAEzD,GAAC,CAAA3a,IAAA,iBAAAE,MAED,SAAeuL,EAAUmP,GAGvB,IAAMC,EAAc,IAAIlE,YACxB,IACAiE,EAAOE,iBAAiBrY,SAAQ,SAAA4R,GAAK,OAAIwG,EAAYvG,SAASD,EAAM,GAEpE,CAAE,MAAM9U,GACNrB,QAAQC,KAAK,GAADwR,OAAIlE,EAAQ,+BAA+BlM,EACzD,CACA,IAAMwb,EAAc,IAAIpE,YACxB,IACAiE,EAAOI,iBAAiBvY,SAAQ,SAAA4R,GAAK,OAAI0G,EAAYzG,SAASD,EAAM,GAEpE,CAAE,MAAO9U,GACPrB,QAAQC,KAAK,GAADwR,OAAIlE,EAAQ,+BAA+BlM,EACzD,CAEA5E,KAAK8R,aAAahB,GAAY,CAAE2G,MAAOyI,EAAaxI,MAAO0I,GAGvDpgB,KAAKgS,qBAAqB2E,IAAI7F,KAChC9Q,KAAKgS,qBAAqBwF,IAAI1G,GAAU2G,MAAM5T,QAAQqc,GACtDlgB,KAAKgS,qBAAqBwF,IAAI1G,GAAU4G,MAAM7T,QAAQuc,GAE1D,GAAC,CAAA/a,IAAA,sBAAAE,OAAA2N,EAAAlG,EAAAhI,IAAA+F,MAED,SAAAuV,EAA0BL,GAAM,IAAAM,EAAAC,EAAAC,EAAAC,EAAAhd,EAAAid,EAAA,YAAA3b,IAAAqB,MAAA,SAAAua,GAAA,cAAAA,EAAAjV,KAAAiV,EAAApX,MAAA,WAQ1BxJ,KAAK2R,YAAa3R,KAAK2R,UAAU4D,KAAI,CAAAqL,EAAApX,KAAA,SACjC+W,EAAkBvgB,KAAK2R,UAAU4D,KAAKsL,aACtCL,EAAa,GACbC,EAASR,EAAOxG,YAAWiH,EAAA1b,IAAA+F,MAAA,SAAA2V,IAAA,IAAAI,EAAAlf,EAAA,OAAAoD,IAAAqB,MAAA,SAAA0a,GAAA,cAAAA,EAAApV,KAAAoV,EAAAvX,MAAA,OAIoD,GAD7EsX,EAAIL,EAAO/c,GAGH,OAFR9B,EAAS2e,EAAgBS,MAAK,SAAA5D,GAAC,OAAe,MAAXA,EAAE1D,OAAiB0D,EAAE1D,MAAMpV,MAAQwc,EAAExc,IAAI,KAEhE,CAAAyc,EAAAvX,KAAA,aACZ5H,EAAOqf,aAAc,CAAFF,EAAAvX,KAAA,eAAAuX,EAAAvX,KAAA,EACf5H,EAAOqf,aAAaH,GAAE,OAGb,UAAXA,EAAExc,MAAoBwc,EAAE3C,SAAWzP,UAAUC,UAAUuS,cAAchT,QAAQ,YAAc,IAC7F4S,EAAE3C,SAAU,EACZna,YAAW,kBAAM8c,EAAE3C,SAAU,CAAI,GAAE,MACpC4C,EAAAvX,KAAA,gBAKDyW,EAAOkB,YAAYvf,EAAO8X,OAC1BuG,EAAOtG,SAASmH,GAAG,QAErBN,EAAWrd,KAAKvB,GAAQmf,EAAAvX,KAAA,iBAExBgX,EAAWrd,KAAKwd,EAAKhP,UAAU4D,KAAKoE,SAASmH,EAAGb,IAAS,yBAAAc,EAAAjV,OAAA,GAAA4U,EAAA,IAtBpDhd,EAAI,EAAC,YAAEA,EAAI+c,EAAO9c,QAAM,CAAAid,EAAApX,KAAA,gBAAAoX,EAAAjU,cAAA+T,IAAA,eAAEhd,IAAGkd,EAAApX,KAAA,gBAyBtC+W,EAAgBzY,SAAQ,SAAAsV,GACjBoD,EAAW/F,SAAS2C,KACvBA,EAAE1D,MAAMyE,SAAU,EAEtB,IAAG,QAELne,KAAK+R,iBAAmBkO,EACxBjgB,KAAKoX,eAAepX,KAAK8Q,SAAUmP,GAAQ,yBAAAW,EAAA9U,OAAA,GAAAwU,EAAA,UAC5C,SAAAc,GAAA,OAAAlO,EAAA/F,MAAA,KAAAD,UAAA,KAAA7H,IAAA,mBAAAE,MAED,SAAiB4Y,GACXne,KAAK2R,WAAa3R,KAAK2R,UAAU4D,MACnCvV,KAAK2R,UAAU4D,KAAKsL,aAAa/Y,SAAQ,SAAAsV,GACnB,SAAhBA,EAAE1D,MAAMpV,OACV8Y,EAAE1D,MAAMyE,QAAUA,EAEtB,GAEJ,GAAC,CAAA9Y,IAAA,WAAAE,MAED,SAASuL,EAAU+L,EAAUvb,GAC3B,GAAKtB,KAAK2R,UAGR,OAAQ3R,KAAKqR,qBACX,IAAK,YACHrR,KAAK2R,UAAUzF,OAAOnK,YAAY,CAAEuC,KAAM,OAAQtC,KAAMmC,KAAKC,UAAU,CAAEyY,SAAAA,EAAUvb,KAAAA,IAAS+f,KAAMvQ,IAClG,MACF,IAAK,cACH9Q,KAAK2R,UAAUqH,kBAAkB7X,KAAKgD,KAAKC,UAAU,CAAE0M,SAAAA,EAAU+L,SAAAA,EAAUvb,KAAAA,KAC3E,MACF,QACEtB,KAAKqR,oBAAoBP,EAAU+L,EAAUvb,QAVjDiC,QAAQC,KAAK,sCAcjB,GAAC,CAAA6B,IAAA,qBAAAE,MAED,SAAmBuL,EAAU+L,EAAUvb,GACrC,GAAKtB,KAAK2R,UAGR,OAAQ3R,KAAKoR,mBACX,IAAK,YACHpR,KAAK2R,UAAUzF,OAAOnK,YAAY,CAAEuC,KAAM,OAAQtC,KAAMmC,KAAKC,UAAU,CAAEyY,SAAAA,EAAUvb,KAAAA,IAAS+f,KAAMvQ,IAClG,MACF,IAAK,cACH9Q,KAAK2R,UAAUoH,gBAAgB5X,KAAKgD,KAAKC,UAAU,CAAE0M,SAAAA,EAAU+L,SAAAA,EAAUvb,KAAAA,KACzE,MACF,QACEtB,KAAKoR,kBAAkBN,EAAU+L,EAAUvb,QAV/CiC,QAAQC,KAAK,gDAcjB,GAAC,CAAA6B,IAAA,gBAAAE,MAED,SAAcsX,EAAUvb,GACtB,GAAKtB,KAAK2R,UAGR,OAAQ3R,KAAKqR,qBACX,IAAK,YACHrR,KAAK2R,UAAUzF,OAAOnK,YAAY,CAAEuC,KAAM,OAAQtC,KAAMmC,KAAKC,UAAU,CAAEyY,SAAAA,EAAUvb,KAAAA,MACnF,MACF,IAAK,cACHtB,KAAK2R,UAAUqH,kBAAkB7X,KAAKgD,KAAKC,UAAU,CAAEyY,SAAAA,EAAUvb,KAAAA,KACjE,MACF,QACEtB,KAAKqR,yBAAoBnR,EAAW2c,EAAUvb,QAVlDiC,QAAQC,KAAK,2CAcjB,GAAC,CAAA6B,IAAA,0BAAAE,MAED,SAAwBsX,EAAUvb,GAChC,GAAKtB,KAAK2R,UAGR,OAAQ3R,KAAKoR,mBACX,IAAK,YACHpR,KAAK2R,UAAUzF,OAAOnK,YAAY,CAAEuC,KAAM,OAAQtC,KAAMmC,KAAKC,UAAU,CAAEyY,SAAAA,EAAUvb,KAAAA,MACnF,MACF,IAAK,cACHtB,KAAK2R,UAAUoH,gBAAgB5X,KAAKgD,KAAKC,UAAU,CAAEyY,SAAAA,EAAUvb,KAAAA,KAC/D,MACF,QACEtB,KAAKoR,uBAAkBlR,EAAW2c,EAAUvb,QAVhDiC,QAAQC,KAAK,qDAcjB,GAAC,CAAA6B,IAAA,OAAAE,MAED,SAAKuL,EAAUwQ,GACb,OAAOthB,KAAK2R,UAAUzF,OAAOnK,YAAY,CAAEuC,KAAM,OAAQuV,QAAS7Z,KAAK6Q,KAAMiJ,QAAShJ,EAAUuL,MAAOiF,IAAclgB,MAAK,WACxH4O,SAAShO,KAAKgY,cAAc,IAAIC,YAAY,SAAU,CAAEC,OAAQ,CAAEpJ,SAAUA,KAC9E,GACF,GAAC,CAAAzL,IAAA,QAAAE,MAED,SAAMuL,GAAU,IAAAyQ,EAAA,KACd,OAAOvhB,KAAK2R,UAAUzF,OAAOnK,YAAY,CAAEuC,KAAM,QAAS+c,KAAMvQ,IAAY1P,MAAK,WAC/EmgB,EAAKjP,eAAe2L,IAAInN,GAAU,GAClCd,SAAShO,KAAKgY,cAAc,IAAIC,YAAY,UAAW,CAAEC,OAAQ,CAAEpJ,SAAUA,KAC/E,GACF,GAAC,CAAAzL,IAAA,UAAAE,MAED,SAAQuL,GAAU,IAAA0Q,EAAA,KAChB,OAAOxhB,KAAK2R,UAAUzF,OAAOnK,YAAY,CAAEuC,KAAM,UAAW+c,KAAMvQ,IAAY1P,MAAK,WACjFogB,EAAKlP,eAAc,OAAQxB,GAC3Bd,SAAShO,KAAKgY,cAAc,IAAIC,YAAY,YAAa,CAAEC,OAAQ,CAAEpJ,SAAUA,KACjF,GACF,IA1mCFmC,GAAA7F,EAAAuD,EAAA7P,UAAAmS,GAAAxS,OAAA0E,eAAAwL,EAAA,aAAAxK,UAAA,IA0mCGsK,CAAA,CAhhCe,GAmhClBtC,IAAImQ,SAASmD,SAAS,QAAShR,GAE/B3L,EAAOC,QAAU0L,iBC1mCjB1L,EAAQ2c,WA2IR,SAAoBzU,GAQnB,GAPAA,EAAK,IAAMjN,KAAK2hB,UAAY,KAAO,IAClC3hB,KAAK4hB,WACJ5hB,KAAK2hB,UAAY,MAAQ,KAC1B1U,EAAK,IACJjN,KAAK2hB,UAAY,MAAQ,KAC1B,IAAM7c,EAAOC,QAAQ8c,SAAS7hB,KAAK8hB,OAE/B9hB,KAAK2hB,UACT,OAGD,MAAMI,EAAI,UAAY/hB,KAAKgiB,MAC3B/U,EAAKyJ,OAAO,EAAG,EAAGqL,EAAG,kBAKrB,IAAIrE,EAAQ,EACRuE,EAAQ,EACZhV,EAAK,GAAG0N,QAAQ,eAAeuH,IAChB,OAAVA,IAGJxE,IACc,OAAVwE,IAGHD,EAAQvE,GACT,IAGDzQ,EAAKyJ,OAAOuL,EAAO,EAAGF,EACvB,EA3KAhd,EAAQod,KA6LR,SAAcC,GACb,IACKA,EACHrd,EAAQsd,QAAQC,QAAQ,QAASF,GAEjCrd,EAAQsd,QAAQE,WAAW,QAE7B,CAAE,MAAO1d,GAGT,CACD,EAvMAE,EAAQyd,KA+MR,WACC,IAAIjK,EACJ,IACCA,EAAIxT,EAAQsd,QAAQI,QAAQ,QAC7B,CAAE,MAAO5d,GAGT,CAOA,OAJK0T,GAAwB,oBAAZmK,SAA2B,QAASA,UACpDnK,EAAImK,QAAQC,IAAIC,OAGVrK,CACR,EA7NAxT,EAAQ4c,UAyGR,WAIC,QAAsB,oBAAXkB,SAA0BA,OAAOH,SAAoC,aAAxBG,OAAOH,QAAQ7gB,OAAuBghB,OAAOH,QAAQI,UAKpF,oBAAdpU,YAA6BA,UAAUC,YAAaD,UAAUC,UAAUuS,cAAcgB,MAAM,4BAM3E,oBAAblS,UAA4BA,SAAS+S,iBAAmB/S,SAAS+S,gBAAgBC,OAAShT,SAAS+S,gBAAgBC,MAAMC,kBAEpH,oBAAXJ,QAA0BA,OAAOtf,UAAYsf,OAAOtf,QAAQ2f,SAAYL,OAAOtf,QAAQ0I,WAAa4W,OAAOtf,QAAQ4f,QAGrG,oBAAdzU,WAA6BA,UAAUC,WAAaD,UAAUC,UAAUuS,cAAcgB,MAAM,mBAAqB9I,SAASgK,OAAOC,GAAI,KAAO,IAE9H,oBAAd3U,WAA6BA,UAAUC,WAAaD,UAAUC,UAAUuS,cAAcgB,MAAM,sBACtG,EA/HAnd,EAAQsd,QAyOR,WACC,IAGC,OAAOiB,YACR,CAAE,MAAOze,GAGT,CACD,CAlPkB0e,GAClBxe,EAAQzC,QAAU,MACjB,IAAIkhB,GAAS,EAEb,MAAO,KACDA,IACJA,GAAS,EACTjgB,QAAQC,KAAK,yIACd,CAED,EATiB,GAelBuB,EAAQ0e,OAAS,CAChB,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,WAsFD1e,EAAQ8S,IAAMtU,QAAQiB,OAASjB,QAAQsU,KAAO,MAAS,GAkEvD/S,EAAOC,QAAU,EAAQ,IAAR,CAAoBA,GAErC,MAAM,WAAC2e,GAAc5e,EAAOC,QAM5B2e,EAAW7M,EAAI,SAAU8M,GACxB,IACC,OAAOxf,KAAKC,UAAUuf,EACvB,CAAE,MAAO9e,GACR,MAAO,+BAAiCA,EAAMN,OAC/C,CACD,iBCKAO,EAAOC,QA3QP,SAAe4d,GAqDd,SAASiB,EAAYhC,GACpB,IAAIiC,EAEAC,EACAC,EAFAC,EAAiB,KAIrB,SAASxf,KAASyI,GAEjB,IAAKzI,EAAM2Z,QACV,OAGD,MAAM3X,EAAOhC,EAGP2K,EAAO8U,OAAO,IAAIhF,MAClBiF,EAAK/U,GAAQ0U,GAAY1U,GAC/B3I,EAAKsb,KAAOoC,EACZ1d,EAAKmF,KAAOkY,EACZrd,EAAK2I,KAAOA,EACZ0U,EAAW1U,EAEXlC,EAAK,GAAK2W,EAAYO,OAAOlX,EAAK,IAEX,iBAAZA,EAAK,IAEfA,EAAKmX,QAAQ,MAId,IAAI1G,EAAQ,EACZzQ,EAAK,GAAKA,EAAK,GAAG0N,QAAQ,iBAAiB,CAACuH,EAAOmC,KAElD,GAAc,OAAVnC,EACH,MAAO,IAERxE,IACA,MAAM4G,EAAYV,EAAYF,WAAWW,GACzC,GAAyB,mBAAdC,EAA0B,CACpC,MAAMhZ,EAAM2B,EAAKyQ,GACjBwE,EAAQoC,EAAUnd,KAAKX,EAAM8E,GAG7B2B,EAAKyJ,OAAOgH,EAAO,GACnBA,GACD,CACA,OAAOwE,CAAK,IAIb0B,EAAYlC,WAAWva,KAAKX,EAAMyG,IAEpBzG,EAAKqR,KAAO+L,EAAY/L,KAChC1K,MAAM3G,EAAMyG,EACnB,CAgCA,OA9BAzI,EAAMod,UAAYA,EAClBpd,EAAMmd,UAAYiC,EAAYjC,YAC9Bnd,EAAMwd,MAAQ4B,EAAYW,YAAY3C,GACtCpd,EAAMggB,OAASA,EACfhgB,EAAMlC,QAAUshB,EAAYthB,QAE5B7B,OAAO0E,eAAeX,EAAO,UAAW,CACvCyB,YAAY,EACZC,cAAc,EACdsR,IAAK,IACmB,OAAnBwM,EACIA,GAEJF,IAAoBF,EAAYxB,aACnC0B,EAAkBF,EAAYxB,WAC9B2B,EAAeH,EAAYzF,QAAQyD,IAG7BmC,GAER9F,IAAK0F,IACJK,EAAiBL,CAAC,IAKY,mBAArBC,EAAYa,MACtBb,EAAYa,KAAKjgB,GAGXA,CACR,CAEA,SAASggB,EAAO5C,EAAW8C,GAC1B,MAAMC,EAAWf,EAAY5jB,KAAK4hB,gBAAkC,IAAd8C,EAA4B,IAAMA,GAAa9C,GAErG,OADA+C,EAAS9M,IAAM7X,KAAK6X,IACb8M,CACR,CAwFA,SAASC,EAAYC,GACpB,OAAOA,EAAO/gB,WACZghB,UAAU,EAAGD,EAAO/gB,WAAWH,OAAS,GACxCgX,QAAQ,UAAW,IACtB,CA0BA,OAvQAiJ,EAAYpf,MAAQof,EACpBA,EAAYmB,QAAUnB,EACtBA,EAAYO,OAoPZ,SAAgB7Y,GACf,OAAIA,aAAevI,MACXuI,EAAI0Z,OAAS1Z,EAAI/G,QAElB+G,CACR,EAxPAsY,EAAYqB,QAwLZ,WACC,MAAM7C,EAAa,IACfwB,EAAYsB,MAAMC,IAAIP,MACtBhB,EAAYwB,MAAMD,IAAIP,GAAaO,KAAIvD,GAAa,IAAMA,KAC5DyD,KAAK,KAEP,OADAzB,EAAY0B,OAAO,IACZlD,CACR,EA9LAwB,EAAY0B,OAsJZ,SAAgBlD,GAOf,IAAI1e,EANJkgB,EAAYzB,KAAKC,GACjBwB,EAAYxB,WAAaA,EAEzBwB,EAAYsB,MAAQ,GACpBtB,EAAYwB,MAAQ,GAGpB,MAAMG,GAA+B,iBAAfnD,EAA0BA,EAAa,IAAImD,MAAM,UACjEC,EAAMD,EAAM5hB,OAElB,IAAKD,EAAI,EAAGA,EAAI8hB,EAAK9hB,IACf6hB,EAAM7hB,KAOW,OAFtB0e,EAAamD,EAAM7hB,GAAGiX,QAAQ,MAAO,QAEtB,GACdiJ,EAAYwB,MAAMjiB,KAAK,IAAIigB,OAAO,IAAMhB,EAAWvW,MAAM,GAAK,MAE9D+X,EAAYsB,MAAM/hB,KAAK,IAAIigB,OAAO,IAAMhB,EAAa,MAGxD,EA9KAwB,EAAYzF,QAsMZ,SAAiBrT,GAChB,GAA8B,MAA1BA,EAAKA,EAAKnH,OAAS,GACtB,OAAO,EAGR,IAAID,EACA8hB,EAEJ,IAAK9hB,EAAI,EAAG8hB,EAAM5B,EAAYwB,MAAMzhB,OAAQD,EAAI8hB,EAAK9hB,IACpD,GAAIkgB,EAAYwB,MAAM1hB,GAAG+K,KAAK3D,GAC7B,OAAO,EAIT,IAAKpH,EAAI,EAAG8hB,EAAM5B,EAAYsB,MAAMvhB,OAAQD,EAAI8hB,EAAK9hB,IACpD,GAAIkgB,EAAYsB,MAAMxhB,GAAG+K,KAAK3D,GAC7B,OAAO,EAIT,OAAO,CACR,EA1NA8Y,EAAY/B,SAAW,EAAQ,KAC/B+B,EAAYthB,QA0PZ,WACCiB,QAAQC,KAAK,wIACd,EA1PA/C,OAAO4K,KAAKsX,GAAK7a,SAAQzC,IACxBue,EAAYve,GAAOsd,EAAItd,EAAI,IAO5Bue,EAAYsB,MAAQ,GACpBtB,EAAYwB,MAAQ,GAOpBxB,EAAYF,WAAa,CAAC,EAkB1BE,EAAYW,YAVZ,SAAqB3C,GACpB,IAAI6D,EAAO,EAEX,IAAK,IAAI/hB,EAAI,EAAGA,EAAIke,EAAUje,OAAQD,IACrC+hB,GAASA,GAAQ,GAAKA,EAAQ7D,EAAU8D,WAAWhiB,GACnD+hB,GAAQ,EAGT,OAAO7B,EAAYH,OAAOzU,KAAK2W,IAAIF,GAAQ7B,EAAYH,OAAO9f,OAC/D,EA2NAigB,EAAY0B,OAAO1B,EAAYpB,QAExBoB,CACR,WC3QA,IAAIxG,EAAI,IACJwI,EAAQ,GAAJxI,EACJyI,EAAQ,GAAJD,EACJhJ,EAAQ,GAAJiJ,EAuJR,SAASC,EAAO5B,EAAI6B,EAAO1I,EAAGvS,GAC5B,IAAIkb,EAAWD,GAAa,IAAJ1I,EACxB,OAAOrO,KAAKiX,MAAM/B,EAAK7G,GAAK,IAAMvS,GAAQkb,EAAW,IAAM,GAC7D,CAxIAlhB,EAAOC,QAAU,SAASuG,EAAKjL,GAC7BA,EAAUA,GAAW,CAAC,EACtB,IA8Ge6jB,EACX6B,EA/GAlkB,SAAcyJ,EAClB,GAAa,WAATzJ,GAAqByJ,EAAI3H,OAAS,EACpC,OAkBJ,SAAeuiB,GAEb,MADAA,EAAMrY,OAAOqY,IACLviB,OAAS,KAAjB,CAGA,IAAIue,EAAQ,mIAAmIiE,KAC7ID,GAEF,GAAKhE,EAAL,CAGA,IAAI7E,EAAI+I,WAAWlE,EAAM,IAEzB,QADYA,EAAM,IAAM,MAAMhB,eAE5B,IAAK,QACL,IAAK,OACL,IAAK,MACL,IAAK,KACL,IAAK,IACH,OAzDEtE,SAyDKS,EACT,IAAK,QACL,IAAK,OACL,IAAK,IACH,OA9DET,OA8DKS,EACT,IAAK,OACL,IAAK,MACL,IAAK,IACH,OAAOA,EAAIT,EACb,IAAK,QACL,IAAK,OACL,IAAK,MACL,IAAK,KACL,IAAK,IACH,OAAOS,EAAIwI,EACb,IAAK,UACL,IAAK,SACL,IAAK,OACL,IAAK,MACL,IAAK,IACH,OAAOxI,EAAIuI,EACb,IAAK,UACL,IAAK,SACL,IAAK,OACL,IAAK,MACL,IAAK,IACH,OAAOvI,EAAID,EACb,IAAK,eACL,IAAK,cACL,IAAK,QACL,IAAK,OACL,IAAK,KACH,OAAOC,EACT,QACE,OA3CJ,CANA,CAmDF,CAzEW7G,CAAMlL,GACR,GAAa,WAATzJ,GAAqBwkB,SAAS/a,GACvC,OAAOjL,EAAQimB,MA0GFpC,EA1GiB5Y,GA2G5Bya,EAAQ/W,KAAK2W,IAAIzB,KACRtH,EACJkJ,EAAO5B,EAAI6B,EAAOnJ,EAAG,OAE1BmJ,GAASF,EACJC,EAAO5B,EAAI6B,EAAOF,EAAG,QAE1BE,GAASH,EACJE,EAAO5B,EAAI6B,EAAOH,EAAG,UAE1BG,GAAS3I,EACJ0I,EAAO5B,EAAI6B,EAAO3I,EAAG,UAEvB8G,EAAK,OAvCd,SAAkBA,GAChB,IAAI6B,EAAQ/W,KAAK2W,IAAIzB,GACrB,OAAI6B,GAASnJ,EACJ5N,KAAKiX,MAAM/B,EAAKtH,GAAK,IAE1BmJ,GAASF,EACJ7W,KAAKiX,MAAM/B,EAAK2B,GAAK,IAE1BE,GAASH,EACJ5W,KAAKiX,MAAM/B,EAAK0B,GAAK,IAE1BG,GAAS3I,EACJpO,KAAKiX,MAAM/B,EAAK9G,GAAK,IAEvB8G,EAAK,IACd,CAhGyCqC,CAASjb,GAEhD,MAAM,IAAIvI,MACR,wDACEoB,KAAKC,UAAUkH,GAErB,wBCjCA,MAAMkb,EAAW,CAIjBA,mBAA8B,WAC5B,OAAOxX,KAAKC,SAASnL,SAAS,IAAIghB,UAAU,EAAG,GACjD,GAGA0B,EAASC,WAAaD,EAASE,qBAG/BF,EAASG,WAAa,SAASC,GAC7B,OAAOA,EAAKC,OAAOtB,MAAM,MAAMJ,KAAIvK,GAAQA,EAAKiM,QAClD,EAEAL,EAASM,cAAgB,SAASF,GAEhC,OADcA,EAAKrB,MAAM,QACZJ,KAAI,CAAC4B,EAAMrJ,KAAWA,EAAQ,EACzC,KAAOqJ,EAAOA,GAAMF,OAAS,QACjC,EAGAL,EAASQ,eAAiB,SAASJ,GACjC,MAAMK,EAAWT,EAASM,cAAcF,GACxC,OAAOK,GAAYA,EAAS,EAC9B,EAGAT,EAASU,iBAAmB,SAASN,GACnC,MAAMK,EAAWT,EAASM,cAAcF,GAExC,OADAK,EAASE,QACFF,CACT,EAGAT,EAASY,YAAc,SAASR,EAAMS,GACpC,OAAOb,EAASG,WAAWC,GAAMU,QAAO1M,GAAiC,IAAzBA,EAAK1M,QAAQmZ,IAC/D,EAMAb,EAASe,eAAiB,SAAS3M,GACjC,IAAI4M,EAGFA,EADmC,IAAjC5M,EAAK1M,QAAQ,gBACP0M,EAAKkK,UAAU,IAAIS,MAAM,KAEzB3K,EAAKkK,UAAU,IAAIS,MAAM,KAGnC,MAAMnjB,EAAY,CAChBqlB,WAAYD,EAAM,GAClBE,UAAW,CAAC,EAAG,MAAO,EAAG,QAAQF,EAAM,KAAOA,EAAM,GACpDG,SAAUH,EAAM,GAAGtG,cACnB0G,SAAUxO,SAASoO,EAAM,GAAI,IAC7BK,GAAIL,EAAM,GACVM,QAASN,EAAM,GACfO,KAAM3O,SAASoO,EAAM,GAAI,IAEzB3lB,KAAM2lB,EAAM,IAGd,IAAK,IAAI9jB,EAAI,EAAGA,EAAI8jB,EAAM7jB,OAAQD,GAAK,EACrC,OAAQ8jB,EAAM9jB,IACZ,IAAK,QACHtB,EAAU4lB,eAAiBR,EAAM9jB,EAAI,GACrC,MACF,IAAK,QACHtB,EAAU6lB,YAAc7O,SAASoO,EAAM9jB,EAAI,GAAI,IAC/C,MACF,IAAK,UACHtB,EAAU8lB,QAAUV,EAAM9jB,EAAI,GAC9B,MACF,IAAK,QACHtB,EAAU+lB,MAAQX,EAAM9jB,EAAI,GAC5BtB,EAAUgmB,iBAAmBZ,EAAM9jB,EAAI,GACvC,MACF,aAC8BxD,IAAxBkC,EAAUolB,EAAM9jB,MAClBtB,EAAUolB,EAAM9jB,IAAM8jB,EAAM9jB,EAAI,IAKxC,OAAOtB,CACT,EAIAokB,EAAS6B,eAAiB,SAASjmB,GACjC,MAAMsY,EAAM,GACZA,EAAIvX,KAAKf,EAAUqlB,YAEnB,MAAMC,EAAYtlB,EAAUslB,UACV,QAAdA,EACFhN,EAAIvX,KAAK,GACc,SAAdukB,EACThN,EAAIvX,KAAK,GAETuX,EAAIvX,KAAKukB,GAEXhN,EAAIvX,KAAKf,EAAUulB,SAASW,eAC5B5N,EAAIvX,KAAKf,EAAUwlB,UACnBlN,EAAIvX,KAAKf,EAAU0lB,SAAW1lB,EAAUylB,IACxCnN,EAAIvX,KAAKf,EAAU2lB,MAEnB,MAAMlmB,EAAOO,EAAUP,KAkBvB,OAjBA6Y,EAAIvX,KAAK,OACTuX,EAAIvX,KAAKtB,GACI,SAATA,GAAmBO,EAAU4lB,gBAC7B5lB,EAAU6lB,cACZvN,EAAIvX,KAAK,SACTuX,EAAIvX,KAAKf,EAAU4lB,gBACnBtN,EAAIvX,KAAK,SACTuX,EAAIvX,KAAKf,EAAU6lB,cAEjB7lB,EAAU8lB,SAAgD,QAArC9lB,EAAUulB,SAASzG,gBAC1CxG,EAAIvX,KAAK,WACTuX,EAAIvX,KAAKf,EAAU8lB,WAEjB9lB,EAAUgmB,kBAAoBhmB,EAAU+lB,SAC1CzN,EAAIvX,KAAK,SACTuX,EAAIvX,KAAKf,EAAUgmB,kBAAoBhmB,EAAU+lB,QAE5C,aAAezN,EAAI2K,KAAK,IACjC,EAKAmB,EAAS+B,gBAAkB,SAAS3N,GAClC,OAAOA,EAAKkK,UAAU,IAAIS,MAAM,IAClC,EAIAiB,EAASgC,YAAc,SAAS5N,GAC9B,IAAI4M,EAAQ5M,EAAKkK,UAAU,GAAGS,MAAM,KACpC,MAAMkD,EAAS,CACbxN,YAAa7B,SAASoO,EAAML,QAAS,KAUvC,OAPAK,EAAQA,EAAM,GAAGjC,MAAM,KAEvBkD,EAAO3d,KAAO0c,EAAM,GACpBiB,EAAOC,UAAYtP,SAASoO,EAAM,GAAI,IACtCiB,EAAOE,SAA4B,IAAjBnB,EAAM7jB,OAAeyV,SAASoO,EAAM,GAAI,IAAM,EAEhEiB,EAAOG,YAAcH,EAAOE,SACrBF,CACT,EAIAjC,EAASqC,YAAc,SAASC,GAC9B,IAAIjO,EAAKiO,EAAM7N,iBACoB/a,IAA/B4oB,EAAMC,uBACRlO,EAAKiO,EAAMC,sBAEb,MAAMJ,EAAWG,EAAMH,UAAYG,EAAMF,aAAe,EACxD,MAAO,YAAc/N,EAAK,IAAMiO,EAAMhe,KAAO,IAAMge,EAAMJ,WACvC,IAAbC,EAAiB,IAAMA,EAAW,IAAM,MAC/C,EAKAnC,EAASwC,YAAc,SAASpO,GAC9B,MAAM4M,EAAQ5M,EAAKkK,UAAU,GAAGS,MAAM,KACtC,MAAO,CACLtlB,GAAImZ,SAASoO,EAAM,GAAI,IACvByB,UAAWzB,EAAM,GAAGtZ,QAAQ,KAAO,EAAIsZ,EAAM,GAAGjC,MAAM,KAAK,GAAK,WAChE2D,IAAK1B,EAAM,GACX2B,WAAY3B,EAAM3b,MAAM,GAAGwZ,KAAK,KAEpC,EAIAmB,EAAS4C,YAAc,SAASC,GAC9B,MAAO,aAAeA,EAAgBppB,IAAMopB,EAAgBC,cACvDD,EAAgBJ,WAA2C,aAA9BI,EAAgBJ,UAC1C,IAAMI,EAAgBJ,UACtB,IACJ,IAAMI,EAAgBH,KACrBG,EAAgBF,WAAa,IAAME,EAAgBF,WAAa,IACjE,MACN,EAKA3C,EAASzL,UAAY,SAASH,GAC5B,MAAM6N,EAAS,CAAC,EAChB,IAAIc,EACJ,MAAM/B,EAAQ5M,EAAKkK,UAAUlK,EAAK1M,QAAQ,KAAO,GAAGqX,MAAM,KAC1D,IAAK,IAAI1O,EAAI,EAAGA,EAAI2Q,EAAM7jB,OAAQkT,IAChC0S,EAAK/B,EAAM3Q,GAAGgQ,OAAOtB,MAAM,KAC3BkD,EAAOc,EAAG,GAAG1C,QAAU0C,EAAG,GAE5B,OAAOd,CACT,EAGAjC,EAASxL,UAAY,SAAS8N,GAC5B,IAAIlO,EAAO,GACPC,EAAKiO,EAAM7N,YAIf,QAHmC/a,IAA/B4oB,EAAMC,uBACRlO,EAAKiO,EAAMC,sBAETD,EAAMhO,YAAcra,OAAO4K,KAAKyd,EAAMhO,YAAYnX,OAAQ,CAC5D,MAAM6lB,EAAS,GACf/oB,OAAO4K,KAAKyd,EAAMhO,YAAYhT,SAAQ2hB,SACJvpB,IAA5B4oB,EAAMhO,WAAW2O,GACnBD,EAAOrmB,KAAKsmB,EAAQ,IAAMX,EAAMhO,WAAW2O,IAE3CD,EAAOrmB,KAAKsmB,EACd,IAEF7O,GAAQ,UAAYC,EAAK,IAAM2O,EAAOnE,KAAK,KAAO,MACpD,CACA,OAAOzK,CACT,EAIA4L,EAASkD,YAAc,SAAS9O,GAC9B,MAAM4M,EAAQ5M,EAAKkK,UAAUlK,EAAK1M,QAAQ,KAAO,GAAGqX,MAAM,KAC1D,MAAO,CACL1jB,KAAM2lB,EAAML,QACZwC,UAAWnC,EAAMnC,KAAK,KAE1B,EAGAmB,EAASoD,YAAc,SAASd,GAC9B,IAAIe,EAAQ,GACRhP,EAAKiO,EAAM7N,YAYf,YAXmC/a,IAA/B4oB,EAAMC,uBACRlO,EAAKiO,EAAMC,sBAETD,EAAMgB,cAAgBhB,EAAMgB,aAAanmB,QAE3CmlB,EAAMgB,aAAahiB,SAAQiiB,IACzBF,GAAS,aAAehP,EAAK,IAAMkP,EAAGloB,MACrCkoB,EAAGJ,WAAaI,EAAGJ,UAAUhmB,OAAS,IAAMomB,EAAGJ,UAAY,IACxD,MAAM,IAGPE,CACT,EAIArD,EAASwD,eAAiB,SAASpP,GACjC,MAAMqP,EAAKrP,EAAK1M,QAAQ,KAClBsZ,EAAQ,CACZ0C,KAAM9Q,SAASwB,EAAKkK,UAAU,EAAGmF,GAAK,KAElCE,EAAQvP,EAAK1M,QAAQ,IAAK+b,GAOhC,OANIE,GAAS,GACX3C,EAAM4C,UAAYxP,EAAKkK,UAAUmF,EAAK,EAAGE,GACzC3C,EAAMjiB,MAAQqV,EAAKkK,UAAUqF,EAAQ,IAErC3C,EAAM4C,UAAYxP,EAAKkK,UAAUmF,EAAK,GAEjCzC,CACT,EAIAhB,EAAS6D,eAAiB,SAASzP,GACjC,MAAM4M,EAAQ5M,EAAKkK,UAAU,IAAIS,MAAM,KACvC,MAAO,CACL+E,UAAW9C,EAAML,QACjBoD,MAAO/C,EAAMrC,KAAI+E,GAAQ9Q,SAAS8Q,EAAM,MAE5C,EAIA1D,EAASgE,OAAS,SAASC,GACzB,MAAMC,EAAMlE,EAASY,YAAYqD,EAAc,UAAU,GACzD,GAAIC,EACF,OAAOA,EAAI5F,UAAU,EAEzB,EAGA0B,EAASmE,iBAAmB,SAAS/P,GACnC,MAAM4M,EAAQ5M,EAAKkK,UAAU,IAAIS,MAAM,KACvC,MAAO,CACLqF,UAAWpD,EAAM,GAAGtG,cACpB3b,MAAOiiB,EAAM,GAAGc,cAEpB,EAKA9B,EAASqE,kBAAoB,SAASJ,EAAcK,GAIlD,MAAO,CACLC,KAAM,OACNC,aALYxE,EAASY,YAAYqD,EAAeK,EAChD,kBAIoB3F,IAAIqB,EAASmE,kBAErC,EAGAnE,EAASyE,oBAAsB,SAASzB,EAAQ0B,GAC9C,IAAIxQ,EAAM,WAAawQ,EAAY,OAInC,OAHA1B,EAAOwB,aAAaljB,SAAQqjB,IAC1BzQ,GAAO,iBAAmByQ,EAAGP,UAAY,IAAMO,EAAG5lB,MAAQ,MAAM,IAE3DmV,CACT,EAIA8L,EAAS4E,gBAAkB,SAASxQ,GAClC,MAAM4M,EAAQ5M,EAAKkK,UAAU,GAAGS,MAAM,KACtC,MAAO,CACL8F,IAAKjS,SAASoO,EAAM,GAAI,IACxB8D,YAAa9D,EAAM,GACnB+D,UAAW/D,EAAM,GACjBgE,cAAehE,EAAM3b,MAAM,GAE/B,EAEA2a,EAASiF,gBAAkB,SAAS3Q,GAClC,MAAO,YAAcA,EAAWuQ,IAAM,IACpCvQ,EAAWwQ,YAAc,KACQ,iBAAzBxQ,EAAWyQ,UACf/E,EAASkF,qBAAqB5Q,EAAWyQ,WACzCzQ,EAAWyQ,YACdzQ,EAAW0Q,cAAgB,IAAM1Q,EAAW0Q,cAAcnG,KAAK,KAAO,IACvE,MACJ,EAIAmB,EAASmF,qBAAuB,SAASJ,GACvC,GAAqC,IAAjCA,EAAUrd,QAAQ,WACpB,OAAO,KAET,MAAMsZ,EAAQ+D,EAAUzG,UAAU,GAAGS,MAAM,KAC3C,MAAO,CACLqG,UAAW,SACXC,QAASrE,EAAM,GACfsE,SAAUtE,EAAM,GAChBuE,SAAUvE,EAAM,GAAKA,EAAM,GAAGjC,MAAM,KAAK,QAAKrlB,EAC9C8rB,UAAWxE,EAAM,GAAKA,EAAM,GAAGjC,MAAM,KAAK,QAAKrlB,EAEnD,EAEAsmB,EAASkF,qBAAuB,SAASH,GACvC,OAAOA,EAAUK,UAAY,IACzBL,EAAUM,SACXN,EAAUO,SAAW,IAAMP,EAAUO,SAAW,KAChDP,EAAUQ,UAAYR,EAAUS,UAC7B,IAAMT,EAAUQ,SAAW,IAAMR,EAAUS,UAC3C,GACR,EAGAxF,EAASyF,oBAAsB,SAASxB,EAAcK,GAGpD,OAFctE,EAASY,YAAYqD,EAAeK,EAChD,aACW3F,IAAIqB,EAAS4E,gBAC5B,EAKA5E,EAAS0F,iBAAmB,SAASzB,EAAcK,GACjD,MAAM3C,EAAQ3B,EAASY,YAAYqD,EAAeK,EAChD,gBAAgB,GACZqB,EAAM3F,EAASY,YAAYqD,EAAeK,EAC9C,cAAc,GAChB,OAAM3C,GAASgE,EAGR,CACL/D,iBAAkBD,EAAMrD,UAAU,IAClCsH,SAAUD,EAAIrH,UAAU,KAJjB,IAMX,EAGA0B,EAAS6F,mBAAqB,SAAS7C,GACrC,IAAI9O,EAAM,eAAiB8O,EAAOpB,iBAAxB,iBACSoB,EAAO4C,SAAW,OAIrC,OAHI5C,EAAO8C,UACT5R,GAAO,kBAEFA,CACT,EAGA8L,EAAS+F,mBAAqB,SAAS9B,GACrC,MAAM+B,EAAc,CAClBC,OAAQ,GACRC,iBAAkB,GAClBC,cAAe,GACfC,KAAM,IAGFC,EADQrG,EAASG,WAAW8D,GACd,GAAGlF,MAAM,KAC7BiH,EAAYM,QAAUD,EAAM,GAC5B,IAAK,IAAInpB,EAAI,EAAGA,EAAImpB,EAAMlpB,OAAQD,IAAK,CACrC,MAAMmX,EAAKgS,EAAMnpB,GACXqpB,EAAavG,EAASY,YAC1BqD,EAAc,YAAc5P,EAAK,KAAK,GACxC,GAAIkS,EAAY,CACd,MAAMjE,EAAQtC,EAASgC,YAAYuE,GAC7BC,EAAQxG,EAASY,YACrBqD,EAAc,UAAY5P,EAAK,KAQjC,OANAiO,EAAMhO,WAAakS,EAAMrpB,OAAS6iB,EAASzL,UAAUiS,EAAM,IAAM,CAAC,EAClElE,EAAMgB,aAAetD,EAASY,YAC5BqD,EAAc,aAAe5P,EAAK,KACjCsK,IAAIqB,EAASkD,aAChB8C,EAAYC,OAAOtpB,KAAK2lB,GAEhBA,EAAMhe,KAAKwd,eACjB,IAAK,MACL,IAAK,SACHkE,EAAYG,cAAcxpB,KAAK2lB,EAAMhe,KAAKwd,eAKhD,CACF,CACA9B,EAASY,YAAYqD,EAAc,aAAa3iB,SAAQ8S,IACtD4R,EAAYE,iBAAiBvpB,KAAKqjB,EAASwC,YAAYpO,GAAM,IAE/D,MAAMqS,EAAiBzG,EAASY,YAAYqD,EAAc,gBACvDtF,IAAIqB,EAASkD,aAahB,OAZA8C,EAAYC,OAAO3kB,SAAQghB,IACzBmE,EAAenlB,SAAQiiB,IACHjB,EAAMgB,aAAa9I,MAAKkM,GACjCA,EAAiBrrB,OAASkoB,EAAGloB,MAClCqrB,EAAiBvD,YAAcI,EAAGJ,aAGpCb,EAAMgB,aAAa3mB,KAAK4mB,EAC1B,GACA,IAGGyC,CACT,EAIAhG,EAAS2G,oBAAsB,SAAS7oB,EAAM8oB,GAC5C,IAAI1S,EAAM,GAGVA,GAAO,KAAOpW,EAAO,IACrBoW,GAAO0S,EAAKX,OAAO9oB,OAAS,EAAI,IAAM,IACtC+W,GAAO,KAAO0S,EAAKN,SAAW,qBAAuB,IACrDpS,GAAO0S,EAAKX,OAAOtH,KAAI2D,QACc5oB,IAA/B4oB,EAAMC,qBACDD,EAAMC,qBAERD,EAAM7N,cACZoK,KAAK,KAAO,OAEf3K,GAAO,uBACPA,GAAO,8BAGP0S,EAAKX,OAAO3kB,SAAQghB,IAClBpO,GAAO8L,EAASqC,YAAYC,GAC5BpO,GAAO8L,EAASxL,UAAU8N,GAC1BpO,GAAO8L,EAASoD,YAAYd,EAAM,IAEpC,IAAIuE,EAAW,EAgBf,OAfAD,EAAKX,OAAO3kB,SAAQghB,IACdA,EAAMuE,SAAWA,IACnBA,EAAWvE,EAAMuE,SACnB,IAEEA,EAAW,IACb3S,GAAO,cAAgB2S,EAAW,QAGhCD,EAAKV,kBACPU,EAAKV,iBAAiB5kB,SAAQwlB,IAC5B5S,GAAO8L,EAAS4C,YAAYkE,EAAU,IAInC5S,CACT,EAIA8L,EAAS+G,2BAA6B,SAAS9C,GAC7C,MAAM+C,EAAqB,GACrBhB,EAAchG,EAAS+F,mBAAmB9B,GAC1CgD,GAAuD,IAA9CjB,EAAYG,cAAcze,QAAQ,OAC3Cwf,GAA6D,IAAjDlB,EAAYG,cAAcze,QAAQ,UAG9Cqc,EAAQ/D,EAASY,YAAYqD,EAAc,WAC9CtF,KAAIvK,GAAQ4L,EAASwD,eAAepP,KACpC0M,QAAOE,GAA6B,UAApBA,EAAM4C,YACnBuD,EAAcpD,EAAM5mB,OAAS,GAAK4mB,EAAM,GAAGL,KACjD,IAAI0D,EAEJ,MAAMC,EAAQrH,EAASY,YAAYqD,EAAc,oBAC9CtF,KAAIvK,GACWA,EAAKkK,UAAU,IAAIS,MAAM,KAC1BJ,KAAI4B,GAAQ3N,SAAS2N,EAAM,QAExC8G,EAAMlqB,OAAS,GAAKkqB,EAAM,GAAGlqB,OAAS,GAAKkqB,EAAM,GAAG,KAAOF,IAC7DC,EAAgBC,EAAM,GAAG,IAG3BrB,EAAYC,OAAO3kB,SAAQghB,IACzB,GAAiC,QAA7BA,EAAMhe,KAAKwd,eAA2BQ,EAAMhO,WAAWgT,IAAK,CAC9D,IAAIC,EAAW,CACb7D,KAAMyD,EACNK,iBAAkB5U,SAAS0P,EAAMhO,WAAWgT,IAAK,KAE/CH,GAAeC,IACjBG,EAASE,IAAM,CAAC/D,KAAM0D,IAExBJ,EAAmBrqB,KAAK4qB,GACpBN,IACFM,EAAW5pB,KAAKqS,MAAMrS,KAAKC,UAAU2pB,IACrCA,EAASG,IAAM,CACbhE,KAAMyD,EACNQ,UAAWT,EAAY,aAAe,OAExCF,EAAmBrqB,KAAK4qB,GAE5B,KAEgC,IAA9BP,EAAmB7pB,QAAgBgqB,GACrCH,EAAmBrqB,KAAK,CACtB+mB,KAAMyD,IAKV,IAAIS,EAAY5H,EAASY,YAAYqD,EAAc,MAenD,OAdI2D,EAAUzqB,SAEVyqB,EADsC,IAApCA,EAAU,GAAGlgB,QAAQ,WACXkL,SAASgV,EAAU,GAAGtJ,UAAU,GAAI,IACL,IAAlCsJ,EAAU,GAAGlgB,QAAQ,SAEwB,IAA1CkL,SAASgV,EAAU,GAAGtJ,UAAU,GAAI,IAAa,IACvD,UAEM5kB,EAEdstB,EAAmB1lB,SAAQ0hB,IACzBA,EAAO6E,WAAaD,CAAS,KAG1BZ,CACT,EAGAhH,EAAS8H,oBAAsB,SAAS7D,GACtC,MAAM8D,EAAiB,CAAC,EAIlBC,EAAahI,EAASY,YAAYqD,EAAc,WACnDtF,KAAIvK,GAAQ4L,EAASwD,eAAepP,KACpC0M,QAAOliB,GAAyB,UAAlBA,EAAIglB,YAAuB,GACxCoE,IACFD,EAAeE,MAAQD,EAAWjpB,MAClCgpB,EAAerE,KAAOsE,EAAWtE,MAKnC,MAAMwE,EAAQlI,EAASY,YAAYqD,EAAc,gBACjD8D,EAAeI,YAAcD,EAAM/qB,OAAS,EAC5C4qB,EAAeK,SAA4B,IAAjBF,EAAM/qB,OAIhC,MAAMkrB,EAAMrI,EAASY,YAAYqD,EAAc,cAG/C,OAFA8D,EAAeM,IAAMA,EAAIlrB,OAAS,EAE3B4qB,CACT,EAEA/H,EAASsI,oBAAsB,SAASP,GACtC,IAAI7T,EAAM,GAWV,OAVI6T,EAAeI,cACjBjU,GAAO,oBAEL6T,EAAeM,MACjBnU,GAAO,uBAEmBxa,IAAxBquB,EAAerE,MAAsBqE,EAAeE,QACtD/T,GAAO,UAAY6T,EAAerE,KAChC,UAAYqE,EAAeE,MAAQ,QAEhC/T,CACT,EAKA8L,EAASuI,UAAY,SAAStE,GAC5B,IAAIjD,EACJ,MAAMwH,EAAOxI,EAASY,YAAYqD,EAAc,WAChD,GAAoB,IAAhBuE,EAAKrrB,OAEP,OADA6jB,EAAQwH,EAAK,GAAGlK,UAAU,GAAGS,MAAM,KAC5B,CAACtF,OAAQuH,EAAM,GAAI9N,MAAO8N,EAAM,IAEzC,MAAMyH,EAAQzI,EAASY,YAAYqD,EAAc,WAC9CtF,KAAIvK,GAAQ4L,EAASwD,eAAepP,KACpC0M,QAAO4H,GAAqC,SAAxBA,EAAU9E,YACjC,OAAI6E,EAAMtrB,OAAS,GACjB6jB,EAAQyH,EAAM,GAAG1pB,MAAMggB,MAAM,KACtB,CAACtF,OAAQuH,EAAM,GAAI9N,MAAO8N,EAAM,UAFzC,CAIF,EAKAhB,EAAS2I,qBAAuB,SAAS1E,GACvC,MAAMoC,EAAQrG,EAAS4I,WAAW3E,GAC5B4E,EAAc7I,EAASY,YAAYqD,EAAc,uBACvD,IAAI6E,EACAD,EAAY1rB,OAAS,IACvB2rB,EAAiBlW,SAASiW,EAAY,GAAGvK,UAAU,IAAK,KAEtDva,MAAM+kB,KACRA,EAAiB,OAEnB,MAAMC,EAAW/I,EAASY,YAAYqD,EAAc,gBACpD,GAAI8E,EAAS5rB,OAAS,EACpB,MAAO,CACLokB,KAAM3O,SAASmW,EAAS,GAAGzK,UAAU,IAAK,IAC1C6C,SAAUkF,EAAM2C,IAChBF,kBAGJ,MAAMG,EAAejJ,EAASY,YAAYqD,EAAc,cACxD,GAAIgF,EAAa9rB,OAAS,EAAG,CAC3B,MAAM6jB,EAAQiI,EAAa,GACxB3K,UAAU,IACVS,MAAM,KACT,MAAO,CACLwC,KAAM3O,SAASoO,EAAM,GAAI,IACzBG,SAAUH,EAAM,GAChB8H,iBAEJ,CACF,EAOA9I,EAASkJ,qBAAuB,SAAS5T,EAAO6T,GAC9C,IAAIvvB,EAAS,GAiBb,OAfEA,EADqB,cAAnB0b,EAAM6L,SACC,CACP,KAAO7L,EAAMxX,KAAO,MAAQwX,EAAM6L,SAAW,IAAMgI,EAAKhI,SAAW,OACnE,uBACA,eAAiBgI,EAAK5H,KAAO,QAGtB,CACP,KAAOjM,EAAMxX,KAAO,MAAQwX,EAAM6L,SAAW,IAAMgI,EAAK5H,KAAO,OAC/D,uBACA,aAAe4H,EAAK5H,KAAO,IAAM4H,EAAKhI,SAAW,mBAGzBznB,IAAxByvB,EAAKL,gBACPlvB,EAAO+C,KAAK,sBAAwBwsB,EAAKL,eAAiB,QAErDlvB,EAAOilB,KAAK,GACrB,EAMAmB,EAASoJ,kBAAoB,WAC3B,OAAO5gB,KAAKC,SAASnL,WAAW+rB,OAAO,EAAG,GAC5C,EAOArJ,EAASsJ,wBAA0B,SAASC,EAAQC,EAASC,GAC3D,IAAIC,EACJ,MAAMC,OAAsBjwB,IAAZ8vB,EAAwBA,EAAU,EAQlD,OANEE,EADEH,GAGUvJ,EAASoJ,oBAIhB,aAFMK,GAAY,qBAGP,IAAMC,EAAY,IAAMC,EADnC,uCAKT,EAGA3J,EAAS4J,aAAe,SAAS3F,EAAcK,GAE7C,MAAMjB,EAAQrD,EAASG,WAAW8D,GAClC,IAAK,IAAI/mB,EAAI,EAAGA,EAAImmB,EAAMlmB,OAAQD,IAChC,OAAQmmB,EAAMnmB,IACZ,IAAK,aACL,IAAK,aACL,IAAK,aACL,IAAK,aACH,OAAOmmB,EAAMnmB,GAAGohB,UAAU,GAKhC,OAAIgG,EACKtE,EAAS4J,aAAatF,GAExB,UACT,EAEAtE,EAAS6J,QAAU,SAAS5F,GAG1B,OAFcjE,EAASG,WAAW8D,GACd,GAAGlF,MAAM,KAChB,GAAGT,UAAU,EAC5B,EAEA0B,EAAS8J,WAAa,SAAS7F,GAC7B,MAAyC,MAAlCA,EAAalF,MAAM,IAAK,GAAG,EACpC,EAEAiB,EAAS4I,WAAa,SAAS3E,GAC7B,MACMjD,EADQhB,EAASG,WAAW8D,GACd,GAAG3F,UAAU,GAAGS,MAAM,KAC1C,MAAO,CACLjhB,KAAMkjB,EAAM,GACZO,KAAM3O,SAASoO,EAAM,GAAI,IACzBG,SAAUH,EAAM,GAChBgI,IAAKhI,EAAM3b,MAAM,GAAGwZ,KAAK,KAE7B,EAEAmB,EAAS+J,WAAa,SAAS9F,GAC7B,MACMjD,EADOhB,EAASY,YAAYqD,EAAc,MAAM,GACnC3F,UAAU,GAAGS,MAAM,KACtC,MAAO,CACLiL,SAAUhJ,EAAM,GAChB0I,UAAW1I,EAAM,GACjBiJ,eAAgBrX,SAASoO,EAAM,GAAI,IACnCkJ,QAASlJ,EAAM,GACfmJ,YAAanJ,EAAM,GACnBM,QAASN,EAAM,GAEnB,EAGAhB,EAASoK,WAAa,SAAShK,GAC7B,GAAoB,iBAATA,GAAqC,IAAhBA,EAAKjjB,OACnC,OAAO,EAET,MAAMkmB,EAAQrD,EAASG,WAAWC,GAClC,IAAK,IAAIljB,EAAI,EAAGA,EAAImmB,EAAMlmB,OAAQD,IAChC,GAAImmB,EAAMnmB,GAAGC,OAAS,GAA4B,MAAvBkmB,EAAMnmB,GAAGkI,OAAO,GACzC,OAAO,EAIX,OAAO,CACT,EAIE9G,EAAOC,QAAUyhB,IC/xBfqK,EAA2B,CAAC,GAGhC,SAASC,EAAoBC,GAE5B,IAAIC,EAAeH,EAAyBE,GAC5C,QAAqB7wB,IAAjB8wB,EACH,OAAOA,EAAajsB,QAGrB,IAAID,EAAS+rB,EAAyBE,GAAY,CAGjDhsB,QAAS,CAAC,GAOX,OAHAksB,EAAoBF,GAAUjsB,EAAQA,EAAOC,QAAS+rB,GAG/ChsB,EAAOC,OACf,CCnB0B+rB,CAAoB","sources":["webpack://@networked-aframe/naf-janus-adapter/./node_modules/@networked-aframe/minijanus/minijanus.js","webpack://@networked-aframe/naf-janus-adapter/./src/index.js","webpack://@networked-aframe/naf-janus-adapter/./node_modules/debug/src/browser.js","webpack://@networked-aframe/naf-janus-adapter/./node_modules/debug/src/common.js","webpack://@networked-aframe/naf-janus-adapter/./node_modules/ms/index.js","webpack://@networked-aframe/naf-janus-adapter/./node_modules/sdp/sdp.js","webpack://@networked-aframe/naf-janus-adapter/webpack/bootstrap","webpack://@networked-aframe/naf-janus-adapter/webpack/startup"],"sourcesContent":["/**\n * Represents a handle to a single Janus plugin on a Janus session. Each WebRTC connection to the Janus server will be\n * associated with a single handle. Once attached to the server, this handle will be given a unique ID which should be\n * used to associate it with future signalling messages.\n *\n * See https://janus.conf.meetecho.com/docs/rest.html#handles.\n **/\nfunction JanusPluginHandle(session) {\n  this.session = session;\n  this.id = undefined;\n}\n\n/** Attaches this handle to the Janus server and sets its ID. **/\nJanusPluginHandle.prototype.attach = function(plugin, loop_index) {\n  var payload = { plugin: plugin, loop_index: loop_index, \"force-bundle\": true, \"force-rtcp-mux\": true };\n  return this.session.send(\"attach\", payload).then(resp => {\n    this.id = resp.data.id;\n    return resp;\n  });\n};\n\n/** Detaches this handle. **/\nJanusPluginHandle.prototype.detach = function() {\n  return this.send(\"detach\");\n};\n\n/** Registers a callback to be fired upon the reception of any incoming Janus signals for this plugin handle with the\n * `janus` attribute equal to `ev`.\n **/\nJanusPluginHandle.prototype.on = function(ev, callback) {\n  return this.session.on(ev, signal => {\n    if (signal.sender == this.id) {\n      callback(signal);\n    }\n  });\n};\n\n/**\n * Sends a signal associated with this handle. Signals should be JSON-serializable objects. Returns a promise that will\n * be resolved or rejected when a response to this signal is received, or when no response is received within the\n * session timeout.\n **/\nJanusPluginHandle.prototype.send = function(type, signal) {\n  return this.session.send(type, Object.assign({ handle_id: this.id }, signal));\n};\n\n/** Sends a plugin-specific message associated with this handle. **/\nJanusPluginHandle.prototype.sendMessage = function(body) {\n  return this.send(\"message\", { body: body });\n};\n\n/** Sends a JSEP offer or answer associated with this handle. **/\nJanusPluginHandle.prototype.sendJsep = function(jsep) {\n  return this.send(\"message\", { body: {}, jsep: jsep });\n};\n\n/** Sends an ICE trickle candidate associated with this handle. **/\nJanusPluginHandle.prototype.sendTrickle = function(candidate) {\n  return this.send(\"trickle\", { candidate: candidate });\n};\n\n/**\n * Represents a Janus session -- a Janus context from within which you can open multiple handles and connections. Once\n * created, this session will be given a unique ID which should be used to associate it with future signalling messages.\n *\n * See https://janus.conf.meetecho.com/docs/rest.html#sessions.\n **/\nfunction JanusSession(output, options) {\n  this.output = output;\n  this.id = undefined;\n  this.nextTxId = 0;\n  this.txns = {};\n  this.eventHandlers = {};\n  this.options = Object.assign({\n    verbose: false,\n    timeoutMs: 10000,\n    keepaliveMs: 30000\n  }, options);\n}\n\n/** Creates this session on the Janus server and sets its ID. **/\nJanusSession.prototype.create = function() {\n  return this.send(\"create\").then(resp => {\n    this.id = resp.data.id;\n    return resp;\n  });\n};\n\n/**\n * Destroys this session. Note that upon destruction, Janus will also close the signalling transport (if applicable) and\n * any open WebRTC connections.\n **/\nJanusSession.prototype.destroy = function() {\n  return this.send(\"destroy\").then((resp) => {\n    this.dispose();\n    return resp;\n  });\n};\n\n/**\n * Disposes of this session in a way such that no further incoming signalling messages will be processed.\n * Outstanding transactions will be rejected.\n **/\nJanusSession.prototype.dispose = function() {\n  this._killKeepalive();\n  this.eventHandlers = {};\n  for (var txId in this.txns) {\n    if (this.txns.hasOwnProperty(txId)) {\n      var txn = this.txns[txId];\n      clearTimeout(txn.timeout);\n      txn.reject(new Error(\"Janus session was disposed.\"));\n      delete this.txns[txId];\n    }\n  }\n};\n\n/**\n * Whether this signal represents an error, and the associated promise (if any) should be rejected.\n * Users should override this to handle any custom plugin-specific error conventions.\n **/\nJanusSession.prototype.isError = function(signal) {\n  return signal.janus === \"error\";\n};\n\n/** Registers a callback to be fired upon the reception of any incoming Janus signals for this session with the\n * `janus` attribute equal to `ev`.\n **/\nJanusSession.prototype.on = function(ev, callback) {\n  var handlers = this.eventHandlers[ev];\n  if (handlers == null) {\n    handlers = this.eventHandlers[ev] = [];\n  }\n  handlers.push(callback);\n};\n\n/**\n * Callback for receiving JSON signalling messages pertinent to this session. If the signals are responses to previously\n * sent signals, the promises for the outgoing signals will be resolved or rejected appropriately with this signal as an\n * argument.\n *\n * External callers should call this function every time a new signal arrives on the transport; for example, in a\n * WebSocket's `message` event, or when a new datum shows up in an HTTP long-polling response.\n **/\nJanusSession.prototype.receive = function(signal) {\n  if (this.options.verbose) {\n    this._logIncoming(signal);\n  }\n  if (signal.session_id != this.id) {\n    console.warn(\"Incorrect session ID received in Janus signalling message: was \" + signal.session_id + \", expected \" + this.id + \".\");\n  }\n\n  var responseType = signal.janus;\n  var handlers = this.eventHandlers[responseType];\n  if (handlers != null) {\n    for (var i = 0; i < handlers.length; i++) {\n      handlers[i](signal);\n    }\n  }\n\n  if (signal.transaction != null) {\n    var txn = this.txns[signal.transaction];\n    if (txn == null) {\n      // this is a response to a transaction that wasn't caused via JanusSession.send, or a plugin replied twice to a\n      // single request, or the session was disposed, or something else that isn't under our purview; that's fine\n      return;\n    }\n\n    if (responseType === \"ack\" && txn.type == \"message\") {\n      // this is an ack of an asynchronously-processed plugin request, we should wait to resolve the promise until the\n      // actual response comes in\n      return;\n    }\n\n    clearTimeout(txn.timeout);\n\n    delete this.txns[signal.transaction];\n    (this.isError(signal) ? txn.reject : txn.resolve)(signal);\n  }\n};\n\n/**\n * Sends a signal associated with this session, beginning a new transaction. Returns a promise that will be resolved or\n * rejected when a response is received in the same transaction, or when no response is received within the session\n * timeout.\n **/\nJanusSession.prototype.send = function(type, signal) {\n  signal = Object.assign({ transaction: (this.nextTxId++).toString() }, signal);\n  return new Promise((resolve, reject) => {\n    var timeout = null;\n    if (this.options.timeoutMs) {\n      timeout = setTimeout(() => {\n        delete this.txns[signal.transaction];\n        reject(new Error(\"Signalling transaction with txid \" + signal.transaction + \" timed out.\"));\n      }, this.options.timeoutMs);\n    }\n    this.txns[signal.transaction] = { resolve: resolve, reject: reject, timeout: timeout, type: type };\n    this._transmit(type, signal);\n  });\n};\n\nJanusSession.prototype._transmit = function(type, signal) {\n  signal = Object.assign({ janus: type }, signal);\n\n  if (this.id != null) { // this.id is undefined in the special case when we're sending the session create message\n    signal = Object.assign({ session_id: this.id }, signal);\n  }\n\n  if (this.options.verbose) {\n    this._logOutgoing(signal);\n  }\n\n  this.output(JSON.stringify(signal));\n  this._resetKeepalive();\n};\n\nJanusSession.prototype._logOutgoing = function(signal) {\n  var kind = signal.janus;\n  if (kind === \"message\" && signal.jsep) {\n    kind = signal.jsep.type;\n  }\n  var message = \"> Outgoing Janus \" + (kind || \"signal\") + \" (#\" + signal.transaction + \"): \";\n  console.debug(\"%c\" + message, \"color: #040\", signal);\n};\n\nJanusSession.prototype._logIncoming = function(signal) {\n  var kind = signal.janus;\n  var message = signal.transaction ?\n      \"< Incoming Janus \" + (kind || \"signal\") + \" (#\" + signal.transaction + \"): \" :\n      \"< Incoming Janus \" + (kind || \"signal\") + \": \";\n  console.debug(\"%c\" + message, \"color: #004\", signal);\n};\n\nJanusSession.prototype._sendKeepalive = function() {\n  return this.send(\"keepalive\");\n};\n\nJanusSession.prototype._killKeepalive = function() {\n  clearTimeout(this.keepaliveTimeout);\n};\n\nJanusSession.prototype._resetKeepalive = function() {\n  this._killKeepalive();\n  if (this.options.keepaliveMs) {\n    this.keepaliveTimeout = setTimeout(() => {\n      this._sendKeepalive().catch(e => console.error(\"Error received from keepalive: \", e));\n    }, this.options.keepaliveMs);\n  }\n};\n\nmodule.exports = {\n  JanusPluginHandle,\n  JanusSession\n};\n","/* global NAF */\nvar mj = require(\"@networked-aframe/minijanus\");\nmj.JanusSession.prototype.sendOriginal = mj.JanusSession.prototype.send;\nmj.JanusSession.prototype.send = function(type, signal) {\n  return this.sendOriginal(type, signal).catch((e) => {\n    if (e.message && e.message.indexOf(\"timed out\") > -1) {\n      console.error(\"web socket timed out\");\n      NAF.connection.adapter.reconnect();\n    } else {\n      throw(e);\n    }\n  });\n}\n\nvar sdpUtils = require(\"sdp\");\nvar debug = require(\"debug\")(\"naf-janus-adapter:debug\");\nvar warn = require(\"debug\")(\"naf-janus-adapter:warn\");\nvar error = require(\"debug\")(\"naf-janus-adapter:error\");\nvar isSafari = /^((?!chrome|android).)*safari/i.test(navigator.userAgent);\n\nconst SUBSCRIBE_TIMEOUT_MS = 15000;\n\nconst AVAILABLE_OCCUPANTS_THRESHOLD = 5;\nconst MAX_SUBSCRIBE_DELAY = 5000;\n\nfunction randomDelay(min, max) {\n  return new Promise(resolve => {\n    const delay = Math.random() * (max - min) + min;\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction debounce(fn) {\n  var curr = Promise.resolve();\n  return function() {\n    var args = Array.prototype.slice.call(arguments);\n    curr = curr.then(_ => fn.apply(this, args));\n  };\n}\n\nfunction randomUint() {\n  return Math.floor(Math.random() * Number.MAX_SAFE_INTEGER);\n}\n\nfunction untilDataChannelOpen(dataChannel) {\n  return new Promise((resolve, reject) => {\n    if (dataChannel.readyState === \"open\") {\n      resolve();\n    } else {\n      let resolver, rejector;\n\n      const clear = () => {\n        dataChannel.removeEventListener(\"open\", resolver);\n        dataChannel.removeEventListener(\"error\", rejector);\n      };\n\n      resolver = () => {\n        clear();\n        resolve();\n      };\n      rejector = () => {\n        clear();\n        reject();\n      };\n\n      dataChannel.addEventListener(\"open\", resolver);\n      dataChannel.addEventListener(\"error\", rejector);\n    }\n  });\n}\n\nconst isH264VideoSupported = (() => {\n  const video = document.createElement(\"video\");\n  return video.canPlayType('video/mp4; codecs=\"avc1.42E01E, mp4a.40.2\"') !== \"\";\n})();\n\nconst OPUS_PARAMETERS = {\n  // indicates that we want to enable DTX to elide silence packets\n  usedtx: 1,\n  // indicates that we prefer to receive mono audio (important for voip profile)\n  stereo: 0,\n  // indicates that we prefer to send mono audio (important for voip profile)\n  \"sprop-stereo\": 0\n};\n\nconst DEFAULT_PEER_CONNECTION_CONFIG = {\n  iceServers: [{ urls: \"stun:stun1.l.google.com:19302\" }, { urls: \"stun:stun2.l.google.com:19302\" }]\n};\n\nconst WS_NORMAL_CLOSURE = 1000;\n\nclass JanusAdapter {\n  constructor() {\n    this.room = null;\n    // We expect the consumer to set a client id before connecting.\n    this.clientId = null;\n    this.joinToken = null;\n\n    this.serverUrl = null;\n    this.webRtcOptions = {};\n    this.peerConnectionConfig = null;\n    this.ws = null;\n    this.session = null;\n    this.reliableTransport = \"datachannel\";\n    this.unreliableTransport = \"datachannel\";\n\n    // In the event the server restarts and all clients lose connection, reconnect with\n    // some random jitter added to prevent simultaneous reconnection requests.\n    this.initialReconnectionDelay = 1000 * Math.random();\n    this.reconnectionDelay = this.initialReconnectionDelay;\n    this.reconnectionTimeout = null;\n    this.maxReconnectionAttempts = 10;\n    this.reconnectionAttempts = 0;\n\n    this.publisher = null;\n    this.occupantIds = [];\n    this.occupants = {};\n    this.mediaStreams = {};\n    this.localMediaStream = null;\n    this.pendingMediaRequests = new Map();\n\n    this.pendingOccupants = new Set();\n    this.availableOccupants = [];\n    this.requestedOccupants = null;\n\n    this.blockedClients = new Map();\n    this.frozenUpdates = new Map();\n\n    this.timeOffsets = [];\n    this.serverTimeRequests = 0;\n    this.avgTimeOffset = 0;\n\n    this.onWebsocketOpen = this.onWebsocketOpen.bind(this);\n    this.onWebsocketClose = this.onWebsocketClose.bind(this);\n    this.onWebsocketMessage = this.onWebsocketMessage.bind(this);\n    this.onDataChannelMessage = this.onDataChannelMessage.bind(this);\n    this.onData = this.onData.bind(this);\n  }\n\n  setServerUrl(url) {\n    this.serverUrl = url;\n  }\n\n  setApp(app) {}\n\n  setRoom(roomName) {\n    this.room = roomName;\n  }\n\n  setJoinToken(joinToken) {\n    this.joinToken = joinToken;\n  }\n\n  setClientId(clientId) {\n    this.clientId = clientId;\n  }\n\n  setWebRtcOptions(options) {\n    this.webRtcOptions = options;\n  }\n\n  setPeerConnectionConfig(peerConnectionConfig) {\n    this.peerConnectionConfig = peerConnectionConfig;\n  }\n\n  setServerConnectListeners(successListener, failureListener) {\n    this.connectSuccess = successListener;\n    this.connectFailure = failureListener;\n  }\n\n  setRoomOccupantListener(occupantListener) {\n    this.onOccupantsChanged = occupantListener;\n  }\n\n  setDataChannelListeners(openListener, closedListener, messageListener) {\n    this.onOccupantConnected = openListener;\n    this.onOccupantDisconnected = closedListener;\n    this.onOccupantMessage = messageListener;\n  }\n\n  setReconnectionListeners(reconnectingListener, reconnectedListener, reconnectionErrorListener) {\n    // onReconnecting is called with the number of milliseconds until the next reconnection attempt\n    this.onReconnecting = reconnectingListener;\n    // onReconnected is called when the connection has been reestablished\n    this.onReconnected = reconnectedListener;\n    // onReconnectionError is called with an error when maxReconnectionAttempts has been reached\n    this.onReconnectionError = reconnectionErrorListener;\n  }\n\n  setEventLoops(loops) {\n    this.loops = loops;\n  }\n\n  connect() {\n    debug(`connecting to ${this.serverUrl}`);\n\n    const websocketConnection = new Promise((resolve, reject) => {\n      this.ws = new WebSocket(this.serverUrl, \"janus-protocol\");\n\n      this.session = new mj.JanusSession(this.ws.send.bind(this.ws), { timeoutMs: 40000 });\n\n      this.ws.addEventListener(\"close\", this.onWebsocketClose);\n      this.ws.addEventListener(\"message\", this.onWebsocketMessage);\n\n      this.wsOnOpen = () => {\n        this.ws.removeEventListener(\"open\", this.wsOnOpen);\n        this.onWebsocketOpen()\n          .then(resolve)\n          .catch(reject);\n      };\n\n      this.ws.addEventListener(\"open\", this.wsOnOpen);\n    });\n\n    return Promise.all([websocketConnection, this.updateTimeOffset()]);\n  }\n\n  disconnect() {\n    debug(`disconnecting`);\n\n    clearTimeout(this.reconnectionTimeout);\n\n    this.removeAllOccupants();\n\n    if (this.publisher) {\n      // Close the publisher peer connection. Which also detaches the plugin handle.\n      this.publisher.conn.close();\n      this.publisher = null;\n    }\n\n    if (this.session) {\n      this.session.dispose();\n      this.session = null;\n    }\n\n    if (this.ws) {\n      this.ws.removeEventListener(\"open\", this.wsOnOpen);\n      this.ws.removeEventListener(\"close\", this.onWebsocketClose);\n      this.ws.removeEventListener(\"message\", this.onWebsocketMessage);\n      this.ws.close();\n      this.ws = null;\n    }\n\n    // Now that all RTCPeerConnection closed, be sure to not call\n    // reconnect() again via performDelayedReconnect if previous\n    // RTCPeerConnection was in the failed state.\n    if (this.delayedReconnectTimeout) {\n      clearTimeout(this.delayedReconnectTimeout);\n      this.delayedReconnectTimeout = null;\n    }\n  }\n\n  isDisconnected() {\n    return this.ws === null;\n  }\n\n  async onWebsocketOpen() {\n    // Create the Janus Session\n    await this.session.create();\n\n    // Attach the SFU Plugin and create a RTCPeerConnection for the publisher.\n    // The publisher sends audio and opens two bidirectional data channels.\n    // One reliable datachannel and one unreliable.\n    this.publisher = await this.createPublisher();\n\n    // Call the naf connectSuccess callback before we start receiving WebRTC messages.\n    this.connectSuccess(this.clientId);\n\n    for (let i = 0; i < this.publisher.initialOccupants.length; i++) {\n      const occupantId = this.publisher.initialOccupants[i];\n      if (occupantId === this.clientId) continue; // Happens during non-graceful reconnects due to zombie sessions\n      this.addAvailableOccupant(occupantId);\n    }\n\n    this.syncOccupants();\n  }\n\n  onWebsocketClose(event) {\n    // The connection was closed successfully. Don't try to reconnect.\n    if (event.code === WS_NORMAL_CLOSURE) {\n      return;\n    }\n\n    console.warn(\"Janus websocket closed unexpectedly.\");\n    if (this.onReconnecting) {\n      this.onReconnecting(this.reconnectionDelay);\n    }\n\n    this.reconnectionTimeout = setTimeout(() => this.reconnect(), this.reconnectionDelay);\n  }\n\n  reconnect() {\n    // Dispose of all networked entities and other resources tied to the session.\n    this.disconnect();\n\n    this.connect()\n      .then(() => {\n        this.reconnectionDelay = this.initialReconnectionDelay;\n        this.reconnectionAttempts = 0;\n\n        if (this.onReconnected) {\n          this.onReconnected();\n        }\n      })\n      .catch(error => {\n        this.reconnectionDelay += 1000;\n        this.reconnectionAttempts++;\n\n        if (this.reconnectionAttempts > this.maxReconnectionAttempts && this.onReconnectionError) {\n          return this.onReconnectionError(\n            new Error(\"Connection could not be reestablished, exceeded maximum number of reconnection attempts.\")\n          );\n        }\n\n        console.warn(\"Error during reconnect, retrying.\");\n        console.warn(error);\n\n        if (this.onReconnecting) {\n          this.onReconnecting(this.reconnectionDelay);\n        }\n\n        this.reconnectionTimeout = setTimeout(() => this.reconnect(), this.reconnectionDelay);\n      });\n  }\n\n  performDelayedReconnect() {\n    if (this.delayedReconnectTimeout) {\n      clearTimeout(this.delayedReconnectTimeout);\n    }\n\n    this.delayedReconnectTimeout = setTimeout(() => {\n      this.delayedReconnectTimeout = null;\n      this.reconnect();\n    }, 10000);\n  }\n\n  onWebsocketMessage(event) {\n    this.session.receive(JSON.parse(event.data));\n  }\n\n  addAvailableOccupant(occupantId) {\n    if (this.availableOccupants.indexOf(occupantId) === -1) {\n      this.availableOccupants.push(occupantId);\n    }\n  }\n\n  removeAvailableOccupant(occupantId) {\n    const idx = this.availableOccupants.indexOf(occupantId);\n    if (idx !== -1) {\n      this.availableOccupants.splice(idx, 1);\n    }\n  }\n\n  syncOccupants(requestedOccupants) {\n    if (requestedOccupants) {\n      this.requestedOccupants = requestedOccupants;\n    }\n\n    if (!this.requestedOccupants) {\n      return;\n    }\n\n    // Add any requested, available, and non-pending occupants.\n    for (let i = 0; i < this.requestedOccupants.length; i++) {\n      const occupantId = this.requestedOccupants[i];\n      if (!this.occupants[occupantId] && this.availableOccupants.indexOf(occupantId) !== -1 && !this.pendingOccupants.has(occupantId)) {\n        this.addOccupant(occupantId);\n      }\n    }\n\n    // Remove any unrequested and currently added occupants.\n    for (let j = 0; j < this.availableOccupants.length; j++) {\n      const occupantId = this.availableOccupants[j];\n      if (this.occupants[occupantId] && this.requestedOccupants.indexOf(occupantId) === -1) {\n        this.removeOccupant(occupantId);\n      }\n    }\n\n    // Call the Networked AFrame callbacks for the updated occupants list.\n    this.onOccupantsChanged(this.occupants);\n  }\n\n  async addOccupant(occupantId) {\n    this.pendingOccupants.add(occupantId);\n    \n    const availableOccupantsCount = this.availableOccupants.length;\n    if (availableOccupantsCount > AVAILABLE_OCCUPANTS_THRESHOLD) {\n      await randomDelay(0, MAX_SUBSCRIBE_DELAY);\n    }\n  \n    const subscriber = await this.createSubscriber(occupantId);\n    if (subscriber) {\n      if(!this.pendingOccupants.has(occupantId)) {\n        subscriber.conn.close();\n      } else {\n        this.pendingOccupants.delete(occupantId);\n        this.occupantIds.push(occupantId);\n        this.occupants[occupantId] = subscriber;\n\n        this.setMediaStream(occupantId, subscriber.mediaStream);\n\n        // Call the Networked AFrame callbacks for the new occupant.\n        this.onOccupantConnected(occupantId);\n      }\n    }\n  }\n\n  removeAllOccupants() {\n    this.pendingOccupants.clear();\n    for (let i = this.occupantIds.length - 1; i >= 0; i--) {\n      this.removeOccupant(this.occupantIds[i]);\n    }\n  }\n\n  removeOccupant(occupantId) {\n    this.pendingOccupants.delete(occupantId);\n    \n    if (this.occupants[occupantId]) {\n      // Close the subscriber peer connection. Which also detaches the plugin handle.\n      this.occupants[occupantId].conn.close();\n      delete this.occupants[occupantId];\n      \n      this.occupantIds.splice(this.occupantIds.indexOf(occupantId), 1);\n    }\n\n    if (this.mediaStreams[occupantId]) {\n      delete this.mediaStreams[occupantId];\n    }\n\n    if (this.pendingMediaRequests.has(occupantId)) {\n      const msg = \"The user disconnected before the media stream was resolved.\";\n      this.pendingMediaRequests.get(occupantId).audio.reject(msg);\n      this.pendingMediaRequests.get(occupantId).video.reject(msg);\n      this.pendingMediaRequests.delete(occupantId);\n    }\n\n    // Call the Networked AFrame callbacks for the removed occupant.\n    this.onOccupantDisconnected(occupantId);\n  }\n\n  associate(conn, handle) {\n    conn.addEventListener(\"icecandidate\", ev => {\n      handle.sendTrickle(ev.candidate || null).catch(e => error(\"Error trickling ICE: %o\", e));\n    });\n    conn.addEventListener(\"iceconnectionstatechange\", ev => {\n      if (conn.iceConnectionState === \"connected\") {\n        console.log(\"ICE state changed to connected\");\n      }\n      if (conn.iceConnectionState === \"disconnected\") {\n        console.warn(\"ICE state changed to disconnected\");\n      }\n      if (conn.iceConnectionState === \"failed\") {\n        console.warn(\"ICE failure detected. Reconnecting in 10s.\");\n        this.performDelayedReconnect();\n      }\n    })\n\n    // we have to debounce these because janus gets angry if you send it a new SDP before\n    // it's finished processing an existing SDP. in actuality, it seems like this is maybe\n    // too liberal and we need to wait some amount of time after an offer before sending another,\n    // but we don't currently know any good way of detecting exactly how long :(\n    conn.addEventListener(\n      \"negotiationneeded\",\n      debounce(ev => {\n        debug(\"Sending new offer for handle: %o\", handle);\n        var offer = conn.createOffer().then(this.configurePublisherSdp).then(this.fixSafariIceUFrag);\n        var local = offer.then(o => conn.setLocalDescription(o));\n        var remote = offer;\n\n        remote = remote\n          .then(this.fixSafariIceUFrag)\n          .then(j => handle.sendJsep(j))\n          .then(r => conn.setRemoteDescription(r.jsep));\n        return Promise.all([local, remote]).catch(e => error(\"Error negotiating offer: %o\", e));\n      })\n    );\n    handle.on(\n      \"event\",\n      debounce(ev => {\n        var jsep = ev.jsep;\n        if (jsep && jsep.type == \"offer\") {\n          debug(\"Accepting new offer for handle: %o\", handle);\n          var answer = conn\n            .setRemoteDescription(this.configureSubscriberSdp(jsep))\n            .then(_ => conn.createAnswer())\n            .then(this.fixSafariIceUFrag);\n          var local = answer.then(a => conn.setLocalDescription(a));\n          var remote = answer.then(j => handle.sendJsep(j));\n          return Promise.all([local, remote]).catch(e => error(\"Error negotiating answer: %o\", e));\n        } else {\n          // some other kind of event, nothing to do\n          return null;\n        }\n      })\n    );\n  }\n\n  async createPublisher() {\n    var handle = new mj.JanusPluginHandle(this.session);\n    var conn = new RTCPeerConnection(this.peerConnectionConfig || DEFAULT_PEER_CONNECTION_CONFIG);\n\n    debug(\"pub waiting for sfu\");\n    await handle.attach(\"janus.plugin.sfu\", this.loops && this.clientId ? parseInt(this.clientId) % this.loops : undefined);\n\n    this.associate(conn, handle);\n\n    debug(\"pub waiting for data channels & webrtcup\");\n    var webrtcup = new Promise(resolve => handle.on(\"webrtcup\", resolve));\n\n    // Unreliable datachannel: sending and receiving component updates.\n    // Reliable datachannel: sending and recieving entity instantiations.\n    var reliableChannel = conn.createDataChannel(\"reliable\", { ordered: true });\n    var unreliableChannel = conn.createDataChannel(\"unreliable\", {\n      ordered: false,\n      maxRetransmits: 0\n    });\n\n    reliableChannel.addEventListener(\"message\", e => this.onDataChannelMessage(e, \"janus-reliable\"));\n    unreliableChannel.addEventListener(\"message\", e => this.onDataChannelMessage(e, \"janus-unreliable\"));\n\n    await webrtcup;\n    await untilDataChannelOpen(reliableChannel);\n    await untilDataChannelOpen(unreliableChannel);\n\n    // doing this here is sort of a hack around chrome renegotiation weirdness --\n    // if we do it prior to webrtcup, chrome on gear VR will sometimes put a\n    // renegotiation offer in flight while the first offer was still being\n    // processed by janus. we should find some more principled way to figure out\n    // when janus is done in the future.\n    if (this.localMediaStream) {\n      this.localMediaStream.getTracks().forEach(track => {\n        conn.addTrack(track, this.localMediaStream);\n      });\n    }\n\n    // Handle all of the join and leave events.\n    handle.on(\"event\", ev => {\n      var data = ev.plugindata.data;\n      if (data.event == \"join\" && data.room_id == this.room) {\n        if (this.delayedReconnectTimeout) {\n          // Don't create a new RTCPeerConnection, all RTCPeerConnection will be closed in less than 10s.\n          return;\n        }\n        this.addAvailableOccupant(data.user_id);\n        this.syncOccupants();\n      } else if (data.event == \"leave\" && data.room_id == this.room) {\n        this.removeAvailableOccupant(data.user_id);\n        this.removeOccupant(data.user_id);\n      } else if (data.event == \"blocked\") {\n        document.body.dispatchEvent(new CustomEvent(\"blocked\", { detail: { clientId: data.by } }));\n      } else if (data.event == \"unblocked\") {\n        document.body.dispatchEvent(new CustomEvent(\"unblocked\", { detail: { clientId: data.by } }));\n      } else if (data.event === \"data\") {\n        this.onData(JSON.parse(data.body), \"janus-event\");\n      }\n    });\n\n    debug(\"pub waiting for join\");\n\n    // Send join message to janus. Listen for join/leave messages. Automatically subscribe to all users' WebRTC data.\n    var message = await this.sendJoin(handle, {\n      notifications: true,\n      data: true\n    });\n\n    if (!message.plugindata.data.success) {\n      const err = message.plugindata.data.error;\n      console.error(err);\n      // We may get here because of an expired JWT.\n      // Close the connection ourself otherwise janus will close it after\n      // session_timeout because we didn't send any keepalive and this will\n      // trigger a delayed reconnect because of the iceconnectionstatechange\n      // listener for failure state.\n      // Even if the app code calls disconnect in case of error, disconnect\n      // won't close the peer connection because this.publisher is not set.\n      conn.close();\n      throw err;\n    }\n\n    var initialOccupants = message.plugindata.data.response.users[this.room] || [];\n\n    if (initialOccupants.includes(this.clientId)) {\n      console.warn(\"Janus still has previous session for this client. Reconnecting in 10s.\");\n      this.performDelayedReconnect();\n    }\n\n    debug(\"publisher ready\");\n    return {\n      handle,\n      initialOccupants,\n      reliableChannel,\n      unreliableChannel,\n      conn\n    };\n  }\n\n  configurePublisherSdp(jsep) {\n    jsep.sdp = jsep.sdp.replace(/a=fmtp:(109|111).*\\r\\n/g, (line, pt) => {\n      const parameters = Object.assign(sdpUtils.parseFmtp(line), OPUS_PARAMETERS);\n      return sdpUtils.writeFmtp({ payloadType: pt, parameters: parameters });\n    });\n    return jsep;\n  }\n\n  configureSubscriberSdp(jsep) {\n    // todo: consider cleaning up these hacks to use sdputils\n    if (!isH264VideoSupported) {\n      if (navigator.userAgent.indexOf(\"HeadlessChrome\") !== -1) {\n        // HeadlessChrome (e.g. puppeteer) doesn't support webrtc video streams, so we remove those lines from the SDP.\n        jsep.sdp = jsep.sdp.replace(/m=video[^]*m=/, \"m=\");\n      }\n    }\n\n    // TODO: Hack to get video working on Chrome for Android. https://groups.google.com/forum/#!topic/mozilla.dev.media/Ye29vuMTpo8\n    if (navigator.userAgent.indexOf(\"Android\") === -1) {\n      jsep.sdp = jsep.sdp.replace(\n        \"a=rtcp-fb:107 goog-remb\\r\\n\",\n        \"a=rtcp-fb:107 goog-remb\\r\\na=rtcp-fb:107 transport-cc\\r\\na=fmtp:107 level-asymmetry-allowed=1;packetization-mode=1;profile-level-id=42e01f\\r\\n\"\n      );\n    } else {\n      jsep.sdp = jsep.sdp.replace(\n        \"a=rtcp-fb:107 goog-remb\\r\\n\",\n        \"a=rtcp-fb:107 goog-remb\\r\\na=rtcp-fb:107 transport-cc\\r\\na=fmtp:107 level-asymmetry-allowed=1;packetization-mode=1;profile-level-id=42001f\\r\\n\"\n      );\n    }\n    return jsep;\n  }\n\n  async fixSafariIceUFrag(jsep) {\n    // Safari produces a \\n instead of an \\r\\n for the ice-ufrag. See https://github.com/meetecho/janus-gateway/issues/1818\n    jsep.sdp = jsep.sdp.replace(/[^\\r]\\na=ice-ufrag/g, \"\\r\\na=ice-ufrag\");\n    return jsep\n  }\n\n  async createSubscriber(occupantId, maxRetries = 5) {\n    if (this.availableOccupants.indexOf(occupantId) === -1) {\n      console.warn(occupantId + \": cancelled occupant connection, occupant left before subscription negotation.\");\n      return null;\n    }\n\n    var handle = new mj.JanusPluginHandle(this.session);\n    var conn = new RTCPeerConnection(this.peerConnectionConfig || DEFAULT_PEER_CONNECTION_CONFIG);\n\n    debug(occupantId + \": sub waiting for sfu\");\n    await handle.attach(\"janus.plugin.sfu\", this.loops ? parseInt(occupantId) % this.loops : undefined);\n\n    this.associate(conn, handle);\n\n    debug(occupantId + \": sub waiting for join\");\n\n    if (this.availableOccupants.indexOf(occupantId) === -1) {\n      conn.close();\n      console.warn(occupantId + \": cancelled occupant connection, occupant left after attach\");\n      return null;\n    }\n\n    let webrtcFailed = false;\n\n    const webrtcup = new Promise(resolve => {\n      const leftInterval = setInterval(() => {\n        if (this.availableOccupants.indexOf(occupantId) === -1) {\n          clearInterval(leftInterval);\n          resolve();\n        }\n      }, 1000);\n\n      const timeout = setTimeout(() => {\n        clearInterval(leftInterval);\n        webrtcFailed = true;\n        resolve();\n      }, SUBSCRIBE_TIMEOUT_MS);\n\n      handle.on(\"webrtcup\", () => {\n        clearTimeout(timeout);\n        clearInterval(leftInterval);\n        resolve();\n      });\n    });\n\n    // Send join message to janus. Don't listen for join/leave messages. Subscribe to the occupant's media.\n    // Janus should send us an offer for this occupant's media in response to this.\n    await this.sendJoin(handle, { media: occupantId });\n\n    if (this.availableOccupants.indexOf(occupantId) === -1) {\n      conn.close();\n      console.warn(occupantId + \": cancelled occupant connection, occupant left after join\");\n      return null;\n    }\n\n    debug(occupantId + \": sub waiting for webrtcup\");\n    await webrtcup;\n\n    if (this.availableOccupants.indexOf(occupantId) === -1) {\n      conn.close();\n      console.warn(occupantId + \": cancel occupant connection, occupant left during or after webrtcup\");\n      return null;\n    }\n\n    if (webrtcFailed) {\n      conn.close();\n      if (maxRetries > 0) {\n        console.warn(occupantId + \": webrtc up timed out, retrying\");\n        return this.createSubscriber(occupantId, maxRetries - 1);\n      } else {\n        console.warn(occupantId + \": webrtc up timed out\");\n        return null;\n      }\n    }\n\n    if (isSafari && !this._iOSHackDelayedInitialPeer) {\n      // HACK: the first peer on Safari during page load can fail to work if we don't\n      // wait some time before continuing here. See: https://github.com/mozilla/hubs/pull/1692\n      await (new Promise((resolve) => setTimeout(resolve, 3000)));\n      this._iOSHackDelayedInitialPeer = true;\n    }\n\n    var mediaStream = new MediaStream();\n    var receivers = conn.getReceivers();\n    receivers.forEach(receiver => {\n      if (receiver.track) {\n        mediaStream.addTrack(receiver.track);\n      }\n    });\n    if (mediaStream.getTracks().length === 0) {\n      mediaStream = null;\n    }\n\n    debug(occupantId + \": subscriber ready\");\n    return {\n      handle,\n      mediaStream,\n      conn\n    };\n  }\n\n  sendJoin(handle, subscribe) {\n    return handle.sendMessage({\n      kind: \"join\",\n      room_id: this.room,\n      user_id: this.clientId,\n      subscribe,\n      token: this.joinToken\n    });\n  }\n\n  toggleFreeze() {\n    if (this.frozen) {\n      this.unfreeze();\n    } else {\n      this.freeze();\n    }\n  }\n\n  freeze() {\n    this.frozen = true;\n  }\n\n  unfreeze() {\n    this.frozen = false;\n    this.flushPendingUpdates();\n  }\n\n  dataForUpdateMultiMessage(networkId, message) {\n    // \"d\" is an array of entity datas, where each item in the array represents a unique entity and contains\n    // metadata for the entity, and an array of components that have been updated on the entity.\n    // This method finds the data corresponding to the given networkId.\n    for (let i = 0, l = message.data.d.length; i < l; i++) {\n      const data = message.data.d[i];\n\n      if (data.networkId === networkId) {\n        return data;\n      }\n    }\n\n    return null;\n  }\n\n  getPendingData(networkId, message) {\n    if (!message) return null;\n\n    let data = message.dataType === \"um\" ? this.dataForUpdateMultiMessage(networkId, message) : message.data;\n\n    // Ignore messages relating to users who have disconnected since freezing, their entities\n    // will have aleady been removed by NAF.\n    // Note that delete messages have no \"owner\" so we have to check for that as well.\n    if (data.owner && !this.occupants[data.owner]) return null;\n\n    // Ignore messages from users that we may have blocked while frozen.\n    if (data.owner && this.blockedClients.has(data.owner)) return null;\n\n    return data\n  }\n\n  // Used externally\n  getPendingDataForNetworkId(networkId) {\n    return this.getPendingData(networkId, this.frozenUpdates.get(networkId));\n  }\n\n  flushPendingUpdates() {\n    for (const [networkId, message] of this.frozenUpdates) {\n      let data = this.getPendingData(networkId, message);\n      if (!data) continue;\n\n      // Override the data type on \"um\" messages types, since we extract entity updates from \"um\" messages into\n      // individual frozenUpdates in storeSingleMessage.\n      const dataType = message.dataType === \"um\" ? \"u\" : message.dataType;\n\n      this.onOccupantMessage(null, dataType, data, message.source);\n    }\n    this.frozenUpdates.clear();\n  }\n\n  storeMessage(message) {\n    if (message.dataType === \"um\") { // UpdateMulti\n      for (let i = 0, l = message.data.d.length; i < l; i++) {\n        this.storeSingleMessage(message, i);\n      }\n    } else {\n      this.storeSingleMessage(message);\n    }\n  }\n\n  storeSingleMessage(message, index) {\n    const data = index !== undefined ? message.data.d[index] : message.data;\n    const dataType = message.dataType;\n    const source = message.source;\n\n    const networkId = data.networkId;\n\n    if (!this.frozenUpdates.has(networkId)) {\n      this.frozenUpdates.set(networkId, message);\n    } else {\n      const storedMessage = this.frozenUpdates.get(networkId);\n      const storedData = storedMessage.dataType === \"um\" ? this.dataForUpdateMultiMessage(networkId, storedMessage) : storedMessage.data;\n\n      // Avoid updating components if the entity data received did not come from the current owner.\n      const isOutdatedMessage = data.lastOwnerTime < storedData.lastOwnerTime;\n      const isContemporaneousMessage = data.lastOwnerTime === storedData.lastOwnerTime;\n      if (isOutdatedMessage || (isContemporaneousMessage && storedData.owner > data.owner)) {\n        return;\n      }\n\n      if (dataType === \"r\") {\n        const createdWhileFrozen = storedData && storedData.isFirstSync;\n        if (createdWhileFrozen) {\n          // If the entity was created and deleted while frozen, don't bother conveying anything to the consumer.\n          this.frozenUpdates.delete(networkId);\n        } else {\n          // Delete messages override any other messages for this entity\n          this.frozenUpdates.set(networkId, message);\n        }\n      } else {\n        // merge in component updates\n        if (storedData.components && data.components) {\n          Object.assign(storedData.components, data.components);\n        }\n      }\n    }\n  }\n\n  onDataChannelMessage(e, source) {\n    this.onData(JSON.parse(e.data), source);\n  }\n\n  onData(message, source) {\n    if (debug.enabled) {\n      debug(`DC in: ${message}`);\n    }\n\n    if (!message.dataType) return;\n\n    message.source = source;\n\n    if (this.frozen) {\n      this.storeMessage(message);\n    } else {\n      this.onOccupantMessage(null, message.dataType, message.data, message.source);\n    }\n  }\n\n  shouldStartConnectionTo(client) {\n    return true;\n  }\n\n  startStreamConnection(client) {}\n\n  closeStreamConnection(client) {}\n\n  getConnectStatus(clientId) {\n    return this.occupants[clientId] ? NAF.adapters.IS_CONNECTED : NAF.adapters.NOT_CONNECTED;\n  }\n\n  async updateTimeOffset() {\n    if (this.isDisconnected()) return;\n\n    const clientSentTime = Date.now();\n\n    const res = await fetch(document.location.href, {\n      method: \"HEAD\",\n      cache: \"no-cache\"\n    });\n\n    const precision = 1000;\n    const serverReceivedTime = new Date(res.headers.get(\"Date\")).getTime() + precision / 2;\n    const clientReceivedTime = Date.now();\n    const serverTime = serverReceivedTime + (clientReceivedTime - clientSentTime) / 2;\n    const timeOffset = serverTime - clientReceivedTime;\n\n    this.serverTimeRequests++;\n\n    if (this.serverTimeRequests <= 10) {\n      this.timeOffsets.push(timeOffset);\n    } else {\n      this.timeOffsets[this.serverTimeRequests % 10] = timeOffset;\n    }\n\n    this.avgTimeOffset = this.timeOffsets.reduce((acc, offset) => (acc += offset), 0) / this.timeOffsets.length;\n\n    if (this.serverTimeRequests > 10) {\n      debug(`new server time offset: ${this.avgTimeOffset}ms`);\n      setTimeout(() => this.updateTimeOffset(), 5 * 60 * 1000); // Sync clock every 5 minutes.\n    } else {\n      this.updateTimeOffset();\n    }\n  }\n\n  getServerTime() {\n    return Date.now() + this.avgTimeOffset;\n  }\n\n  getMediaStream(clientId, type = \"audio\") {\n    if (this.mediaStreams[clientId]) {\n      debug(`Already had ${type} for ${clientId}`);\n      return Promise.resolve(this.mediaStreams[clientId][type]);\n    } else {\n      debug(`Waiting on ${type} for ${clientId}`);\n      if (!this.pendingMediaRequests.has(clientId)) {\n        this.pendingMediaRequests.set(clientId, {});\n\n        const audioPromise = new Promise((resolve, reject) => {\n          this.pendingMediaRequests.get(clientId).audio = { resolve, reject };\n        });\n        const videoPromise = new Promise((resolve, reject) => {\n          this.pendingMediaRequests.get(clientId).video = { resolve, reject };\n        });\n\n        this.pendingMediaRequests.get(clientId).audio.promise = audioPromise;\n        this.pendingMediaRequests.get(clientId).video.promise = videoPromise;\n\n        audioPromise.catch(e => console.warn(`${clientId} getMediaStream Audio Error`, e));\n        videoPromise.catch(e => console.warn(`${clientId} getMediaStream Video Error`, e));\n      }\n      return this.pendingMediaRequests.get(clientId)[type].promise;\n    }\n  }\n\n  setMediaStream(clientId, stream) {\n    // Safari doesn't like it when you use single a mixed media stream where one of the tracks is inactive, so we\n    // split the tracks into two streams.\n    const audioStream = new MediaStream();\n    try {\n    stream.getAudioTracks().forEach(track => audioStream.addTrack(track));\n\n    } catch(e) {\n      console.warn(`${clientId} setMediaStream Audio Error`, e);\n    }\n    const videoStream = new MediaStream();\n    try {\n    stream.getVideoTracks().forEach(track => videoStream.addTrack(track));\n\n    } catch (e) {\n      console.warn(`${clientId} setMediaStream Video Error`, e);\n    }\n\n    this.mediaStreams[clientId] = { audio: audioStream, video: videoStream };\n\n    // Resolve the promise for the user's media stream if it exists.\n    if (this.pendingMediaRequests.has(clientId)) {\n      this.pendingMediaRequests.get(clientId).audio.resolve(audioStream);\n      this.pendingMediaRequests.get(clientId).video.resolve(videoStream);\n    }\n  }\n\n  async setLocalMediaStream(stream) {\n    // our job here is to make sure the connection winds up with RTP senders sending the stuff in this stream,\n    // and not the stuff that isn't in this stream. strategy is to replace existing tracks if we can, add tracks\n    // that we can't replace, and disable tracks that don't exist anymore.\n\n    // note that we don't ever remove a track from the stream -- since Janus doesn't support Unified Plan, we absolutely\n    // can't wind up with a SDP that has >1 audio or >1 video tracks, even if one of them is inactive (what you get if\n    // you remove a track from an existing stream.)\n    if (this.publisher && this.publisher.conn) {\n      const existingSenders = this.publisher.conn.getSenders();\n      const newSenders = [];\n      const tracks = stream.getTracks();\n\n      for (let i = 0; i < tracks.length; i++) {\n        const t = tracks[i];\n        const sender = existingSenders.find(s => s.track != null && s.track.kind == t.kind);\n\n        if (sender != null) {\n          if (sender.replaceTrack) {\n            await sender.replaceTrack(t);\n\n            // Workaround https://bugzilla.mozilla.org/show_bug.cgi?id=1576771\n            if (t.kind === \"video\" && t.enabled && navigator.userAgent.toLowerCase().indexOf('firefox') > -1) {\n              t.enabled = false;\n              setTimeout(() => t.enabled = true, 1000);\n            }\n          } else {\n            // Fallback for browsers that don't support replaceTrack. At this time of this writing\n            // most browsers support it, and testing this code path seems to not work properly\n            // in Chrome anymore.\n            stream.removeTrack(sender.track);\n            stream.addTrack(t);\n          }\n          newSenders.push(sender);\n        } else {\n          newSenders.push(this.publisher.conn.addTrack(t, stream));\n        }\n      }\n      existingSenders.forEach(s => {\n        if (!newSenders.includes(s)) {\n          s.track.enabled = false;\n        }\n      });\n    }\n    this.localMediaStream = stream;\n    this.setMediaStream(this.clientId, stream);\n  }\n\n  enableMicrophone(enabled) {\n    if (this.publisher && this.publisher.conn) {\n      this.publisher.conn.getSenders().forEach(s => {\n        if (s.track.kind == \"audio\") {\n          s.track.enabled = enabled;\n        }\n      });\n    }\n  }\n\n  sendData(clientId, dataType, data) {\n    if (!this.publisher) {\n      console.warn(\"sendData called without a publisher\");\n    } else {\n      switch (this.unreliableTransport) {\n        case \"websocket\":\n          this.publisher.handle.sendMessage({ kind: \"data\", body: JSON.stringify({ dataType, data }), whom: clientId });\n          break;\n        case \"datachannel\":\n          this.publisher.unreliableChannel.send(JSON.stringify({ clientId, dataType, data }));\n          break;\n        default:\n          this.unreliableTransport(clientId, dataType, data);\n          break;\n      }\n    }\n  }\n\n  sendDataGuaranteed(clientId, dataType, data) {\n    if (!this.publisher) {\n      console.warn(\"sendDataGuaranteed called without a publisher\");\n    } else {\n      switch (this.reliableTransport) {\n        case \"websocket\":\n          this.publisher.handle.sendMessage({ kind: \"data\", body: JSON.stringify({ dataType, data }), whom: clientId });\n          break;\n        case \"datachannel\":\n          this.publisher.reliableChannel.send(JSON.stringify({ clientId, dataType, data }));\n          break;\n        default:\n          this.reliableTransport(clientId, dataType, data);\n          break;\n      }\n    }\n  }\n\n  broadcastData(dataType, data) {\n    if (!this.publisher) {\n      console.warn(\"broadcastData called without a publisher\");\n    } else {\n      switch (this.unreliableTransport) {\n        case \"websocket\":\n          this.publisher.handle.sendMessage({ kind: \"data\", body: JSON.stringify({ dataType, data }) });\n          break;\n        case \"datachannel\":\n          this.publisher.unreliableChannel.send(JSON.stringify({ dataType, data }));\n          break;\n        default:\n          this.unreliableTransport(undefined, dataType, data);\n          break;\n      }\n    }\n  }\n\n  broadcastDataGuaranteed(dataType, data) {\n    if (!this.publisher) {\n      console.warn(\"broadcastDataGuaranteed called without a publisher\");\n    } else {\n      switch (this.reliableTransport) {\n        case \"websocket\":\n          this.publisher.handle.sendMessage({ kind: \"data\", body: JSON.stringify({ dataType, data }) });\n          break;\n        case \"datachannel\":\n          this.publisher.reliableChannel.send(JSON.stringify({ dataType, data }));\n          break;\n        default:\n          this.reliableTransport(undefined, dataType, data);\n          break;\n      }\n    }\n  }\n\n  kick(clientId, permsToken) {\n    return this.publisher.handle.sendMessage({ kind: \"kick\", room_id: this.room, user_id: clientId, token: permsToken }).then(() => {\n      document.body.dispatchEvent(new CustomEvent(\"kicked\", { detail: { clientId: clientId } }));\n    });\n  }\n\n  block(clientId) {\n    return this.publisher.handle.sendMessage({ kind: \"block\", whom: clientId }).then(() => {\n      this.blockedClients.set(clientId, true);\n      document.body.dispatchEvent(new CustomEvent(\"blocked\", { detail: { clientId: clientId } }));\n    });\n  }\n\n  unblock(clientId) {\n    return this.publisher.handle.sendMessage({ kind: \"unblock\", whom: clientId }).then(() => {\n      this.blockedClients.delete(clientId);\n      document.body.dispatchEvent(new CustomEvent(\"unblocked\", { detail: { clientId: clientId } }));\n    });\n  }\n}\n\nNAF.adapters.register(\"janus\", JanusAdapter);\n\nmodule.exports = JanusAdapter;\n","/* eslint-env browser */\n\n/**\n * This is the web browser implementation of `debug()`.\n */\n\nexports.formatArgs = formatArgs;\nexports.save = save;\nexports.load = load;\nexports.useColors = useColors;\nexports.storage = localstorage();\nexports.destroy = (() => {\n\tlet warned = false;\n\n\treturn () => {\n\t\tif (!warned) {\n\t\t\twarned = true;\n\t\t\tconsole.warn('Instance method `debug.destroy()` is deprecated and no longer does anything. It will be removed in the next major version of `debug`.');\n\t\t}\n\t};\n})();\n\n/**\n * Colors.\n */\n\nexports.colors = [\n\t'#0000CC',\n\t'#0000FF',\n\t'#0033CC',\n\t'#0033FF',\n\t'#0066CC',\n\t'#0066FF',\n\t'#0099CC',\n\t'#0099FF',\n\t'#00CC00',\n\t'#00CC33',\n\t'#00CC66',\n\t'#00CC99',\n\t'#00CCCC',\n\t'#00CCFF',\n\t'#3300CC',\n\t'#3300FF',\n\t'#3333CC',\n\t'#3333FF',\n\t'#3366CC',\n\t'#3366FF',\n\t'#3399CC',\n\t'#3399FF',\n\t'#33CC00',\n\t'#33CC33',\n\t'#33CC66',\n\t'#33CC99',\n\t'#33CCCC',\n\t'#33CCFF',\n\t'#6600CC',\n\t'#6600FF',\n\t'#6633CC',\n\t'#6633FF',\n\t'#66CC00',\n\t'#66CC33',\n\t'#9900CC',\n\t'#9900FF',\n\t'#9933CC',\n\t'#9933FF',\n\t'#99CC00',\n\t'#99CC33',\n\t'#CC0000',\n\t'#CC0033',\n\t'#CC0066',\n\t'#CC0099',\n\t'#CC00CC',\n\t'#CC00FF',\n\t'#CC3300',\n\t'#CC3333',\n\t'#CC3366',\n\t'#CC3399',\n\t'#CC33CC',\n\t'#CC33FF',\n\t'#CC6600',\n\t'#CC6633',\n\t'#CC9900',\n\t'#CC9933',\n\t'#CCCC00',\n\t'#CCCC33',\n\t'#FF0000',\n\t'#FF0033',\n\t'#FF0066',\n\t'#FF0099',\n\t'#FF00CC',\n\t'#FF00FF',\n\t'#FF3300',\n\t'#FF3333',\n\t'#FF3366',\n\t'#FF3399',\n\t'#FF33CC',\n\t'#FF33FF',\n\t'#FF6600',\n\t'#FF6633',\n\t'#FF9900',\n\t'#FF9933',\n\t'#FFCC00',\n\t'#FFCC33'\n];\n\n/**\n * Currently only WebKit-based Web Inspectors, Firefox >= v31,\n * and the Firebug extension (any Firefox version) are known\n * to support \"%c\" CSS customizations.\n *\n * TODO: add a `localStorage` variable to explicitly enable/disable colors\n */\n\n// eslint-disable-next-line complexity\nfunction useColors() {\n\t// NB: In an Electron preload script, document will be defined but not fully\n\t// initialized. Since we know we're in Chrome, we'll just detect this case\n\t// explicitly\n\tif (typeof window !== 'undefined' && window.process && (window.process.type === 'renderer' || window.process.__nwjs)) {\n\t\treturn true;\n\t}\n\n\t// Internet Explorer and Edge do not support colors.\n\tif (typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/(edge|trident)\\/(\\d+)/)) {\n\t\treturn false;\n\t}\n\n\t// Is webkit? http://stackoverflow.com/a/16459606/376773\n\t// document is undefined in react-native: https://github.com/facebook/react-native/pull/1632\n\treturn (typeof document !== 'undefined' && document.documentElement && document.documentElement.style && document.documentElement.style.WebkitAppearance) ||\n\t\t// Is firebug? http://stackoverflow.com/a/398120/376773\n\t\t(typeof window !== 'undefined' && window.console && (window.console.firebug || (window.console.exception && window.console.table))) ||\n\t\t// Is firefox >= v31?\n\t\t// https://developer.mozilla.org/en-US/docs/Tools/Web_Console#Styling_messages\n\t\t(typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/firefox\\/(\\d+)/) && parseInt(RegExp.$1, 10) >= 31) ||\n\t\t// Double check webkit in userAgent just in case we are in a worker\n\t\t(typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/applewebkit\\/(\\d+)/));\n}\n\n/**\n * Colorize log arguments if enabled.\n *\n * @api public\n */\n\nfunction formatArgs(args) {\n\targs[0] = (this.useColors ? '%c' : '') +\n\t\tthis.namespace +\n\t\t(this.useColors ? ' %c' : ' ') +\n\t\targs[0] +\n\t\t(this.useColors ? '%c ' : ' ') +\n\t\t'+' + module.exports.humanize(this.diff);\n\n\tif (!this.useColors) {\n\t\treturn;\n\t}\n\n\tconst c = 'color: ' + this.color;\n\targs.splice(1, 0, c, 'color: inherit');\n\n\t// The final \"%c\" is somewhat tricky, because there could be other\n\t// arguments passed either before or after the %c, so we need to\n\t// figure out the correct index to insert the CSS into\n\tlet index = 0;\n\tlet lastC = 0;\n\targs[0].replace(/%[a-zA-Z%]/g, match => {\n\t\tif (match === '%%') {\n\t\t\treturn;\n\t\t}\n\t\tindex++;\n\t\tif (match === '%c') {\n\t\t\t// We only are interested in the *last* %c\n\t\t\t// (the user may have provided their own)\n\t\t\tlastC = index;\n\t\t}\n\t});\n\n\targs.splice(lastC, 0, c);\n}\n\n/**\n * Invokes `console.debug()` when available.\n * No-op when `console.debug` is not a \"function\".\n * If `console.debug` is not available, falls back\n * to `console.log`.\n *\n * @api public\n */\nexports.log = console.debug || console.log || (() => {});\n\n/**\n * Save `namespaces`.\n *\n * @param {String} namespaces\n * @api private\n */\nfunction save(namespaces) {\n\ttry {\n\t\tif (namespaces) {\n\t\t\texports.storage.setItem('debug', namespaces);\n\t\t} else {\n\t\t\texports.storage.removeItem('debug');\n\t\t}\n\t} catch (error) {\n\t\t// Swallow\n\t\t// XXX (@Qix-) should we be logging these?\n\t}\n}\n\n/**\n * Load `namespaces`.\n *\n * @return {String} returns the previously persisted debug modes\n * @api private\n */\nfunction load() {\n\tlet r;\n\ttry {\n\t\tr = exports.storage.getItem('debug');\n\t} catch (error) {\n\t\t// Swallow\n\t\t// XXX (@Qix-) should we be logging these?\n\t}\n\n\t// If debug isn't set in LS, and we're in Electron, try to load $DEBUG\n\tif (!r && typeof process !== 'undefined' && 'env' in process) {\n\t\tr = process.env.DEBUG;\n\t}\n\n\treturn r;\n}\n\n/**\n * Localstorage attempts to return the localstorage.\n *\n * This is necessary because safari throws\n * when a user disables cookies/localstorage\n * and you attempt to access it.\n *\n * @return {LocalStorage}\n * @api private\n */\n\nfunction localstorage() {\n\ttry {\n\t\t// TVMLKit (Apple TV JS Runtime) does not have a window object, just localStorage in the global context\n\t\t// The Browser also has localStorage in the global context.\n\t\treturn localStorage;\n\t} catch (error) {\n\t\t// Swallow\n\t\t// XXX (@Qix-) should we be logging these?\n\t}\n}\n\nmodule.exports = require('./common')(exports);\n\nconst {formatters} = module.exports;\n\n/**\n * Map %j to `JSON.stringify()`, since no Web Inspectors do that by default.\n */\n\nformatters.j = function (v) {\n\ttry {\n\t\treturn JSON.stringify(v);\n\t} catch (error) {\n\t\treturn '[UnexpectedJSONParseError]: ' + error.message;\n\t}\n};\n","\n/**\n * This is the common logic for both the Node.js and web browser\n * implementations of `debug()`.\n */\n\nfunction setup(env) {\n\tcreateDebug.debug = createDebug;\n\tcreateDebug.default = createDebug;\n\tcreateDebug.coerce = coerce;\n\tcreateDebug.disable = disable;\n\tcreateDebug.enable = enable;\n\tcreateDebug.enabled = enabled;\n\tcreateDebug.humanize = require('ms');\n\tcreateDebug.destroy = destroy;\n\n\tObject.keys(env).forEach(key => {\n\t\tcreateDebug[key] = env[key];\n\t});\n\n\t/**\n\t* The currently active debug mode names, and names to skip.\n\t*/\n\n\tcreateDebug.names = [];\n\tcreateDebug.skips = [];\n\n\t/**\n\t* Map of special \"%n\" handling functions, for the debug \"format\" argument.\n\t*\n\t* Valid key names are a single, lower or upper-case letter, i.e. \"n\" and \"N\".\n\t*/\n\tcreateDebug.formatters = {};\n\n\t/**\n\t* Selects a color for a debug namespace\n\t* @param {String} namespace The namespace string for the debug instance to be colored\n\t* @return {Number|String} An ANSI color code for the given namespace\n\t* @api private\n\t*/\n\tfunction selectColor(namespace) {\n\t\tlet hash = 0;\n\n\t\tfor (let i = 0; i < namespace.length; i++) {\n\t\t\thash = ((hash << 5) - hash) + namespace.charCodeAt(i);\n\t\t\thash |= 0; // Convert to 32bit integer\n\t\t}\n\n\t\treturn createDebug.colors[Math.abs(hash) % createDebug.colors.length];\n\t}\n\tcreateDebug.selectColor = selectColor;\n\n\t/**\n\t* Create a debugger with the given `namespace`.\n\t*\n\t* @param {String} namespace\n\t* @return {Function}\n\t* @api public\n\t*/\n\tfunction createDebug(namespace) {\n\t\tlet prevTime;\n\t\tlet enableOverride = null;\n\t\tlet namespacesCache;\n\t\tlet enabledCache;\n\n\t\tfunction debug(...args) {\n\t\t\t// Disabled?\n\t\t\tif (!debug.enabled) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst self = debug;\n\n\t\t\t// Set `diff` timestamp\n\t\t\tconst curr = Number(new Date());\n\t\t\tconst ms = curr - (prevTime || curr);\n\t\t\tself.diff = ms;\n\t\t\tself.prev = prevTime;\n\t\t\tself.curr = curr;\n\t\t\tprevTime = curr;\n\n\t\t\targs[0] = createDebug.coerce(args[0]);\n\n\t\t\tif (typeof args[0] !== 'string') {\n\t\t\t\t// Anything else let's inspect with %O\n\t\t\t\targs.unshift('%O');\n\t\t\t}\n\n\t\t\t// Apply any `formatters` transformations\n\t\t\tlet index = 0;\n\t\t\targs[0] = args[0].replace(/%([a-zA-Z%])/g, (match, format) => {\n\t\t\t\t// If we encounter an escaped % then don't increase the array index\n\t\t\t\tif (match === '%%') {\n\t\t\t\t\treturn '%';\n\t\t\t\t}\n\t\t\t\tindex++;\n\t\t\t\tconst formatter = createDebug.formatters[format];\n\t\t\t\tif (typeof formatter === 'function') {\n\t\t\t\t\tconst val = args[index];\n\t\t\t\t\tmatch = formatter.call(self, val);\n\n\t\t\t\t\t// Now we need to remove `args[index]` since it's inlined in the `format`\n\t\t\t\t\targs.splice(index, 1);\n\t\t\t\t\tindex--;\n\t\t\t\t}\n\t\t\t\treturn match;\n\t\t\t});\n\n\t\t\t// Apply env-specific formatting (colors, etc.)\n\t\t\tcreateDebug.formatArgs.call(self, args);\n\n\t\t\tconst logFn = self.log || createDebug.log;\n\t\t\tlogFn.apply(self, args);\n\t\t}\n\n\t\tdebug.namespace = namespace;\n\t\tdebug.useColors = createDebug.useColors();\n\t\tdebug.color = createDebug.selectColor(namespace);\n\t\tdebug.extend = extend;\n\t\tdebug.destroy = createDebug.destroy; // XXX Temporary. Will be removed in the next major release.\n\n\t\tObject.defineProperty(debug, 'enabled', {\n\t\t\tenumerable: true,\n\t\t\tconfigurable: false,\n\t\t\tget: () => {\n\t\t\t\tif (enableOverride !== null) {\n\t\t\t\t\treturn enableOverride;\n\t\t\t\t}\n\t\t\t\tif (namespacesCache !== createDebug.namespaces) {\n\t\t\t\t\tnamespacesCache = createDebug.namespaces;\n\t\t\t\t\tenabledCache = createDebug.enabled(namespace);\n\t\t\t\t}\n\n\t\t\t\treturn enabledCache;\n\t\t\t},\n\t\t\tset: v => {\n\t\t\t\tenableOverride = v;\n\t\t\t}\n\t\t});\n\n\t\t// Env-specific initialization logic for debug instances\n\t\tif (typeof createDebug.init === 'function') {\n\t\t\tcreateDebug.init(debug);\n\t\t}\n\n\t\treturn debug;\n\t}\n\n\tfunction extend(namespace, delimiter) {\n\t\tconst newDebug = createDebug(this.namespace + (typeof delimiter === 'undefined' ? ':' : delimiter) + namespace);\n\t\tnewDebug.log = this.log;\n\t\treturn newDebug;\n\t}\n\n\t/**\n\t* Enables a debug mode by namespaces. This can include modes\n\t* separated by a colon and wildcards.\n\t*\n\t* @param {String} namespaces\n\t* @api public\n\t*/\n\tfunction enable(namespaces) {\n\t\tcreateDebug.save(namespaces);\n\t\tcreateDebug.namespaces = namespaces;\n\n\t\tcreateDebug.names = [];\n\t\tcreateDebug.skips = [];\n\n\t\tlet i;\n\t\tconst split = (typeof namespaces === 'string' ? namespaces : '').split(/[\\s,]+/);\n\t\tconst len = split.length;\n\n\t\tfor (i = 0; i < len; i++) {\n\t\t\tif (!split[i]) {\n\t\t\t\t// ignore empty strings\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tnamespaces = split[i].replace(/\\*/g, '.*?');\n\n\t\t\tif (namespaces[0] === '-') {\n\t\t\t\tcreateDebug.skips.push(new RegExp('^' + namespaces.slice(1) + '$'));\n\t\t\t} else {\n\t\t\t\tcreateDebug.names.push(new RegExp('^' + namespaces + '$'));\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t* Disable debug output.\n\t*\n\t* @return {String} namespaces\n\t* @api public\n\t*/\n\tfunction disable() {\n\t\tconst namespaces = [\n\t\t\t...createDebug.names.map(toNamespace),\n\t\t\t...createDebug.skips.map(toNamespace).map(namespace => '-' + namespace)\n\t\t].join(',');\n\t\tcreateDebug.enable('');\n\t\treturn namespaces;\n\t}\n\n\t/**\n\t* Returns true if the given mode name is enabled, false otherwise.\n\t*\n\t* @param {String} name\n\t* @return {Boolean}\n\t* @api public\n\t*/\n\tfunction enabled(name) {\n\t\tif (name[name.length - 1] === '*') {\n\t\t\treturn true;\n\t\t}\n\n\t\tlet i;\n\t\tlet len;\n\n\t\tfor (i = 0, len = createDebug.skips.length; i < len; i++) {\n\t\t\tif (createDebug.skips[i].test(name)) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\n\t\tfor (i = 0, len = createDebug.names.length; i < len; i++) {\n\t\t\tif (createDebug.names[i].test(name)) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\n\t\treturn false;\n\t}\n\n\t/**\n\t* Convert regexp to namespace\n\t*\n\t* @param {RegExp} regxep\n\t* @return {String} namespace\n\t* @api private\n\t*/\n\tfunction toNamespace(regexp) {\n\t\treturn regexp.toString()\n\t\t\t.substring(2, regexp.toString().length - 2)\n\t\t\t.replace(/\\.\\*\\?$/, '*');\n\t}\n\n\t/**\n\t* Coerce `val`.\n\t*\n\t* @param {Mixed} val\n\t* @return {Mixed}\n\t* @api private\n\t*/\n\tfunction coerce(val) {\n\t\tif (val instanceof Error) {\n\t\t\treturn val.stack || val.message;\n\t\t}\n\t\treturn val;\n\t}\n\n\t/**\n\t* XXX DO NOT USE. This is a temporary stub function.\n\t* XXX It WILL be removed in the next major release.\n\t*/\n\tfunction destroy() {\n\t\tconsole.warn('Instance method `debug.destroy()` is deprecated and no longer does anything. It will be removed in the next major version of `debug`.');\n\t}\n\n\tcreateDebug.enable(createDebug.load());\n\n\treturn createDebug;\n}\n\nmodule.exports = setup;\n","/**\n * Helpers.\n */\n\nvar s = 1000;\nvar m = s * 60;\nvar h = m * 60;\nvar d = h * 24;\nvar w = d * 7;\nvar y = d * 365.25;\n\n/**\n * Parse or format the given `val`.\n *\n * Options:\n *\n *  - `long` verbose formatting [false]\n *\n * @param {String|Number} val\n * @param {Object} [options]\n * @throws {Error} throw an error if val is not a non-empty string or a number\n * @return {String|Number}\n * @api public\n */\n\nmodule.exports = function(val, options) {\n  options = options || {};\n  var type = typeof val;\n  if (type === 'string' && val.length > 0) {\n    return parse(val);\n  } else if (type === 'number' && isFinite(val)) {\n    return options.long ? fmtLong(val) : fmtShort(val);\n  }\n  throw new Error(\n    'val is not a non-empty string or a valid number. val=' +\n      JSON.stringify(val)\n  );\n};\n\n/**\n * Parse the given `str` and return milliseconds.\n *\n * @param {String} str\n * @return {Number}\n * @api private\n */\n\nfunction parse(str) {\n  str = String(str);\n  if (str.length > 100) {\n    return;\n  }\n  var match = /^(-?(?:\\d+)?\\.?\\d+) *(milliseconds?|msecs?|ms|seconds?|secs?|s|minutes?|mins?|m|hours?|hrs?|h|days?|d|weeks?|w|years?|yrs?|y)?$/i.exec(\n    str\n  );\n  if (!match) {\n    return;\n  }\n  var n = parseFloat(match[1]);\n  var type = (match[2] || 'ms').toLowerCase();\n  switch (type) {\n    case 'years':\n    case 'year':\n    case 'yrs':\n    case 'yr':\n    case 'y':\n      return n * y;\n    case 'weeks':\n    case 'week':\n    case 'w':\n      return n * w;\n    case 'days':\n    case 'day':\n    case 'd':\n      return n * d;\n    case 'hours':\n    case 'hour':\n    case 'hrs':\n    case 'hr':\n    case 'h':\n      return n * h;\n    case 'minutes':\n    case 'minute':\n    case 'mins':\n    case 'min':\n    case 'm':\n      return n * m;\n    case 'seconds':\n    case 'second':\n    case 'secs':\n    case 'sec':\n    case 's':\n      return n * s;\n    case 'milliseconds':\n    case 'millisecond':\n    case 'msecs':\n    case 'msec':\n    case 'ms':\n      return n;\n    default:\n      return undefined;\n  }\n}\n\n/**\n * Short format for `ms`.\n *\n * @param {Number} ms\n * @return {String}\n * @api private\n */\n\nfunction fmtShort(ms) {\n  var msAbs = Math.abs(ms);\n  if (msAbs >= d) {\n    return Math.round(ms / d) + 'd';\n  }\n  if (msAbs >= h) {\n    return Math.round(ms / h) + 'h';\n  }\n  if (msAbs >= m) {\n    return Math.round(ms / m) + 'm';\n  }\n  if (msAbs >= s) {\n    return Math.round(ms / s) + 's';\n  }\n  return ms + 'ms';\n}\n\n/**\n * Long format for `ms`.\n *\n * @param {Number} ms\n * @return {String}\n * @api private\n */\n\nfunction fmtLong(ms) {\n  var msAbs = Math.abs(ms);\n  if (msAbs >= d) {\n    return plural(ms, msAbs, d, 'day');\n  }\n  if (msAbs >= h) {\n    return plural(ms, msAbs, h, 'hour');\n  }\n  if (msAbs >= m) {\n    return plural(ms, msAbs, m, 'minute');\n  }\n  if (msAbs >= s) {\n    return plural(ms, msAbs, s, 'second');\n  }\n  return ms + ' ms';\n}\n\n/**\n * Pluralization helper.\n */\n\nfunction plural(ms, msAbs, n, name) {\n  var isPlural = msAbs >= n * 1.5;\n  return Math.round(ms / n) + ' ' + name + (isPlural ? 's' : '');\n}\n","/* eslint-env node */\n'use strict';\n\n// SDP helpers.\nconst SDPUtils = {};\n\n// Generate an alphanumeric identifier for cname or mids.\n// TODO: use UUIDs instead? https://gist.github.com/jed/982883\nSDPUtils.generateIdentifier = function() {\n  return Math.random().toString(36).substring(2, 12);\n};\n\n// The RTCP CNAME used by all peerconnections from the same JS.\nSDPUtils.localCName = SDPUtils.generateIdentifier();\n\n// Splits SDP into lines, dealing with both CRLF and LF.\nSDPUtils.splitLines = function(blob) {\n  return blob.trim().split('\\n').map(line => line.trim());\n};\n// Splits SDP into sessionpart and mediasections. Ensures CRLF.\nSDPUtils.splitSections = function(blob) {\n  const parts = blob.split('\\nm=');\n  return parts.map((part, index) => (index > 0 ?\n    'm=' + part : part).trim() + '\\r\\n');\n};\n\n// Returns the session description.\nSDPUtils.getDescription = function(blob) {\n  const sections = SDPUtils.splitSections(blob);\n  return sections && sections[0];\n};\n\n// Returns the individual media sections.\nSDPUtils.getMediaSections = function(blob) {\n  const sections = SDPUtils.splitSections(blob);\n  sections.shift();\n  return sections;\n};\n\n// Returns lines that start with a certain prefix.\nSDPUtils.matchPrefix = function(blob, prefix) {\n  return SDPUtils.splitLines(blob).filter(line => line.indexOf(prefix) === 0);\n};\n\n// Parses an ICE candidate line. Sample input:\n// candidate:702786350 2 udp 41819902 8.8.8.8 60769 typ relay raddr 8.8.8.8\n// rport 55996\"\n// Input can be prefixed with a=.\nSDPUtils.parseCandidate = function(line) {\n  let parts;\n  // Parse both variants.\n  if (line.indexOf('a=candidate:') === 0) {\n    parts = line.substring(12).split(' ');\n  } else {\n    parts = line.substring(10).split(' ');\n  }\n\n  const candidate = {\n    foundation: parts[0],\n    component: {1: 'rtp', 2: 'rtcp'}[parts[1]] || parts[1],\n    protocol: parts[2].toLowerCase(),\n    priority: parseInt(parts[3], 10),\n    ip: parts[4],\n    address: parts[4], // address is an alias for ip.\n    port: parseInt(parts[5], 10),\n    // skip parts[6] == 'typ'\n    type: parts[7],\n  };\n\n  for (let i = 8; i < parts.length; i += 2) {\n    switch (parts[i]) {\n      case 'raddr':\n        candidate.relatedAddress = parts[i + 1];\n        break;\n      case 'rport':\n        candidate.relatedPort = parseInt(parts[i + 1], 10);\n        break;\n      case 'tcptype':\n        candidate.tcpType = parts[i + 1];\n        break;\n      case 'ufrag':\n        candidate.ufrag = parts[i + 1]; // for backward compatibility.\n        candidate.usernameFragment = parts[i + 1];\n        break;\n      default: // extension handling, in particular ufrag. Don't overwrite.\n        if (candidate[parts[i]] === undefined) {\n          candidate[parts[i]] = parts[i + 1];\n        }\n        break;\n    }\n  }\n  return candidate;\n};\n\n// Translates a candidate object into SDP candidate attribute.\n// This does not include the a= prefix!\nSDPUtils.writeCandidate = function(candidate) {\n  const sdp = [];\n  sdp.push(candidate.foundation);\n\n  const component = candidate.component;\n  if (component === 'rtp') {\n    sdp.push(1);\n  } else if (component === 'rtcp') {\n    sdp.push(2);\n  } else {\n    sdp.push(component);\n  }\n  sdp.push(candidate.protocol.toUpperCase());\n  sdp.push(candidate.priority);\n  sdp.push(candidate.address || candidate.ip);\n  sdp.push(candidate.port);\n\n  const type = candidate.type;\n  sdp.push('typ');\n  sdp.push(type);\n  if (type !== 'host' && candidate.relatedAddress &&\n      candidate.relatedPort) {\n    sdp.push('raddr');\n    sdp.push(candidate.relatedAddress);\n    sdp.push('rport');\n    sdp.push(candidate.relatedPort);\n  }\n  if (candidate.tcpType && candidate.protocol.toLowerCase() === 'tcp') {\n    sdp.push('tcptype');\n    sdp.push(candidate.tcpType);\n  }\n  if (candidate.usernameFragment || candidate.ufrag) {\n    sdp.push('ufrag');\n    sdp.push(candidate.usernameFragment || candidate.ufrag);\n  }\n  return 'candidate:' + sdp.join(' ');\n};\n\n// Parses an ice-options line, returns an array of option tags.\n// Sample input:\n// a=ice-options:foo bar\nSDPUtils.parseIceOptions = function(line) {\n  return line.substring(14).split(' ');\n};\n\n// Parses a rtpmap line, returns RTCRtpCoddecParameters. Sample input:\n// a=rtpmap:111 opus/48000/2\nSDPUtils.parseRtpMap = function(line) {\n  let parts = line.substring(9).split(' ');\n  const parsed = {\n    payloadType: parseInt(parts.shift(), 10), // was: id\n  };\n\n  parts = parts[0].split('/');\n\n  parsed.name = parts[0];\n  parsed.clockRate = parseInt(parts[1], 10); // was: clockrate\n  parsed.channels = parts.length === 3 ? parseInt(parts[2], 10) : 1;\n  // legacy alias, got renamed back to channels in ORTC.\n  parsed.numChannels = parsed.channels;\n  return parsed;\n};\n\n// Generates a rtpmap line from RTCRtpCodecCapability or\n// RTCRtpCodecParameters.\nSDPUtils.writeRtpMap = function(codec) {\n  let pt = codec.payloadType;\n  if (codec.preferredPayloadType !== undefined) {\n    pt = codec.preferredPayloadType;\n  }\n  const channels = codec.channels || codec.numChannels || 1;\n  return 'a=rtpmap:' + pt + ' ' + codec.name + '/' + codec.clockRate +\n      (channels !== 1 ? '/' + channels : '') + '\\r\\n';\n};\n\n// Parses a extmap line (headerextension from RFC 5285). Sample input:\n// a=extmap:2 urn:ietf:params:rtp-hdrext:toffset\n// a=extmap:2/sendonly urn:ietf:params:rtp-hdrext:toffset\nSDPUtils.parseExtmap = function(line) {\n  const parts = line.substring(9).split(' ');\n  return {\n    id: parseInt(parts[0], 10),\n    direction: parts[0].indexOf('/') > 0 ? parts[0].split('/')[1] : 'sendrecv',\n    uri: parts[1],\n    attributes: parts.slice(2).join(' '),\n  };\n};\n\n// Generates an extmap line from RTCRtpHeaderExtensionParameters or\n// RTCRtpHeaderExtension.\nSDPUtils.writeExtmap = function(headerExtension) {\n  return 'a=extmap:' + (headerExtension.id || headerExtension.preferredId) +\n      (headerExtension.direction && headerExtension.direction !== 'sendrecv'\n        ? '/' + headerExtension.direction\n        : '') +\n      ' ' + headerExtension.uri +\n      (headerExtension.attributes ? ' ' + headerExtension.attributes : '') +\n      '\\r\\n';\n};\n\n// Parses a fmtp line, returns dictionary. Sample input:\n// a=fmtp:96 vbr=on;cng=on\n// Also deals with vbr=on; cng=on\nSDPUtils.parseFmtp = function(line) {\n  const parsed = {};\n  let kv;\n  const parts = line.substring(line.indexOf(' ') + 1).split(';');\n  for (let j = 0; j < parts.length; j++) {\n    kv = parts[j].trim().split('=');\n    parsed[kv[0].trim()] = kv[1];\n  }\n  return parsed;\n};\n\n// Generates a fmtp line from RTCRtpCodecCapability or RTCRtpCodecParameters.\nSDPUtils.writeFmtp = function(codec) {\n  let line = '';\n  let pt = codec.payloadType;\n  if (codec.preferredPayloadType !== undefined) {\n    pt = codec.preferredPayloadType;\n  }\n  if (codec.parameters && Object.keys(codec.parameters).length) {\n    const params = [];\n    Object.keys(codec.parameters).forEach(param => {\n      if (codec.parameters[param] !== undefined) {\n        params.push(param + '=' + codec.parameters[param]);\n      } else {\n        params.push(param);\n      }\n    });\n    line += 'a=fmtp:' + pt + ' ' + params.join(';') + '\\r\\n';\n  }\n  return line;\n};\n\n// Parses a rtcp-fb line, returns RTCPRtcpFeedback object. Sample input:\n// a=rtcp-fb:98 nack rpsi\nSDPUtils.parseRtcpFb = function(line) {\n  const parts = line.substring(line.indexOf(' ') + 1).split(' ');\n  return {\n    type: parts.shift(),\n    parameter: parts.join(' '),\n  };\n};\n\n// Generate a=rtcp-fb lines from RTCRtpCodecCapability or RTCRtpCodecParameters.\nSDPUtils.writeRtcpFb = function(codec) {\n  let lines = '';\n  let pt = codec.payloadType;\n  if (codec.preferredPayloadType !== undefined) {\n    pt = codec.preferredPayloadType;\n  }\n  if (codec.rtcpFeedback && codec.rtcpFeedback.length) {\n    // FIXME: special handling for trr-int?\n    codec.rtcpFeedback.forEach(fb => {\n      lines += 'a=rtcp-fb:' + pt + ' ' + fb.type +\n      (fb.parameter && fb.parameter.length ? ' ' + fb.parameter : '') +\n          '\\r\\n';\n    });\n  }\n  return lines;\n};\n\n// Parses a RFC 5576 ssrc media attribute. Sample input:\n// a=ssrc:3735928559 cname:something\nSDPUtils.parseSsrcMedia = function(line) {\n  const sp = line.indexOf(' ');\n  const parts = {\n    ssrc: parseInt(line.substring(7, sp), 10),\n  };\n  const colon = line.indexOf(':', sp);\n  if (colon > -1) {\n    parts.attribute = line.substring(sp + 1, colon);\n    parts.value = line.substring(colon + 1);\n  } else {\n    parts.attribute = line.substring(sp + 1);\n  }\n  return parts;\n};\n\n// Parse a ssrc-group line (see RFC 5576). Sample input:\n// a=ssrc-group:semantics 12 34\nSDPUtils.parseSsrcGroup = function(line) {\n  const parts = line.substring(13).split(' ');\n  return {\n    semantics: parts.shift(),\n    ssrcs: parts.map(ssrc => parseInt(ssrc, 10)),\n  };\n};\n\n// Extracts the MID (RFC 5888) from a media section.\n// Returns the MID or undefined if no mid line was found.\nSDPUtils.getMid = function(mediaSection) {\n  const mid = SDPUtils.matchPrefix(mediaSection, 'a=mid:')[0];\n  if (mid) {\n    return mid.substring(6);\n  }\n};\n\n// Parses a fingerprint line for DTLS-SRTP.\nSDPUtils.parseFingerprint = function(line) {\n  const parts = line.substring(14).split(' ');\n  return {\n    algorithm: parts[0].toLowerCase(), // algorithm is case-sensitive in Edge.\n    value: parts[1].toUpperCase(), // the definition is upper-case in RFC 4572.\n  };\n};\n\n// Extracts DTLS parameters from SDP media section or sessionpart.\n// FIXME: for consistency with other functions this should only\n//   get the fingerprint line as input. See also getIceParameters.\nSDPUtils.getDtlsParameters = function(mediaSection, sessionpart) {\n  const lines = SDPUtils.matchPrefix(mediaSection + sessionpart,\n    'a=fingerprint:');\n  // Note: a=setup line is ignored since we use the 'auto' role in Edge.\n  return {\n    role: 'auto',\n    fingerprints: lines.map(SDPUtils.parseFingerprint),\n  };\n};\n\n// Serializes DTLS parameters to SDP.\nSDPUtils.writeDtlsParameters = function(params, setupType) {\n  let sdp = 'a=setup:' + setupType + '\\r\\n';\n  params.fingerprints.forEach(fp => {\n    sdp += 'a=fingerprint:' + fp.algorithm + ' ' + fp.value + '\\r\\n';\n  });\n  return sdp;\n};\n\n// Parses a=crypto lines into\n//   https://rawgit.com/aboba/edgertc/master/msortc-rs4.html#dictionary-rtcsrtpsdesparameters-members\nSDPUtils.parseCryptoLine = function(line) {\n  const parts = line.substring(9).split(' ');\n  return {\n    tag: parseInt(parts[0], 10),\n    cryptoSuite: parts[1],\n    keyParams: parts[2],\n    sessionParams: parts.slice(3),\n  };\n};\n\nSDPUtils.writeCryptoLine = function(parameters) {\n  return 'a=crypto:' + parameters.tag + ' ' +\n    parameters.cryptoSuite + ' ' +\n    (typeof parameters.keyParams === 'object'\n      ? SDPUtils.writeCryptoKeyParams(parameters.keyParams)\n      : parameters.keyParams) +\n    (parameters.sessionParams ? ' ' + parameters.sessionParams.join(' ') : '') +\n    '\\r\\n';\n};\n\n// Parses the crypto key parameters into\n//   https://rawgit.com/aboba/edgertc/master/msortc-rs4.html#rtcsrtpkeyparam*\nSDPUtils.parseCryptoKeyParams = function(keyParams) {\n  if (keyParams.indexOf('inline:') !== 0) {\n    return null;\n  }\n  const parts = keyParams.substring(7).split('|');\n  return {\n    keyMethod: 'inline',\n    keySalt: parts[0],\n    lifeTime: parts[1],\n    mkiValue: parts[2] ? parts[2].split(':')[0] : undefined,\n    mkiLength: parts[2] ? parts[2].split(':')[1] : undefined,\n  };\n};\n\nSDPUtils.writeCryptoKeyParams = function(keyParams) {\n  return keyParams.keyMethod + ':'\n    + keyParams.keySalt +\n    (keyParams.lifeTime ? '|' + keyParams.lifeTime : '') +\n    (keyParams.mkiValue && keyParams.mkiLength\n      ? '|' + keyParams.mkiValue + ':' + keyParams.mkiLength\n      : '');\n};\n\n// Extracts all SDES parameters.\nSDPUtils.getCryptoParameters = function(mediaSection, sessionpart) {\n  const lines = SDPUtils.matchPrefix(mediaSection + sessionpart,\n    'a=crypto:');\n  return lines.map(SDPUtils.parseCryptoLine);\n};\n\n// Parses ICE information from SDP media section or sessionpart.\n// FIXME: for consistency with other functions this should only\n//   get the ice-ufrag and ice-pwd lines as input.\nSDPUtils.getIceParameters = function(mediaSection, sessionpart) {\n  const ufrag = SDPUtils.matchPrefix(mediaSection + sessionpart,\n    'a=ice-ufrag:')[0];\n  const pwd = SDPUtils.matchPrefix(mediaSection + sessionpart,\n    'a=ice-pwd:')[0];\n  if (!(ufrag && pwd)) {\n    return null;\n  }\n  return {\n    usernameFragment: ufrag.substring(12),\n    password: pwd.substring(10),\n  };\n};\n\n// Serializes ICE parameters to SDP.\nSDPUtils.writeIceParameters = function(params) {\n  let sdp = 'a=ice-ufrag:' + params.usernameFragment + '\\r\\n' +\n      'a=ice-pwd:' + params.password + '\\r\\n';\n  if (params.iceLite) {\n    sdp += 'a=ice-lite\\r\\n';\n  }\n  return sdp;\n};\n\n// Parses the SDP media section and returns RTCRtpParameters.\nSDPUtils.parseRtpParameters = function(mediaSection) {\n  const description = {\n    codecs: [],\n    headerExtensions: [],\n    fecMechanisms: [],\n    rtcp: [],\n  };\n  const lines = SDPUtils.splitLines(mediaSection);\n  const mline = lines[0].split(' ');\n  description.profile = mline[2];\n  for (let i = 3; i < mline.length; i++) { // find all codecs from mline[3..]\n    const pt = mline[i];\n    const rtpmapline = SDPUtils.matchPrefix(\n      mediaSection, 'a=rtpmap:' + pt + ' ')[0];\n    if (rtpmapline) {\n      const codec = SDPUtils.parseRtpMap(rtpmapline);\n      const fmtps = SDPUtils.matchPrefix(\n        mediaSection, 'a=fmtp:' + pt + ' ');\n      // Only the first a=fmtp:<pt> is considered.\n      codec.parameters = fmtps.length ? SDPUtils.parseFmtp(fmtps[0]) : {};\n      codec.rtcpFeedback = SDPUtils.matchPrefix(\n        mediaSection, 'a=rtcp-fb:' + pt + ' ')\n        .map(SDPUtils.parseRtcpFb);\n      description.codecs.push(codec);\n      // parse FEC mechanisms from rtpmap lines.\n      switch (codec.name.toUpperCase()) {\n        case 'RED':\n        case 'ULPFEC':\n          description.fecMechanisms.push(codec.name.toUpperCase());\n          break;\n        default: // only RED and ULPFEC are recognized as FEC mechanisms.\n          break;\n      }\n    }\n  }\n  SDPUtils.matchPrefix(mediaSection, 'a=extmap:').forEach(line => {\n    description.headerExtensions.push(SDPUtils.parseExtmap(line));\n  });\n  const wildcardRtcpFb = SDPUtils.matchPrefix(mediaSection, 'a=rtcp-fb:* ')\n    .map(SDPUtils.parseRtcpFb);\n  description.codecs.forEach(codec => {\n    wildcardRtcpFb.forEach(fb=> {\n      const duplicate = codec.rtcpFeedback.find(existingFeedback => {\n        return existingFeedback.type === fb.type &&\n          existingFeedback.parameter === fb.parameter;\n      });\n      if (!duplicate) {\n        codec.rtcpFeedback.push(fb);\n      }\n    });\n  });\n  // FIXME: parse rtcp.\n  return description;\n};\n\n// Generates parts of the SDP media section describing the capabilities /\n// parameters.\nSDPUtils.writeRtpDescription = function(kind, caps) {\n  let sdp = '';\n\n  // Build the mline.\n  sdp += 'm=' + kind + ' ';\n  sdp += caps.codecs.length > 0 ? '9' : '0'; // reject if no codecs.\n  sdp += ' ' + (caps.profile || 'UDP/TLS/RTP/SAVPF') + ' ';\n  sdp += caps.codecs.map(codec => {\n    if (codec.preferredPayloadType !== undefined) {\n      return codec.preferredPayloadType;\n    }\n    return codec.payloadType;\n  }).join(' ') + '\\r\\n';\n\n  sdp += 'c=IN IP4 0.0.0.0\\r\\n';\n  sdp += 'a=rtcp:9 IN IP4 0.0.0.0\\r\\n';\n\n  // Add a=rtpmap lines for each codec. Also fmtp and rtcp-fb.\n  caps.codecs.forEach(codec => {\n    sdp += SDPUtils.writeRtpMap(codec);\n    sdp += SDPUtils.writeFmtp(codec);\n    sdp += SDPUtils.writeRtcpFb(codec);\n  });\n  let maxptime = 0;\n  caps.codecs.forEach(codec => {\n    if (codec.maxptime > maxptime) {\n      maxptime = codec.maxptime;\n    }\n  });\n  if (maxptime > 0) {\n    sdp += 'a=maxptime:' + maxptime + '\\r\\n';\n  }\n\n  if (caps.headerExtensions) {\n    caps.headerExtensions.forEach(extension => {\n      sdp += SDPUtils.writeExtmap(extension);\n    });\n  }\n  // FIXME: write fecMechanisms.\n  return sdp;\n};\n\n// Parses the SDP media section and returns an array of\n// RTCRtpEncodingParameters.\nSDPUtils.parseRtpEncodingParameters = function(mediaSection) {\n  const encodingParameters = [];\n  const description = SDPUtils.parseRtpParameters(mediaSection);\n  const hasRed = description.fecMechanisms.indexOf('RED') !== -1;\n  const hasUlpfec = description.fecMechanisms.indexOf('ULPFEC') !== -1;\n\n  // filter a=ssrc:... cname:, ignore PlanB-msid\n  const ssrcs = SDPUtils.matchPrefix(mediaSection, 'a=ssrc:')\n    .map(line => SDPUtils.parseSsrcMedia(line))\n    .filter(parts => parts.attribute === 'cname');\n  const primarySsrc = ssrcs.length > 0 && ssrcs[0].ssrc;\n  let secondarySsrc;\n\n  const flows = SDPUtils.matchPrefix(mediaSection, 'a=ssrc-group:FID')\n    .map(line => {\n      const parts = line.substring(17).split(' ');\n      return parts.map(part => parseInt(part, 10));\n    });\n  if (flows.length > 0 && flows[0].length > 1 && flows[0][0] === primarySsrc) {\n    secondarySsrc = flows[0][1];\n  }\n\n  description.codecs.forEach(codec => {\n    if (codec.name.toUpperCase() === 'RTX' && codec.parameters.apt) {\n      let encParam = {\n        ssrc: primarySsrc,\n        codecPayloadType: parseInt(codec.parameters.apt, 10),\n      };\n      if (primarySsrc && secondarySsrc) {\n        encParam.rtx = {ssrc: secondarySsrc};\n      }\n      encodingParameters.push(encParam);\n      if (hasRed) {\n        encParam = JSON.parse(JSON.stringify(encParam));\n        encParam.fec = {\n          ssrc: primarySsrc,\n          mechanism: hasUlpfec ? 'red+ulpfec' : 'red',\n        };\n        encodingParameters.push(encParam);\n      }\n    }\n  });\n  if (encodingParameters.length === 0 && primarySsrc) {\n    encodingParameters.push({\n      ssrc: primarySsrc,\n    });\n  }\n\n  // we support both b=AS and b=TIAS but interpret AS as TIAS.\n  let bandwidth = SDPUtils.matchPrefix(mediaSection, 'b=');\n  if (bandwidth.length) {\n    if (bandwidth[0].indexOf('b=TIAS:') === 0) {\n      bandwidth = parseInt(bandwidth[0].substring(7), 10);\n    } else if (bandwidth[0].indexOf('b=AS:') === 0) {\n      // use formula from JSEP to convert b=AS to TIAS value.\n      bandwidth = parseInt(bandwidth[0].substring(5), 10) * 1000 * 0.95\n          - (50 * 40 * 8);\n    } else {\n      bandwidth = undefined;\n    }\n    encodingParameters.forEach(params => {\n      params.maxBitrate = bandwidth;\n    });\n  }\n  return encodingParameters;\n};\n\n// parses http://draft.ortc.org/#rtcrtcpparameters*\nSDPUtils.parseRtcpParameters = function(mediaSection) {\n  const rtcpParameters = {};\n\n  // Gets the first SSRC. Note that with RTX there might be multiple\n  // SSRCs.\n  const remoteSsrc = SDPUtils.matchPrefix(mediaSection, 'a=ssrc:')\n    .map(line => SDPUtils.parseSsrcMedia(line))\n    .filter(obj => obj.attribute === 'cname')[0];\n  if (remoteSsrc) {\n    rtcpParameters.cname = remoteSsrc.value;\n    rtcpParameters.ssrc = remoteSsrc.ssrc;\n  }\n\n  // Edge uses the compound attribute instead of reducedSize\n  // compound is !reducedSize\n  const rsize = SDPUtils.matchPrefix(mediaSection, 'a=rtcp-rsize');\n  rtcpParameters.reducedSize = rsize.length > 0;\n  rtcpParameters.compound = rsize.length === 0;\n\n  // parses the rtcp-mux attrіbute.\n  // Note that Edge does not support unmuxed RTCP.\n  const mux = SDPUtils.matchPrefix(mediaSection, 'a=rtcp-mux');\n  rtcpParameters.mux = mux.length > 0;\n\n  return rtcpParameters;\n};\n\nSDPUtils.writeRtcpParameters = function(rtcpParameters) {\n  let sdp = '';\n  if (rtcpParameters.reducedSize) {\n    sdp += 'a=rtcp-rsize\\r\\n';\n  }\n  if (rtcpParameters.mux) {\n    sdp += 'a=rtcp-mux\\r\\n';\n  }\n  if (rtcpParameters.ssrc !== undefined && rtcpParameters.cname) {\n    sdp += 'a=ssrc:' + rtcpParameters.ssrc +\n      ' cname:' + rtcpParameters.cname + '\\r\\n';\n  }\n  return sdp;\n};\n\n\n// parses either a=msid: or a=ssrc:... msid lines and returns\n// the id of the MediaStream and MediaStreamTrack.\nSDPUtils.parseMsid = function(mediaSection) {\n  let parts;\n  const spec = SDPUtils.matchPrefix(mediaSection, 'a=msid:');\n  if (spec.length === 1) {\n    parts = spec[0].substring(7).split(' ');\n    return {stream: parts[0], track: parts[1]};\n  }\n  const planB = SDPUtils.matchPrefix(mediaSection, 'a=ssrc:')\n    .map(line => SDPUtils.parseSsrcMedia(line))\n    .filter(msidParts => msidParts.attribute === 'msid');\n  if (planB.length > 0) {\n    parts = planB[0].value.split(' ');\n    return {stream: parts[0], track: parts[1]};\n  }\n};\n\n// SCTP\n// parses draft-ietf-mmusic-sctp-sdp-26 first and falls back\n// to draft-ietf-mmusic-sctp-sdp-05\nSDPUtils.parseSctpDescription = function(mediaSection) {\n  const mline = SDPUtils.parseMLine(mediaSection);\n  const maxSizeLine = SDPUtils.matchPrefix(mediaSection, 'a=max-message-size:');\n  let maxMessageSize;\n  if (maxSizeLine.length > 0) {\n    maxMessageSize = parseInt(maxSizeLine[0].substring(19), 10);\n  }\n  if (isNaN(maxMessageSize)) {\n    maxMessageSize = 65536;\n  }\n  const sctpPort = SDPUtils.matchPrefix(mediaSection, 'a=sctp-port:');\n  if (sctpPort.length > 0) {\n    return {\n      port: parseInt(sctpPort[0].substring(12), 10),\n      protocol: mline.fmt,\n      maxMessageSize,\n    };\n  }\n  const sctpMapLines = SDPUtils.matchPrefix(mediaSection, 'a=sctpmap:');\n  if (sctpMapLines.length > 0) {\n    const parts = sctpMapLines[0]\n      .substring(10)\n      .split(' ');\n    return {\n      port: parseInt(parts[0], 10),\n      protocol: parts[1],\n      maxMessageSize,\n    };\n  }\n};\n\n// SCTP\n// outputs the draft-ietf-mmusic-sctp-sdp-26 version that all browsers\n// support by now receiving in this format, unless we originally parsed\n// as the draft-ietf-mmusic-sctp-sdp-05 format (indicated by the m-line\n// protocol of DTLS/SCTP -- without UDP/ or TCP/)\nSDPUtils.writeSctpDescription = function(media, sctp) {\n  let output = [];\n  if (media.protocol !== 'DTLS/SCTP') {\n    output = [\n      'm=' + media.kind + ' 9 ' + media.protocol + ' ' + sctp.protocol + '\\r\\n',\n      'c=IN IP4 0.0.0.0\\r\\n',\n      'a=sctp-port:' + sctp.port + '\\r\\n',\n    ];\n  } else {\n    output = [\n      'm=' + media.kind + ' 9 ' + media.protocol + ' ' + sctp.port + '\\r\\n',\n      'c=IN IP4 0.0.0.0\\r\\n',\n      'a=sctpmap:' + sctp.port + ' ' + sctp.protocol + ' 65535\\r\\n',\n    ];\n  }\n  if (sctp.maxMessageSize !== undefined) {\n    output.push('a=max-message-size:' + sctp.maxMessageSize + '\\r\\n');\n  }\n  return output.join('');\n};\n\n// Generate a session ID for SDP.\n// https://tools.ietf.org/html/draft-ietf-rtcweb-jsep-20#section-5.2.1\n// recommends using a cryptographically random +ve 64-bit value\n// but right now this should be acceptable and within the right range\nSDPUtils.generateSessionId = function() {\n  return Math.random().toString().substr(2, 22);\n};\n\n// Write boiler plate for start of SDP\n// sessId argument is optional - if not supplied it will\n// be generated randomly\n// sessVersion is optional and defaults to 2\n// sessUser is optional and defaults to 'thisisadapterortc'\nSDPUtils.writeSessionBoilerplate = function(sessId, sessVer, sessUser) {\n  let sessionId;\n  const version = sessVer !== undefined ? sessVer : 2;\n  if (sessId) {\n    sessionId = sessId;\n  } else {\n    sessionId = SDPUtils.generateSessionId();\n  }\n  const user = sessUser || 'thisisadapterortc';\n  // FIXME: sess-id should be an NTP timestamp.\n  return 'v=0\\r\\n' +\n      'o=' + user + ' ' + sessionId + ' ' + version +\n        ' IN IP4 127.0.0.1\\r\\n' +\n      's=-\\r\\n' +\n      't=0 0\\r\\n';\n};\n\n// Gets the direction from the mediaSection or the sessionpart.\nSDPUtils.getDirection = function(mediaSection, sessionpart) {\n  // Look for sendrecv, sendonly, recvonly, inactive, default to sendrecv.\n  const lines = SDPUtils.splitLines(mediaSection);\n  for (let i = 0; i < lines.length; i++) {\n    switch (lines[i]) {\n      case 'a=sendrecv':\n      case 'a=sendonly':\n      case 'a=recvonly':\n      case 'a=inactive':\n        return lines[i].substring(2);\n      default:\n        // FIXME: What should happen here?\n    }\n  }\n  if (sessionpart) {\n    return SDPUtils.getDirection(sessionpart);\n  }\n  return 'sendrecv';\n};\n\nSDPUtils.getKind = function(mediaSection) {\n  const lines = SDPUtils.splitLines(mediaSection);\n  const mline = lines[0].split(' ');\n  return mline[0].substring(2);\n};\n\nSDPUtils.isRejected = function(mediaSection) {\n  return mediaSection.split(' ', 2)[1] === '0';\n};\n\nSDPUtils.parseMLine = function(mediaSection) {\n  const lines = SDPUtils.splitLines(mediaSection);\n  const parts = lines[0].substring(2).split(' ');\n  return {\n    kind: parts[0],\n    port: parseInt(parts[1], 10),\n    protocol: parts[2],\n    fmt: parts.slice(3).join(' '),\n  };\n};\n\nSDPUtils.parseOLine = function(mediaSection) {\n  const line = SDPUtils.matchPrefix(mediaSection, 'o=')[0];\n  const parts = line.substring(2).split(' ');\n  return {\n    username: parts[0],\n    sessionId: parts[1],\n    sessionVersion: parseInt(parts[2], 10),\n    netType: parts[3],\n    addressType: parts[4],\n    address: parts[5],\n  };\n};\n\n// a very naive interpretation of a valid SDP.\nSDPUtils.isValidSDP = function(blob) {\n  if (typeof blob !== 'string' || blob.length === 0) {\n    return false;\n  }\n  const lines = SDPUtils.splitLines(blob);\n  for (let i = 0; i < lines.length; i++) {\n    if (lines[i].length < 2 || lines[i].charAt(1) !== '=') {\n      return false;\n    }\n    // TODO: check the modifier a bit more.\n  }\n  return true;\n};\n\n// Expose public methods.\nif (typeof module === 'object') {\n  module.exports = SDPUtils;\n}\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// startup\n// Load entry module and return exports\n// This entry module is referenced by other modules so it can't be inlined\nvar __webpack_exports__ = __webpack_require__(579);\n"],"names":["JanusPluginHandle","session","this","id","undefined","JanusSession","output","options","nextTxId","txns","eventHandlers","Object","assign","verbose","timeoutMs","keepaliveMs","prototype","attach","plugin","loop_index","payload","send","then","resp","data","detach","on","ev","callback","signal","sender","type","handle_id","sendMessage","body","sendJsep","jsep","sendTrickle","candidate","create","destroy","dispose","txId","_killKeepalive","hasOwnProperty","txn","clearTimeout","timeout","reject","Error","isError","janus","handlers","push","receive","_logIncoming","session_id","console","warn","responseType","i","length","transaction","resolve","toString","Promise","setTimeout","_transmit","_logOutgoing","JSON","stringify","_resetKeepalive","kind","message","debug","_sendKeepalive","keepaliveTimeout","catch","e","error","module","exports","_regeneratorRuntime","Op","hasOwn","defineProperty","obj","key","desc","value","$Symbol","Symbol","iteratorSymbol","iterator","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","define","enumerable","configurable","writable","err","wrap","innerFn","outerFn","self","tryLocsList","protoGenerator","Generator","generator","context","Context","makeInvokeMethod","tryCatch","fn","arg","call","ContinueSentinel","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","getProto","getPrototypeOf","NativeIteratorPrototype","values","Gp","defineIteratorMethods","forEach","method","_invoke","AsyncIterator","PromiseImpl","invoke","record","result","_typeof","__await","unwrapped","previousPromise","callInvokeWithMethodAndArg","state","done","delegate","delegateResult","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","methodName","TypeError","info","resultName","next","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","resetTryEntry","completion","reset","iterable","iteratorMethod","isNaN","doneResult","displayName","isGeneratorFunction","genFun","ctor","constructor","name","mark","setPrototypeOf","__proto__","awrap","async","iter","keys","val","object","reverse","pop","skipTempReset","prev","charAt","slice","stop","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","thrown","delegateYield","asyncGeneratorStep","gen","_next","_throw","_asyncToGenerator","args","arguments","apply","_defineProperties","target","props","descriptor","input","hint","prim","toPrimitive","res","String","_toPrimitive","mj","require","sendOriginal","indexOf","NAF","connection","adapter","reconnect","sdpUtils","isSafari","test","navigator","userAgent","randomDelay","min","max","delay","Math","random","debounce","curr","_this","Array","_","untilDataChannelOpen","dataChannel","readyState","resolver","rejector","clear","removeEventListener","addEventListener","isH264VideoSupported","document","createElement","canPlayType","OPUS_PARAMETERS","usedtx","stereo","DEFAULT_PEER_CONNECTION_CONFIG","iceServers","urls","JanusAdapter","instance","Constructor","_classCallCheck","room","clientId","joinToken","serverUrl","webRtcOptions","peerConnectionConfig","ws","reliableTransport","unreliableTransport","initialReconnectionDelay","reconnectionDelay","reconnectionTimeout","maxReconnectionAttempts","reconnectionAttempts","publisher","occupantIds","occupants","mediaStreams","localMediaStream","pendingMediaRequests","Map","pendingOccupants","Set","availableOccupants","requestedOccupants","blockedClients","frozenUpdates","timeOffsets","serverTimeRequests","avgTimeOffset","onWebsocketOpen","bind","onWebsocketClose","onWebsocketMessage","onDataChannelMessage","onData","protoProps","_setLocalMediaStream","_updateTimeOffset","_createSubscriber","_fixSafariIceUFrag","_createPublisher","_addOccupant","_onWebsocketOpen","url","app","roomName","successListener","failureListener","connectSuccess","connectFailure","occupantListener","onOccupantsChanged","openListener","closedListener","messageListener","onOccupantConnected","onOccupantDisconnected","onOccupantMessage","reconnectingListener","reconnectedListener","reconnectionErrorListener","onReconnecting","onReconnected","onReconnectionError","loops","_this2","concat","websocketConnection","WebSocket","wsOnOpen","all","updateTimeOffset","removeAllOccupants","conn","close","delayedReconnectTimeout","_callee","occupantId","_context","createPublisher","initialOccupants","addAvailableOccupant","syncOccupants","event","_this3","code","_this4","disconnect","connect","_this5","parse","idx","splice","has","addOccupant","j","removeOccupant","_callee2","subscriber","_context2","add","createSubscriber","setMediaStream","mediaStream","_x","msg","get","audio","video","_this6","iceConnectionState","log","performDelayedReconnect","offer","createOffer","configurePublisherSdp","fixSafariIceUFrag","local","o","setLocalDescription","remote","r","setRemoteDescription","answer","configureSubscriberSdp","createAnswer","a","_callee3","webrtcup","reliableChannel","unreliableChannel","_this7","_context3","RTCPeerConnection","parseInt","associate","createDataChannel","ordered","maxRetransmits","getTracks","track","addTrack","plugindata","room_id","user_id","removeAvailableOccupant","dispatchEvent","CustomEvent","detail","by","sendJoin","notifications","success","response","users","includes","sdp","replace","line","pt","parameters","parseFmtp","writeFmtp","payloadType","_callee4","_context4","_x2","_callee5","maxRetries","webrtcFailed","_this8","_args5","_context5","leftInterval","setInterval","clearInterval","media","_iOSHackDelayedInitialPeer","MediaStream","getReceivers","receiver","_x3","subscribe","token","frozen","unfreeze","freeze","flushPendingUpdates","networkId","l","d","dataType","dataForUpdateMultiMessage","owner","getPendingData","_step","_iterator","_createForOfIteratorHelper","s","n","_step$value","source","f","storeSingleMessage","index","storedMessage","storedData","isOutdatedMessage","lastOwnerTime","isContemporaneousMessage","isFirstSync","set","components","enabled","storeMessage","client","adapters","IS_CONNECTED","NOT_CONNECTED","_callee6","clientSentTime","serverReceivedTime","clientReceivedTime","timeOffset","_this9","_context6","isDisconnected","Date","now","fetch","location","href","cache","headers","getTime","precision","reduce","acc","offset","_this10","audioPromise","videoPromise","promise","stream","audioStream","getAudioTracks","videoStream","getVideoTracks","_callee7","existingSenders","newSenders","tracks","_loop","_this11","_context8","getSenders","t","_context7","find","replaceTrack","toLowerCase","removeTrack","_x4","whom","permsToken","_this12","_this13","register","formatArgs","useColors","namespace","humanize","diff","c","color","lastC","match","save","namespaces","storage","setItem","removeItem","load","getItem","process","env","DEBUG","window","__nwjs","documentElement","style","WebkitAppearance","firebug","table","RegExp","$1","localStorage","localstorage","warned","colors","formatters","v","createDebug","prevTime","namespacesCache","enabledCache","enableOverride","Number","ms","coerce","unshift","format","formatter","selectColor","extend","init","delimiter","newDebug","toNamespace","regexp","substring","default","stack","disable","names","map","skips","join","enable","split","len","hash","charCodeAt","abs","m","h","plural","msAbs","isPlural","round","str","exec","parseFloat","isFinite","long","fmtShort","SDPUtils","localCName","generateIdentifier","splitLines","blob","trim","splitSections","part","getDescription","sections","getMediaSections","shift","matchPrefix","prefix","filter","parseCandidate","parts","foundation","component","protocol","priority","ip","address","port","relatedAddress","relatedPort","tcpType","ufrag","usernameFragment","writeCandidate","toUpperCase","parseIceOptions","parseRtpMap","parsed","clockRate","channels","numChannels","writeRtpMap","codec","preferredPayloadType","parseExtmap","direction","uri","attributes","writeExtmap","headerExtension","preferredId","kv","params","param","parseRtcpFb","parameter","writeRtcpFb","lines","rtcpFeedback","fb","parseSsrcMedia","sp","ssrc","colon","attribute","parseSsrcGroup","semantics","ssrcs","getMid","mediaSection","mid","parseFingerprint","algorithm","getDtlsParameters","sessionpart","role","fingerprints","writeDtlsParameters","setupType","fp","parseCryptoLine","tag","cryptoSuite","keyParams","sessionParams","writeCryptoLine","writeCryptoKeyParams","parseCryptoKeyParams","keyMethod","keySalt","lifeTime","mkiValue","mkiLength","getCryptoParameters","getIceParameters","pwd","password","writeIceParameters","iceLite","parseRtpParameters","description","codecs","headerExtensions","fecMechanisms","rtcp","mline","profile","rtpmapline","fmtps","wildcardRtcpFb","existingFeedback","writeRtpDescription","caps","maxptime","extension","parseRtpEncodingParameters","encodingParameters","hasRed","hasUlpfec","primarySsrc","secondarySsrc","flows","apt","encParam","codecPayloadType","rtx","fec","mechanism","bandwidth","maxBitrate","parseRtcpParameters","rtcpParameters","remoteSsrc","cname","rsize","reducedSize","compound","mux","writeRtcpParameters","parseMsid","spec","planB","msidParts","parseSctpDescription","parseMLine","maxSizeLine","maxMessageSize","sctpPort","fmt","sctpMapLines","writeSctpDescription","sctp","generateSessionId","substr","writeSessionBoilerplate","sessId","sessVer","sessUser","sessionId","version","getDirection","getKind","isRejected","parseOLine","username","sessionVersion","netType","addressType","isValidSDP","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","__webpack_modules__"],"sourceRoot":""}